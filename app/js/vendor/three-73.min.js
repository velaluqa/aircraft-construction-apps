var THREE={REVISION:"73"};if(typeof define==="function"&&define.amd){define("three",THREE)}else{if("undefined"!==typeof exports&&"undefined"!==typeof module){module.exports=THREE}}if(self.requestAnimationFrame===undefined||self.cancelAnimationFrame===undefined){(function(){var b=0;var c=["ms","moz","webkit","o"];for(var a=0;a<c.length&&!self.requestAnimationFrame;++a){self.requestAnimationFrame=self[c[a]+"RequestAnimationFrame"];self.cancelAnimationFrame=self[c[a]+"CancelAnimationFrame"]||self[c[a]+"CancelRequestAnimationFrame"]}if(self.requestAnimationFrame===undefined&&self.setTimeout!==undefined){self.requestAnimationFrame=function(g){var d=Date.now(),e=Math.max(0,16-(d-b));var f=self.setTimeout(function(){g(d+e)},e);b=d+e;return f}}if(self.cancelAnimationFrame===undefined&&self.clearTimeout!==undefined){self.cancelAnimationFrame=function(d){self.clearTimeout(d)}}})()}if(self.performance===undefined){self.performance={}}if(self.performance.now===undefined){(function(){var a=Date.now();self.performance.now=function(){return Date.now()-a}})()}if(Number.EPSILON===undefined){Number.EPSILON=Math.pow(2,-52)}if(Math.sign===undefined){Math.sign=function(a){return(a<0)?-1:(a>0)?1:+a}}if(Function.prototype.name===undefined&&Object.defineProperty!==undefined){Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}})}THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.NeverDepth=0;THREE.AlwaysDepth=1;THREE.LessDepth=2;THREE.LessEqualDepth=3;THREE.EqualDepth=4;THREE.GreaterEqualDepth=5;THREE.GreaterDepth=6;THREE.NotEqualDepth=7;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;THREE.CubeRefractionMapping=302;THREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;THREE.SphericalReflectionMapping=305;THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.HalfFloatType=1025;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;THREE.LoopOnce=2200;THREE.LoopRepeat=2201;THREE.LoopPingPong=2202;THREE.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js.");this.projectVector=function(a,b){console.warn("THREE.Projector: .projectVector() is now vector.project().");a.project(b)};this.unprojectVector=function(a,b){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");a.unproject(b)};this.pickingRay=function(a,b){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}};THREE.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js");this.domElement=document.createElement("canvas");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.Color=function(a){if(arguments.length===3){return this.fromArray(arguments)}return this.set(a)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){if(a instanceof THREE.Color){this.copy(a)}else{if(typeof a==="number"){this.setHex(a)}else{if(typeof a==="string"){this.setStyle(a)}}}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(d,c,a){this.r=d;this.g=c;this.b=a;return this},setHSL:function(){function a(d,c,b){if(b<0){b+=1}if(b>1){b-=1}if(b<1/6){return d+(c-d)*6*b}if(b<1/2){return c}if(b<2/3){return d+(c-d)*6*(2/3-b)}return d}return function(d,c,b){d=THREE.Math.euclideanModulo(d,1);c=THREE.Math.clamp(c,0,1);b=THREE.Math.clamp(b,0,1);if(c===0){this.r=this.g=this.b=b}else{var f=b<=0.5?b*(1+c):b+c-(b*c);var e=(2*b)-f;this.r=a(e,f,d+1/3);this.g=a(e,f,d);this.b=a(e,f,d-1/3)}return this}}(),setStyle:function(a){function j(h){if(h===undefined){return}if(parseFloat(h)<1){console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}}var d;if(d=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(a)){var f;var b=d[1];var i=d[2];switch(b){case"rgb":case"rgba":if(f=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){this.r=Math.min(255,parseInt(f[1],10))/255;this.g=Math.min(255,parseInt(f[2],10))/255;this.b=Math.min(255,parseInt(f[3],10))/255;j(f[5]);return this}if(f=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){this.r=Math.min(100,parseInt(f[1],10))/100;this.g=Math.min(100,parseInt(f[2],10))/100;this.b=Math.min(100,parseInt(f[3],10))/100;j(f[5]);return this}break;case"hsl":case"hsla":if(f=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){var g=parseFloat(f[1])/360;var n=parseInt(f[2],10)/100;var e=parseInt(f[3],10)/100;j(f[5]);return this.setHSL(g,n,e)}break}}else{if(d=/^\#([A-Fa-f0-9]+)$/.exec(a)){var c=d[1];var k=c.length;if(k===3){this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255;this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255;this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255;return this}else{if(k===6){this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255;this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255;this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255;return this}}}}if(a&&a.length>0){var c=THREE.ColorKeywords[a];if(c!==undefined){this.setHex(c)}else{console.warn("THREE.Color: Unknown color "+a)}}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){if(b===undefined){b=2}this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(b,c){if(c===undefined){c=2}var a=(c>0)?(1/c):1;this.r=Math.pow(b.r,a);this.g=Math.pow(b.g,a);this.b=Math.pow(b.b,a);return this},convertGammaToLinear:function(){var d=this.r,c=this.g,a=this.b;this.r=d*d;this.g=c*c;this.b=a*a;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return(this.r*255)<<16^(this.g*255)<<8^(this.b*255)<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(m){var l=m||{h:0,s:0,l:0};var a=this.r,e=this.g,h=this.b;var i=Math.max(a,e,h);var c=Math.min(a,e,h);var f,d;var k=(c+i)/2;if(c===i){f=0;d=0}else{var j=i-c;d=k<=0.5?j/(i+c):j/(2-i-c);switch(i){case a:f=(e-h)/j+(e<h?6:0);break;case e:f=(h-a)/j+2;break;case h:f=(a-e)/j+4;break}f/=6}l.h=f;l.s=d;l.l=k;return l},getStyle:function(){return"rgb("+((this.r*255)|0)+","+((this.g*255)|0)+","+((this.b*255)|0)+")"},offsetHSL:function(d,c,a){var b=this.getHSL();b.h+=d;b.s+=c;b.l+=a;this.setHSL(b.h,b.s,b.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(b,a){this.r=b.r+a.r;this.g=b.g+a.g;this.b=b.b+a.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return(a.r===this.r)&&(a.g===this.g)&&(a.b===this.b)},fromArray:function(b,a){if(a===undefined){a=0}this.r=b[a];this.g=b[a+1];this.b=b[a+2];return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this.r;b[a+1]=this.g;b[a+2]=this.b;return b}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,d,c,b){this._x=a||0;this._y=d||0;this._z=c||0;this._w=(b!==undefined)?b:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,d,c,b){this._x=a;this._y=d;this._z=c;this._w=b;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,d){if(a instanceof THREE.Euler===false){throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}var f=Math.cos(a._x/2);var e=Math.cos(a._y/2);var c=Math.cos(a._z/2);var i=Math.sin(a._x/2);var h=Math.sin(a._y/2);var g=Math.sin(a._z/2);var b=a.order;if(b==="XYZ"){this._x=i*e*c+f*h*g;this._y=f*h*c-i*e*g;this._z=f*e*g+i*h*c;this._w=f*e*c-i*h*g}else{if(b==="YXZ"){this._x=i*e*c+f*h*g;this._y=f*h*c-i*e*g;this._z=f*e*g-i*h*c;this._w=f*e*c+i*h*g}else{if(b==="ZXY"){this._x=i*e*c-f*h*g;this._y=f*h*c+i*e*g;this._z=f*e*g+i*h*c;this._w=f*e*c-i*h*g}else{if(b==="ZYX"){this._x=i*e*c-f*h*g;this._y=f*h*c+i*e*g;this._z=f*e*g-i*h*c;this._w=f*e*c+i*h*g}else{if(b==="YZX"){this._x=i*e*c+f*h*g;this._y=f*h*c+i*e*g;this._z=f*e*g-i*h*c;this._w=f*e*c-i*h*g}else{if(b==="XZY"){this._x=i*e*c-f*h*g;this._y=f*h*c-i*e*g;this._z=f*e*g+i*h*c;this._w=f*e*c+i*h*g}}}}}}if(d!==false){this.onChangeCallback()}return this},setFromAxisAngle:function(c,d){var a=d/2,b=Math.sin(a);this._x=c.x*b;this._y=c.y*b;this._z=c.z*b;this._w=Math.cos(a);this.onChangeCallback();return this},setFromRotationMatrix:function(e){var d=e.elements,i=d[0],h=d[4],g=d[8],c=d[1],b=d[5],a=d[9],l=d[2],k=d[6],j=d[10],f=i+b+j,n;if(f>0){n=0.5/Math.sqrt(f+1);this._w=0.25/n;this._x=(k-a)*n;this._y=(g-l)*n;this._z=(c-h)*n}else{if(i>b&&i>j){n=2*Math.sqrt(1+i-b-j);this._w=(k-a)/n;this._x=0.25*n;this._y=(h+c)/n;this._z=(g+l)/n}else{if(b>j){n=2*Math.sqrt(1+b-i-j);this._w=(g-l)/n;this._x=(h+c)/n;this._y=0.25*n;this._z=(a+k)/n}else{n=2*Math.sqrt(1+j-i-b);this._w=(c-h)/n;this._x=(g+l)/n;this._y=(a+k)/n;this._z=0.25*n}}}this.onChangeCallback();return this},setFromUnitVectors:function(){var c,a;var b=0.000001;return function(d,e){if(c===undefined){c=new THREE.Vector3()}a=d.dot(e)+1;if(a<b){a=0;if(Math.abs(d.x)>Math.abs(d.z)){c.set(-d.y,d.x,0)}else{c.set(0,-d.z,d.y)}}else{c.crossVectors(d,e)}this._x=c.x;this._y=c.y;this._z=c.z;this._w=a;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();if(a===0){this._x=0;this._y=0;this._z=0;this._w=1}else{a=1/a;this._x=this._x*a;this._y=this._y*a;this._z=this._z*a;this._w=this._w*a}this.onChangeCallback();return this},multiply:function(a,b){if(b!==undefined){console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");return this.multiplyQuaternions(a,b)}return this.multiplyQuaternions(this,a)},multiplyQuaternions:function(l,k){var i=l._x,h=l._y,g=l._z,j=l._w;var e=k._x,d=k._y,c=k._z,f=k._w;this._x=i*f+j*e+h*c-g*d;this._y=h*f+j*d+g*e-i*c;this._z=g*f+j*c+i*d-h*e;this._w=j*f-i*e-h*d-g*c;this.onChangeCallback();return this},multiplyVector3:function(a){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)},slerp:function(c,k){if(k===0){return this}if(k===1){return this.copy(c)}var i=this._x,h=this._y,g=this._z,j=this._w;var b=j*c._w+i*c._x+h*c._y+g*c._z;if(b<0){this._w=-c._w;this._x=-c._x;this._y=-c._y;this._z=-c._z;b=-b}else{this.copy(c)}if(b>=1){this._w=j;this._x=i;this._y=h;this._z=g;return this}var d=Math.acos(b);var a=Math.sqrt(1-b*b);if(Math.abs(a)<0.001){this._w=0.5*(j+this._w);this._x=0.5*(i+this._x);this._y=0.5*(h+this._y);this._z=0.5*(g+this._z);return this}var f=Math.sin((1-k)*d)/a,e=Math.sin(k*d)/a;this._w=(j*f+this._w*e);this._x=(i*f+this._x*e);this._y=(h*f+this._y*e);this._z=(g*f+this._z*e);this.onChangeCallback();return this},equals:function(a){return(a._x===this._x)&&(a._y===this._y)&&(a._z===this._z)&&(a._w===this._w)},fromArray:function(b,a){if(a===undefined){a=0}this._x=b[a];this._y=b[a+1];this._z=b[a+2];this._w=b[a+3];this.onChangeCallback();return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this._x;b[a+1]=this._y;b[a+2]=this._z;b[a+3]=this._w;return b},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};THREE.Quaternion.slerp=function(d,c,b,a){return b.copy(d).slerp(c,a)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};THREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(a){this.x=a},get height(){return this.y},set height(a){this.y=a},set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+a)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(b,a){if(a!==undefined){console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(b,a)}this.x+=b.x;this.y+=b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(b,a){if(a!==undefined){console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(b,a)}this.x-=b.x;this.y-=b.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){if(isFinite(a)){this.x*=a;this.y*=a}else{this.x=0;this.y=0}return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);return this},clamp:function(b,a){this.x=Math.max(b.x,Math.min(a.x,this.x));this.y=Math.max(b.y,Math.min(a.y,this.y));return this},clampScalar:function(){var c,b;return function a(d,e){if(c===undefined){c=new THREE.Vector2();b=new THREE.Vector2()}c.set(d,d);b.set(e,e);return this.clamp(c,b)}}(),clampLength:function(b,a){var c=this.length();this.multiplyScalar(Math.max(b,Math.min(a,c))/c);return this},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=(this.x<0)?Math.ceil(this.x):Math.floor(this.x);this.y=(this.y<0)?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(c){var b=this.x-c.x,a=this.y-c.y;return b*b+a*a},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},lerpVectors:function(c,b,a){this.subVectors(b,c).multiplyScalar(a).add(c);return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y))},fromArray:function(b,a){if(a===undefined){a=0}this.x=b[a];this.y=b[a+1];return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this.x;b[a+1]=this.y;return b},fromAttribute:function(b,a,c){if(c===undefined){c=0}a=a*b.itemSize+c;this.x=b.array[a];this.y=b.array[a+1];return this},rotateAround:function(b,e){var g=Math.cos(e),d=Math.sin(e);var a=this.x-b.x;var f=this.y-b.y;this.x=a*g-f*d+b.x;this.y=a*d+f*g+b.y;return this}};THREE.Vector3=function(a,c,b){this.x=a||0;this.y=c||0;this.z=b||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,c,b){this.x=a;this.y=c;this.z=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+a)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(b,a){if(a!==undefined){console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(b,a)}this.x+=b.x;this.y+=b.y;this.z+=b.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this},sub:function(b,a){if(a!==undefined){console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(b,a)}this.x-=b.x;this.y-=b.y;this.z-=b.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},multiply:function(b,a){if(a!==undefined){console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(b,a)}this.x*=b.x;this.y*=b.y;this.z*=b.z;return this},multiplyScalar:function(a){if(isFinite(a)){this.x*=a;this.y*=a;this.z*=a}else{this.x=0;this.y=0;this.z=0}return this},multiplyVectors:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},applyEuler:function(){var a;return function b(c){if(c instanceof THREE.Euler===false){console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.")}if(a===undefined){a=new THREE.Quaternion()}this.applyQuaternion(a.setFromEuler(c));return this}}(),applyAxisAngle:function(){var a;return function b(c,d){if(a===undefined){a=new THREE.Quaternion()}this.applyQuaternion(a.setFromAxisAngle(c,d));return this}}(),applyMatrix3:function(b){var a=this.x;var f=this.y;var d=this.z;var c=b.elements;this.x=c[0]*a+c[3]*f+c[6]*d;this.y=c[1]*a+c[4]*f+c[7]*d;this.z=c[2]*a+c[5]*f+c[8]*d;return this},applyMatrix4:function(b){var a=this.x,f=this.y,d=this.z;var c=b.elements;this.x=c[0]*a+c[4]*f+c[8]*d+c[12];this.y=c[1]*a+c[5]*f+c[9]*d+c[13];this.z=c[2]*a+c[6]*f+c[10]*d+c[14];return this},applyProjection:function(b){var a=this.x,h=this.y,g=this.z;var c=b.elements;var f=1/(c[3]*a+c[7]*h+c[11]*g+c[15]);this.x=(c[0]*a+c[4]*h+c[8]*g+c[12])*f;this.y=(c[1]*a+c[5]*h+c[9]*g+c[13])*f;this.z=(c[2]*a+c[6]*h+c[10]*g+c[14])*f;return this},applyQuaternion:function(a){var l=this.x;var k=this.y;var j=this.z;var h=a.x;var g=a.y;var f=a.z;var i=a.w;var d=i*l+g*j-f*k;var c=i*k+f*l-h*j;var b=i*j+h*k-g*l;var e=-h*l-g*k-f*j;this.x=d*i+e*-h+c*-f-b*-g;this.y=c*i+e*-g+b*-h-d*-f;this.z=b*i+e*-f+d*-g-c*-h;return this},project:function(){var a;return function b(c){if(a===undefined){a=new THREE.Matrix4()}a.multiplyMatrices(c.projectionMatrix,a.getInverse(c.matrixWorld));return this.applyProjection(a)}}(),unproject:function(){var a;return function b(c){if(a===undefined){a=new THREE.Matrix4()}a.multiplyMatrices(c.matrixWorld,a.getInverse(c.projectionMatrix));return this.applyProjection(a)}}(),transformDirection:function(b){var a=this.x,f=this.y,d=this.z;var c=b.elements;this.x=c[0]*a+c[4]*f+c[8]*d;this.y=c[1]*a+c[5]*f+c[9]*d;this.z=c[2]*a+c[6]*f+c[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);return this},clamp:function(b,a){this.x=Math.max(b.x,Math.min(a.x,this.x));this.y=Math.max(b.y,Math.min(a.y,this.y));this.z=Math.max(b.z,Math.min(a.z,this.z));return this},clampScalar:function(){var c,b;return function a(d,e){if(c===undefined){c=new THREE.Vector3();b=new THREE.Vector3()}c.set(d,d,d);b.set(e,e,e);return this.clamp(c,b)}}(),clampLength:function(b,a){var c=this.length();this.multiplyScalar(Math.max(b,Math.min(a,c))/c);return this},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=(this.x<0)?Math.ceil(this.x):Math.floor(this.x);this.y=(this.y<0)?Math.ceil(this.y):Math.floor(this.y);this.z=(this.z<0)?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(c,b,a){this.subVectors(b,c).multiplyScalar(a).add(c);return this},cross:function(c,b){if(b!==undefined){console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(c,b)}var a=this.x,e=this.y,d=this.z;this.x=e*c.z-d*c.y;this.y=d*c.x-a*c.z;this.z=a*c.y-e*c.x;return this},crossVectors:function(d,c){var h=d.x,f=d.y,e=d.z;var j=c.x,i=c.y,g=c.z;this.x=f*g-e*i;this.y=e*j-h*g;this.z=h*i-f*j;return this},projectOnVector:function(){var c,a;return function b(d){if(c===undefined){c=new THREE.Vector3()}c.copy(d).normalize();a=this.dot(c);return this.copy(c).multiplyScalar(a)}}(),projectOnPlane:function(){var b;return function a(c){if(b===undefined){b=new THREE.Vector3()}b.copy(this).projectOnVector(c);return this.sub(b)}}(),reflect:function(){var b;return function a(c){if(b===undefined){b=new THREE.Vector3()}return this.sub(b.copy(c).multiplyScalar(2*this.dot(c)))}}(),angleTo:function(a){var b=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(d){var c=this.x-d.x;var b=this.y-d.y;var a=this.z-d.z;return c*c+b*b+a*a},setEulerFromRotationMatrix:function(b,a){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(b,a){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(a){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(b,a){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(b,a)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var d=this.set(a.elements[0],a.elements[1],a.elements[2]).length();var c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();var b=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=d;this.y=c;this.z=b;return this},setFromMatrixColumn:function(b,a){var d=b*4;var c=a.elements;this.x=c[d];this.y=c[d+1];this.z=c[d+2];return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y)&&(a.z===this.z))},fromArray:function(b,a){if(a===undefined){a=0}this.x=b[a];this.y=b[a+1];this.z=b[a+2];return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this.x;b[a+1]=this.y;b[a+2]=this.z;return b},fromAttribute:function(b,a,c){if(c===undefined){c=0}a=a*b.itemSize+c;this.x=b.array[a];this.y=b.array[a+1];this.z=b.array[a+2];return this}};THREE.Vector4=function(a,d,c,b){this.x=a||0;this.y=d||0;this.z=c||0;this.w=(b!==undefined)?b:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,d,c,b){this.x=a;this.y=d;this.z=c;this.w=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+a)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=(a.w!==undefined)?a.w:1;return this},add:function(b,a){if(a!==undefined){console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(b,a)}this.x+=b.x;this.y+=b.y;this.z+=b.z;this.w+=b.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;this.w=d.w+c.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this},sub:function(b,a){if(a!==undefined){console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(b,a)}this.x-=b.x;this.y-=b.y;this.z-=b.z;this.w-=b.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;this.w=d.w-c.w;return this},multiplyScalar:function(a){if(isFinite(a)){this.x*=a;this.y*=a;this.z*=a;this.w*=a}else{this.x=0;this.y=0;this.z=0;this.w=0}return this},applyMatrix4:function(b){var a=this.x;var g=this.y;var f=this.z;var c=this.w;var d=b.elements;this.x=d[0]*a+d[4]*g+d[8]*f+d[12]*c;this.y=d[1]*a+d[5]*g+d[9]*f+d[13]*c;this.z=d[2]*a+d[6]*g+d[10]*f+d[14]*c;this.w=d[3]*a+d[7]*g+d[11]*f+d[15]*c;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},setAxisAngleFromQuaternion:function(b){this.w=2*Math.acos(b.w);var a=Math.sqrt(1-b.w*b.w);if(a<0.0001){this.x=1;this.y=0;this.z=0}else{this.x=b.x/a;this.y=b.y/a;this.z=b.z/a}return this},setAxisAngleFromRotationMatrix:function(t){var u,j,i,h,D=0.01,k=0.1,g=t.elements,C=g[0],A=g[4],v=g[8],e=g[1],c=g[5],a=g[9],r=g[2],p=g[6],n=g[10];if((Math.abs(A-e)<D)&&(Math.abs(v-r)<D)&&(Math.abs(a-p)<D)){if((Math.abs(A+e)<k)&&(Math.abs(v+r)<k)&&(Math.abs(a+p)<k)&&(Math.abs(C+c+n-3)<k)){this.set(1,0,0,0);return this}u=Math.PI;var f=(C+1)/2;var q=(c+1)/2;var B=(n+1)/2;var d=(A+e)/4;var b=(v+r)/4;var o=(a+p)/4;if((f>q)&&(f>B)){if(f<D){j=0;i=0.707106781;h=0.707106781}else{j=Math.sqrt(f);i=d/j;h=b/j}}else{if(q>B){if(q<D){j=0.707106781;i=0;h=0.707106781}else{i=Math.sqrt(q);j=d/i;h=o/i}}else{if(B<D){j=0.707106781;i=0.707106781;h=0}else{h=Math.sqrt(B);j=b/h;i=o/h}}}this.set(j,i,h,u);return this}var l=Math.sqrt((p-a)*(p-a)+(v-r)*(v-r)+(e-A)*(e-A));if(Math.abs(l)<0.001){l=1}this.x=(p-a)/l;this.y=(v-r)/l;this.z=(e-A)/l;this.w=Math.acos((C+c+n-1)/2);return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this},clamp:function(b,a){this.x=Math.max(b.x,Math.min(a.x,this.x));this.y=Math.max(b.y,Math.min(a.y,this.y));this.z=Math.max(b.z,Math.min(a.z,this.z));this.w=Math.max(b.w,Math.min(a.w,this.w));return this},clampScalar:function(){var c,b;return function a(d,e){if(c===undefined){c=new THREE.Vector4();b=new THREE.Vector4()}c.set(d,d,d,d);b.set(e,e,e,e);return this.clamp(c,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=(this.x<0)?Math.ceil(this.x):Math.floor(this.x);this.y=(this.y<0)?Math.ceil(this.y):Math.floor(this.y);this.z=(this.z<0)?Math.ceil(this.z):Math.floor(this.z);this.w=(this.w<0)?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(c,b,a){this.subVectors(b,c).multiplyScalar(a).add(c);return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y)&&(a.z===this.z)&&(a.w===this.w))},fromArray:function(b,a){if(a===undefined){a=0}this.x=b[a];this.y=b[a+1];this.z=b[a+2];this.w=b[a+3];return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this.x;b[a+1]=this.y;b[a+2]=this.z;b[a+3]=this.w;return b},fromAttribute:function(b,a,c){if(c===undefined){c=0}a=a*b.itemSize+c;this.x=b.array[a];this.y=b.array[a+1];this.z=b.array[a+2];this.w=b.array[a+3];return this}};THREE.Euler=function(b,d,c,a){this._x=b||0;this._y=d||0;this._z=c||0;this._order=a||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(b,d,c,a){this._x=b;this._y=d;this._z=c;this._order=a||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(e,f,g){var j=THREE.Math.clamp;var d=e.elements;var k=d[0],i=d[4],h=d[8];var c=d[1],b=d[5],a=d[9];var o=d[2],n=d[6],l=d[10];f=f||this._order;if(f==="XYZ"){this._y=Math.asin(j(h,-1,1));if(Math.abs(h)<0.99999){this._x=Math.atan2(-a,l);this._z=Math.atan2(-i,k)}else{this._x=Math.atan2(n,b);this._z=0}}else{if(f==="YXZ"){this._x=Math.asin(-j(a,-1,1));if(Math.abs(a)<0.99999){this._y=Math.atan2(h,l);this._z=Math.atan2(c,b)}else{this._y=Math.atan2(-o,k);this._z=0}}else{if(f==="ZXY"){this._x=Math.asin(j(n,-1,1));if(Math.abs(n)<0.99999){this._y=Math.atan2(-o,l);this._z=Math.atan2(-i,b)}else{this._y=0;this._z=Math.atan2(c,k)}}else{if(f==="ZYX"){this._y=Math.asin(-j(o,-1,1));if(Math.abs(o)<0.99999){this._x=Math.atan2(n,l);this._z=Math.atan2(c,k)}else{this._x=0;this._z=Math.atan2(-i,b)}}else{if(f==="YZX"){this._z=Math.asin(j(c,-1,1));if(Math.abs(c)<0.99999){this._x=Math.atan2(-a,b);this._y=Math.atan2(-o,k)}else{this._x=0;this._y=Math.atan2(h,l)}}else{if(f==="XZY"){this._z=Math.asin(-j(i,-1,1));if(Math.abs(i)<0.99999){this._x=Math.atan2(n,b);this._y=Math.atan2(h,k)}else{this._x=Math.atan2(-a,l);this._y=0}}else{console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+f)}}}}}}this._order=f;if(g!==false){this.onChangeCallback()}return this},setFromQuaternion:function(){var a;return function(c,b,d){if(a===undefined){a=new THREE.Matrix4()}a.makeRotationFromQuaternion(c);this.setFromRotationMatrix(a,b,d);return this}}(),setFromVector3:function(b,a){return this.set(b.x,b.y,b.z,a||this._order)},reorder:function(){var a=new THREE.Quaternion();return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),equals:function(a){return(a._x===this._x)&&(a._y===this._y)&&(a._z===this._z)&&(a._order===this._order)},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];if(a[3]!==undefined){this._order=a[3]}this.onChangeCallback();return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this._x;b[a+1]=this._y;b[a+2]=this._z;b[a+3]=this._order;return b},toVector3:function(a){if(a){return a.set(this._x,this._y,this._z)}else{return new THREE.Vector3(this._x,this._y,this._z)}},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};THREE.Line3=function(b,a){this.start=(b!==undefined)?b:new THREE.Vector3();this.end=(a!==undefined)?a:new THREE.Vector3()};THREE.Line3.prototype={constructor:THREE.Line3,set:function(b,a){this.start.copy(b);this.end.copy(a);return this},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(b){var a=b||new THREE.Vector3();return a.addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(b){var a=b||new THREE.Vector3();return a.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(c,b){var a=b||new THREE.Vector3();return this.delta(a).multiplyScalar(c).add(this.start)},closestPointToPointParameter:function(){var b=new THREE.Vector3();var a=new THREE.Vector3();return function(c,g){b.subVectors(c,this.start);a.subVectors(this.end,this.start);var f=a.dot(a);var e=a.dot(b);var d=e/f;if(g){d=THREE.Math.clamp(d,0,1)}return d}}(),closestPointToPoint:function(b,e,d){var c=this.closestPointToPointParameter(b,e);var a=d||new THREE.Vector3();return this.delta(a).multiplyScalar(c).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}};THREE.Box2=function(b,a){this.min=(b!==undefined)?b:new THREE.Vector2(Infinity,Infinity);this.max=(a!==undefined)?a:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(b,a){this.min.copy(b);this.max.copy(a);return this},setFromPoints:function(c){this.makeEmpty();for(var b=0,a=c.length;b<a;b++){this.expandByPoint(c[b])}return this},setFromCenterAndSize:function(){var a=new THREE.Vector2();return function(b,d){var c=a.copy(d).multiplyScalar(0.5);this.min.copy(b).sub(c);this.max.copy(b).add(c);return this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return(this.max.x<this.min.x)||(this.max.y<this.min.y)},center:function(b){var a=b||new THREE.Vector2();return a.addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){var a=b||new THREE.Vector2();return a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){if(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y){return false}return true},containsBox:function(a){if((this.min.x<=a.min.x)&&(a.max.x<=this.max.x)&&(this.min.y<=a.min.y)&&(a.max.y<=this.max.y)){return true}return false},getParameter:function(b,c){var a=c||new THREE.Vector2();return a.set((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){if(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y){return false}return true},clampPoint:function(b,c){var a=c||new THREE.Vector2();return a.copy(b).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2();return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}};THREE.Box3=function(b,a){this.min=(b!==undefined)?b:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=(a!==undefined)?a:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(b,a){this.min.copy(b);this.max.copy(a);return this},setFromPoints:function(c){this.makeEmpty();for(var b=0,a=c.length;b<a;b++){this.expandByPoint(c[b])}return this},setFromCenterAndSize:function(){var a=new THREE.Vector3();return function(b,d){var c=a.copy(d).multiplyScalar(0.5);this.min.copy(b).sub(c);this.max.copy(b).add(c);return this}}(),setFromObject:function(){var a=new THREE.Vector3();return function(b){var c=this;b.updateMatrixWorld(true);this.makeEmpty();b.traverse(function(h){var j=h.geometry;if(j!==undefined){if(j instanceof THREE.Geometry){var f=j.vertices;for(var g=0,e=f.length;g<e;g++){a.copy(f[g]);a.applyMatrix4(h.matrixWorld);c.expandByPoint(a)}}else{if(j instanceof THREE.BufferGeometry&&j.attributes.position!==undefined){var d=j.attributes.position.array;for(var g=0,e=d.length;g<e;g+=3){a.set(d[g],d[g+1],d[g+2]);a.applyMatrix4(h.matrixWorld);c.expandByPoint(a)}}}}});return this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return(this.max.x<this.min.x)||(this.max.y<this.min.y)||(this.max.z<this.min.z)},center:function(b){var a=b||new THREE.Vector3();return a.addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){var a=b||new THREE.Vector3();return a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){if(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z){return false}return true},containsBox:function(a){if((this.min.x<=a.min.x)&&(a.max.x<=this.max.x)&&(this.min.y<=a.min.y)&&(a.max.y<=this.max.y)&&(this.min.z<=a.min.z)&&(a.max.z<=this.max.z)){return true}return false},getParameter:function(b,c){var a=c||new THREE.Vector3();return a.set((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y),(b.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){if(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z){return false}return true},clampPoint:function(b,c){var a=c||new THREE.Vector3();return a.copy(b).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3();return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3();return function(c){var b=c||new THREE.Sphere();b.center=this.center();b.radius=this.size(a).length()*0.5;return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];return function(b){a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);if(arguments.length>0){console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(h,g,f,e,d,c,a,j,i){var b=this.elements;b[0]=h;b[3]=g;b[6]=f;b[1]=e;b[4]=d;b[7]=c;b[2]=a;b[5]=j;b[8]=i;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(a){var b=a.elements;this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]);return this},multiplyVector3:function(a){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},multiplyVector3Array:function(b){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(b)},applyToVector3Array:function(){var a;return function(f,e,d){if(a===undefined){a=new THREE.Vector3()}if(e===undefined){e=0}if(d===undefined){d=f.length}for(var c=0,b=e;c<d;c+=3,b+=3){a.fromArray(f,b);a.applyMatrix3(this);a.toArray(f,b)}return f}}(),applyToBuffer:function(){var b;return function a(c,g,f){if(b===undefined){b=new THREE.Vector3()}if(g===undefined){g=0}if(f===undefined){f=c.length/c.itemSize}for(var e=0,d=g;e<f;e++,d++){b.x=c.getX(d);b.y=c.getY(d);b.z=c.getZ(d);b.applyMatrix3(this);c.setXYZ(b.x,b.y,b.z)}return c}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var j=this.elements;var s=j[0],r=j[1],q=j[2],p=j[3],o=j[4],n=j[5],m=j[6],l=j[7],k=j[8];return s*o*k-s*n*l-r*p*k+r*n*m+q*p*l-q*o*m},getInverse:function(b,a){var d=b.elements;var f=this.elements;f[0]=d[10]*d[5]-d[6]*d[9];f[1]=-d[10]*d[1]+d[2]*d[9];f[2]=d[6]*d[1]-d[2]*d[5];f[3]=-d[10]*d[4]+d[6]*d[8];f[4]=d[10]*d[0]-d[2]*d[8];f[5]=-d[6]*d[0]+d[2]*d[4];f[6]=d[9]*d[4]-d[5]*d[8];f[7]=-d[9]*d[0]+d[1]*d[8];f[8]=d[5]*d[0]-d[1]*d[4];var c=d[0]*f[0]+d[1]*f[3]+d[2]*f[6];if(c===0){var e="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(a||false){throw new Error(e)}else{console.warn(e)}this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var b,a=this.elements;b=a[1];a[1]=a[3];a[3]=b;b=a[2];a[2]=a[6];a[6]=b;b=a[5];a[5]=a[7];a[7]=b;return this},flattenToArrayOffset:function(c,b){var a=this.elements;c[b]=a[0];c[b+1]=a[1];c[b+2]=a[2];c[b+3]=a[3];c[b+4]=a[4];c[b+5]=a[5];c[b+6]=a[6];c[b+7]=a[7];c[b+8]=a[8];return c},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(b){var a=this.elements;b[0]=a[0];b[1]=a[3];b[2]=a[6];b[3]=a[1];b[4]=a[4];b[5]=a[7];b[6]=a[2];b[7]=a[5];b[8]=a[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]}};THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);if(arguments.length>0){console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(n,m,k,i,f,e,d,c,a,q,p,o,l,j,h,g){var b=this.elements;b[0]=n;b[4]=m;b[8]=k;b[12]=i;b[1]=f;b[5]=e;b[9]=d;b[13]=c;b[2]=a;b[6]=q;b[10]=p;b[14]=o;b[3]=l;b[7]=j;b[11]=h;b[15]=g;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return new THREE.Matrix4().fromArray(this.elements)},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(a)},copyPosition:function(a){var c=this.elements;var b=a.elements;c[12]=b[12];c[13]=b[13];c[14]=b[14];return this},extractBasis:function(b,a,c){var d=this.elements;b.set(d[0],d[1],d[2]);a.set(d[4],d[5],d[6]);c.set(d[8],d[9],d[10]);return this},makeBasis:function(b,a,c){this.set(b.x,a.x,c.x,0,b.y,a.y,c.y,0,b.z,a.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a;return function(b){if(a===undefined){a=new THREE.Vector3()}var g=this.elements;var f=b.elements;var e=1/a.set(f[0],f[1],f[2]).length();var d=1/a.set(f[4],f[5],f[6]).length();var c=1/a.set(f[8],f[9],f[10]).length();g[0]=f[0]*e;g[1]=f[1]*e;g[2]=f[2]*e;g[4]=f[4]*d;g[5]=f[5]*d;g[6]=f[6]*d;g[8]=f[8]*c;g[9]=f[9]*c;g[10]=f[10]*c;return this}}(),makeRotationFromEuler:function(o){if(o instanceof THREE.Euler===false){console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}var k=this.elements;var n=o.x,m=o.y,l=o.z;var G=Math.cos(n),F=Math.sin(n);var D=Math.cos(m),A=Math.sin(m);var t=Math.cos(l),r=Math.sin(l);if(o.order==="XYZ"){var v=G*t,s=G*r,h=F*t,g=F*r;k[0]=D*t;k[4]=-D*r;k[8]=A;k[1]=s+h*A;k[5]=v-g*A;k[9]=-F*D;k[2]=g-v*A;k[6]=h+s*A;k[10]=G*D}else{if(o.order==="YXZ"){var q=D*t,p=D*r,C=A*t,u=A*r;k[0]=q+u*F;k[4]=C*F-p;k[8]=G*A;k[1]=G*r;k[5]=G*t;k[9]=-F;k[2]=p*F-C;k[6]=u+q*F;k[10]=G*D}else{if(o.order==="ZXY"){var q=D*t,p=D*r,C=A*t,u=A*r;k[0]=q-u*F;k[4]=-G*r;k[8]=C+p*F;k[1]=p+C*F;k[5]=G*t;k[9]=u-q*F;k[2]=-G*A;k[6]=F;k[10]=G*D}else{if(o.order==="ZYX"){var v=G*t,s=G*r,h=F*t,g=F*r;k[0]=D*t;k[4]=h*A-s;k[8]=v*A+g;k[1]=D*r;k[5]=g*A+v;k[9]=s*A-h;k[2]=-A;k[6]=F*D;k[10]=G*D}else{if(o.order==="YZX"){var E=G*D,B=G*A,j=F*D,i=F*A;k[0]=D*t;k[4]=i-E*r;k[8]=j*r+B;k[1]=r;k[5]=G*t;k[9]=-F*t;k[2]=-A*t;k[6]=B*r+j;k[10]=E-i*r}else{if(o.order==="XZY"){var E=G*D,B=G*A,j=F*D,i=F*A;k[0]=D*t;k[4]=-r;k[8]=A*t;k[1]=E*r+i;k[5]=G*t;k[9]=B*r-j;k[2]=j*r-B;k[6]=F*t;k[10]=i*r+E}}}}}}k[3]=0;k[7]=0;k[11]=0;k[12]=0;k[13]=0;k[14]=0;k[15]=1;return this},setRotationFromQuaternion:function(a){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(l){var e=this.elements;var h=l.x,g=l.y,f=l.z,i=l.w;var n=h+h,a=g+g,j=f+f;var d=h*n,c=h*a,b=h*j;var m=g*a,k=g*j,r=f*j;var s=i*n,p=i*a,o=i*j;e[0]=1-(m+r);e[4]=c-o;e[8]=b+p;e[1]=c+o;e[5]=1-(d+r);e[9]=k-s;e[2]=b-p;e[6]=k+s;e[10]=1-(d+m);e[3]=0;e[7]=0;e[11]=0;e[12]=0;e[13]=0;e[14]=0;e[15]=1;return this},lookAt:function(){var a,c,b;return function(e,f,d){if(a===undefined){a=new THREE.Vector3()}if(c===undefined){c=new THREE.Vector3()}if(b===undefined){b=new THREE.Vector3()}var g=this.elements;b.subVectors(e,f).normalize();if(b.lengthSq()===0){b.z=1}a.crossVectors(d,b).normalize();if(a.lengthSq()===0){b.x+=0.0001;a.crossVectors(d,b).normalize()}c.crossVectors(b,a);g[0]=a.x;g[4]=c.x;g[8]=b.x;g[1]=a.y;g[5]=c.y;g[9]=b.y;g[2]=a.z;g[6]=c.z;g[10]=b.z;return this}}(),multiply:function(a,b){if(b!==undefined){console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");return this.multiplyMatrices(a,b)}return this.multiplyMatrices(this,a)},multiplyMatrices:function(Q,P){var s=Q.elements;var O=P.elements;var c=this.elements;var p=s[0],n=s[4],m=s[8],l=s[12];var N=s[1],M=s[5],L=s[9],K=s[13];var F=s[2],E=s[6],D=s[10],C=s[14];var t=s[3],r=s[7],q=s[11],o=s[15];var i=O[0],g=O[4],e=O[8],d=O[12];var J=O[1],I=O[5],H=O[9],G=O[13];var B=O[2],A=O[6],v=O[10],u=O[14];var k=O[3],j=O[7],h=O[11],f=O[15];c[0]=p*i+n*J+m*B+l*k;c[4]=p*g+n*I+m*A+l*j;c[8]=p*e+n*H+m*v+l*h;c[12]=p*d+n*G+m*u+l*f;c[1]=N*i+M*J+L*B+K*k;c[5]=N*g+M*I+L*A+K*j;c[9]=N*e+M*H+L*v+K*h;c[13]=N*d+M*G+L*u+K*f;c[2]=F*i+E*J+D*B+C*k;c[6]=F*g+E*I+D*A+C*j;c[10]=F*e+E*H+D*v+C*h;c[14]=F*d+E*G+D*u+C*f;c[3]=t*i+r*J+q*B+o*k;c[7]=t*g+r*I+q*A+o*j;c[11]=t*e+r*H+q*v+o*h;c[15]=t*d+r*G+q*u+o*f;return this},multiplyToArray:function(d,c,e){var f=this.elements;this.multiplyMatrices(d,c);e[0]=f[0];e[1]=f[1];e[2]=f[2];e[3]=f[3];e[4]=f[4];e[5]=f[5];e[6]=f[6];e[7]=f[7];e[8]=f[8];e[9]=f[9];e[10]=f[10];e[11]=f[11];e[12]=f[12];e[13]=f[13];e[14]=f[14];e[15]=f[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return a.applyProjection(this)},multiplyVector4:function(a){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(b){console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(b)},applyToVector3Array:function(){var a;return function(f,e,d){if(a===undefined){a=new THREE.Vector3()}if(e===undefined){e=0}if(d===undefined){d=f.length}for(var c=0,b=e;c<d;c+=3,b+=3){a.fromArray(f,b);a.applyMatrix4(this);a.toArray(f,b)}return f}}(),applyToBuffer:function(){var b;return function a(c,g,f){if(b===undefined){b=new THREE.Vector3()}if(g===undefined){g=0}if(f===undefined){f=c.length/c.itemSize}for(var e=0,d=g;e<f;e++,d++){b.x=c.getX(d);b.y=c.getY(d);b.z=c.getZ(d);b.applyMatrix4(this);c.setXYZ(b.x,b.y,b.z)}return c}}(),rotateAxis:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");a.transformDirection(this)},crossVector:function(a){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},determinant:function(){var c=this.elements;var n=c[0],m=c[4],k=c[8],i=c[12];var f=c[1],e=c[5],d=c[9],b=c[13];var a=c[2],q=c[6],p=c[10],o=c[14];var l=c[3],j=c[7],h=c[11],g=c[15];return(l*(+i*d*q-k*b*q-i*e*p+m*b*p+k*e*o-m*d*o)+j*(+n*d*o-n*b*p+i*f*p-k*f*o+k*b*a-i*d*a)+h*(+n*b*q-n*e*o-i*f*q+m*f*o+i*e*a-m*b*a)+g*(-k*e*a-n*d*q+n*e*p+k*f*q-m*f*p+m*d*a))},transpose:function(){var b=this.elements;var a;a=b[1];b[1]=b[4];b[4]=a;a=b[2];b[2]=b[8];b[8]=a;a=b[6];b[6]=b[9];b[9]=a;a=b[3];b[3]=b[12];b[12]=a;a=b[7];b[7]=b[13];b[13]=a;a=b[11];b[11]=b[14];b[14]=a;return this},flattenToArrayOffset:function(c,b){var a=this.elements;c[b]=a[0];c[b+1]=a[1];c[b+2]=a[2];c[b+3]=a[3];c[b+4]=a[4];c[b+5]=a[5];c[b+6]=a[6];c[b+7]=a[7];c[b+8]=a[8];c[b+9]=a[9];c[b+10]=a[10];c[b+11]=a[11];c[b+12]=a[12];c[b+13]=a[13];c[b+14]=a[14];c[b+15]=a[15];return c},getPosition:function(){var a;return function(){if(a===undefined){a=new THREE.Vector3()}console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(r,h){var g=this.elements;var A=r.elements;var p=A[0],n=A[4],k=A[8],i=A[12];var v=A[1],u=A[5],t=A[9],s=A[13];var d=A[2],c=A[6],b=A[10],a=A[14];var q=A[3],o=A[7],l=A[11],j=A[15];g[0]=t*a*o-s*b*o+s*c*l-u*a*l-t*c*j+u*b*j;g[4]=i*b*o-k*a*o-i*c*l+n*a*l+k*c*j-n*b*j;g[8]=k*s*o-i*t*o+i*u*l-n*s*l-k*u*j+n*t*j;g[12]=i*t*c-k*s*c-i*u*b+n*s*b+k*u*a-n*t*a;g[1]=s*b*q-t*a*q-s*d*l+v*a*l+t*d*j-v*b*j;g[5]=k*a*q-i*b*q+i*d*l-p*a*l-k*d*j+p*b*j;g[9]=i*t*q-k*s*q-i*v*l+p*s*l+k*v*j-p*t*j;g[13]=k*s*d-i*t*d+i*v*b-p*s*b-k*v*a+p*t*a;g[2]=u*a*q-s*c*q+s*d*o-v*a*o-u*d*j+v*c*j;g[6]=i*c*q-n*a*q-i*d*o+p*a*o+n*d*j-p*c*j;g[10]=n*s*q-i*u*q+i*v*o-p*s*o-n*v*j+p*u*j;g[14]=i*u*d-n*s*d-i*v*c+p*s*c+n*v*a-p*u*a;g[3]=t*c*q-u*b*q-t*d*o+v*b*o+u*d*l-v*c*l;g[7]=n*b*q-k*c*q+k*d*o-p*b*o-n*d*l+p*c*l;g[11]=k*u*q-n*t*q-k*v*o+p*t*o+n*v*l-p*u*l;g[15]=n*t*d-k*u*d+k*v*c-p*t*c-n*v*b+p*u*b;var e=p*g[0]+v*g[4]+d*g[8]+q*g[12];if(e===0){var f="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(h||false){throw new Error(f)}else{console.warn(f)}this.identity();return this}this.multiplyScalar(1/e);return this},translate:function(a){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(a){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(a){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(a){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(a,b){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(b){var d=this.elements;var a=b.x,e=b.y,c=b.z;d[0]*=a;d[4]*=e;d[8]*=c;d[1]*=a;d[5]*=e;d[9]*=c;d[2]*=a;d[6]*=e;d[10]*=c;d[3]*=a;d[7]*=e;d[11]*=c;return this},getMaxScaleOnAxis:function(){var c=this.elements;var d=c[0]*c[0]+c[1]*c[1]+c[2]*c[2];var b=c[4]*c[4]+c[5]*c[5]+c[6]*c[6];var a=c[8]*c[8]+c[9]*c[9]+c[10]*c[10];return Math.sqrt(Math.max(d,b,a))},makeTranslation:function(a,c,b){this.set(1,0,0,a,0,1,0,c,0,0,1,b,0,0,0,1);return this},makeRotationX:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(1,0,0,0,0,d,-b,0,0,b,d,0,0,0,0,1);return this},makeRotationY:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(d,0,b,0,0,1,0,0,-b,0,d,0,0,0,0,1);return this},makeRotationZ:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(d,-b,0,0,b,d,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var f=Math.cos(b);var k=Math.sin(b);var j=1-f;var i=a.x,h=a.y,g=a.z;var e=j*i,d=j*h;this.set(e*i+f,e*h-k*g,e*g+k*h,0,e*h+k*g,d*h+f,d*g-k*i,0,e*g-k*h,d*g+k*i,j*g*g+f,0,0,0,0,1);return this},makeScale:function(a,c,b){this.set(a,0,0,0,0,c,0,0,0,0,b,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a,b;return function(i,h,g){if(a===undefined){a=new THREE.Vector3()}if(b===undefined){b=new THREE.Matrix4()}var f=this.elements;var m=a.set(f[0],f[1],f[2]).length();var l=a.set(f[4],f[5],f[6]).length();var k=a.set(f[8],f[9],f[10]).length();var j=this.determinant();if(j<0){m=-m}i.x=f[12];i.y=f[13];i.z=f[14];b.elements.set(this.elements);var e=1/m;var d=1/l;var c=1/k;b.elements[0]*=e;b.elements[1]*=e;b.elements[2]*=e;b.elements[4]*=d;b.elements[5]*=d;b.elements[6]*=d;b.elements[8]*=c;b.elements[9]*=c;b.elements[10]*=c;h.setFromRotationMatrix(b);g.x=m;g.y=l;g.z=k;return this}}(),makeFrustum:function(g,q,e,n,i,h){var f=this.elements;var p=2*i/(q-g);var m=2*i/(n-e);var o=(q+g)/(q-g);var l=(n+e)/(n-e);var k=-(h+i)/(h-i);var j=-2*h*i/(h-i);f[0]=p;f[4]=0;f[8]=o;f[12]=0;f[1]=0;f[5]=m;f[9]=l;f[13]=0;f[2]=0;f[6]=0;f[10]=k;f[14]=j;f[3]=0;f[7]=0;f[11]=-1;f[15]=0;return this},makePerspective:function(e,c,g,b){var a=g*Math.tan(THREE.Math.degToRad(e*0.5));var f=-a;var h=f*c;var d=a*c;return this.makeFrustum(h,d,f,a,g,b)},makeOrthographic:function(d,n,k,a,g,f){var c=this.elements;var m=n-d;var e=k-a;var b=f-g;var l=(n+d)/m;var j=(k+a)/e;var i=(f+g)/b;c[0]=2/m;c[4]=0;c[8]=0;c[12]=-l;c[1]=0;c[5]=2/e;c[9]=0;c[13]=-j;c[2]=0;c[6]=0;c[10]=-2/b;c[14]=-i;c[3]=0;c[7]=0;c[11]=0;c[15]=1;return this},equals:function(a){var d=this.elements;var c=a.elements;for(var b=0;b<16;b++){if(d[b]!==c[b]){return false}}return true},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]}};THREE.Ray=function(a,b){this.origin=(a!==undefined)?a:new THREE.Vector3();this.direction=(b!==undefined)?b:new THREE.Vector3()};THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(c,b){var a=b||new THREE.Vector3();return a.copy(this.direction).multiplyScalar(c).add(this.origin)},recast:function(){var a=new THREE.Vector3();return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(b,c){var a=c||new THREE.Vector3();a.subVectors(b,this.origin);var d=a.dot(this.direction);if(d<0){return a.copy(this.origin)}return a.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(){var a=new THREE.Vector3();return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(c<0){return this.origin.distanceToSquared(b)}a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceToSquared(b)}}(),distanceSqToSegment:function(){var b=new THREE.Vector3();var a=new THREE.Vector3();var c=new THREE.Vector3();return function(p,l,m,f){b.copy(p).add(l).multiplyScalar(0.5);a.copy(l).sub(p).normalize();c.copy(this.origin).sub(b);var h=p.distanceTo(l)*0.5;var d=-this.direction.dot(a);var n=c.dot(this.direction);var k=-c.dot(a);var j=c.lengthSq();var i=Math.abs(1-d*d);var r,o,e,q;if(i>0){r=d*k-n;o=d*n-k;q=h*i;if(r>=0){if(o>=-q){if(o<=q){var g=1/i;r*=g;o*=g;e=r*(r+d*o+2*n)+o*(d*r+o+2*k)+j}else{o=h;r=Math.max(0,-(d*o+n));e=-r*r+o*(o+2*k)+j}}else{o=-h;r=Math.max(0,-(d*o+n));e=-r*r+o*(o+2*k)+j}}else{if(o<=-q){r=Math.max(0,-(-d*h+n));o=(r>0)?-h:Math.min(Math.max(-h,-k),h);e=-r*r+o*(o+2*k)+j}else{if(o<=q){r=0;o=Math.min(Math.max(-h,-k),h);e=o*(o+2*k)+j}else{r=Math.max(0,-(d*h+n));o=(r>0)?h:Math.min(Math.max(-h,-k),h);e=-r*r+o*(o+2*k)+j}}}}else{o=(d>0)?-h:h;r=Math.max(0,-(d*o+n));e=-r*r+o*(o+2*k)+j}if(m){m.copy(this.direction).multiplyScalar(r).add(this.origin)}if(f){f.copy(a).multiplyScalar(o).add(b)}return e}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},intersectSphere:function(){var a=new THREE.Vector3();return function(b,d){a.subVectors(b.center,this.origin);var i=a.dot(this.direction);var f=a.dot(a)-i*i;var c=b.radius*b.radius;if(f>c){return null}var h=Math.sqrt(c-f);var g=i-h;var e=i+h;if(g<0&&e<0){return null}if(g<0){return this.at(e,d)}return this.at(g,d)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);if(b===0){return true}var c=a.normal.dot(this.direction);if(c*b<0){return true}return false},distanceToPlane:function(a){var c=a.normal.dot(this.direction);if(c===0){if(a.distanceToPoint(this.origin)===0){return 0}return null}var b=-(this.origin.dot(a.normal)+a.constant)/c;return b>=0?b:null},intersectPlane:function(a,c){var b=this.distanceToPlane(a);if(b===null){return null}return this.at(b,c)},isIntersectionBox:function(){var a=new THREE.Vector3();return function(b){return this.intersectBox(b,a)!==null}}(),intersectBox:function(f,l){var c,g,i,a,h,k;var e=1/this.direction.x,d=1/this.direction.y,b=1/this.direction.z;var j=this.origin;if(e>=0){c=(f.min.x-j.x)*e;g=(f.max.x-j.x)*e}else{c=(f.max.x-j.x)*e;g=(f.min.x-j.x)*e}if(d>=0){i=(f.min.y-j.y)*d;a=(f.max.y-j.y)*d}else{i=(f.max.y-j.y)*d;a=(f.min.y-j.y)*d}if((c>a)||(i>g)){return null}if(i>c||c!==c){c=i}if(a<g||g!==g){g=a}if(b>=0){h=(f.min.z-j.z)*b;k=(f.max.z-j.z)*b}else{h=(f.max.z-j.z)*b;k=(f.min.z-j.z)*b}if((c>k)||(h>g)){return null}if(h>c||c!==c){c=h}if(k<g||g!==g){g=k}if(g<0){return null}return this.at(c>=0?c:g,l)},intersectTriangle:function(){var d=new THREE.Vector3();var b=new THREE.Vector3();var a=new THREE.Vector3();var c=new THREE.Vector3();return function(m,k,j,e,n){b.subVectors(k,m);a.subVectors(j,m);c.crossVectors(b,a);var i=this.direction.dot(c);var f;if(i>0){if(e){return null}f=1}else{if(i<0){f=-1;i=-i}else{return null}}d.subVectors(this.origin,m);var l=f*this.direction.dot(a.crossVectors(d,a));if(l<0){return null}var g=f*this.direction.dot(b.cross(d));if(g<0){return null}if(l+g>i){return null}var h=-f*d.dot(c);if(h<0){return null}return this.at(h/i,n)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}};THREE.Sphere=function(b,a){this.center=(b!==undefined)?b:new THREE.Vector3();this.radius=(a!==undefined)?a:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(b,a){this.center.copy(b);this.radius=a;return this},setFromPoints:function(){var a=new THREE.Box3();return function(f,g){var b=this.center;if(g!==undefined){b.copy(g)}else{a.setFromPoints(f).center(b)}var c=0;for(var e=0,d=f.length;e<d;e++){c=Math.max(c,b.distanceToSquared(f[e]))}this.radius=Math.sqrt(c);return this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return(this.radius<=0)},containsPoint:function(a){return(a.distanceToSquared(this.center)<=(this.radius*this.radius))},distanceToPoint:function(a){return(a.distanceTo(this.center)-this.radius)},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=(b*b)},clampPoint:function(b,d){var c=this.center.distanceToSquared(b);var a=d||new THREE.Vector3();a.copy(b);if(c>(this.radius*this.radius)){a.sub(this.center).normalize();a.multiplyScalar(this.radius).add(this.center)}return a},getBoundingBox:function(a){var b=a||new THREE.Box3();b.set(this.center,this.center);b.expandByScalar(this.radius);return b},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius=this.radius*a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&(a.radius===this.radius)}};THREE.Frustum=function(f,e,d,c,b,a){this.planes=[(f!==undefined)?f:new THREE.Plane(),(e!==undefined)?e:new THREE.Plane(),(d!==undefined)?d:new THREE.Plane(),(c!==undefined)?c:new THREE.Plane(),(b!==undefined)?b:new THREE.Plane(),(a!==undefined)?a:new THREE.Plane()]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(g,f,e,d,c,b){var a=this.planes;a[0].copy(g);a[1].copy(f);a[2].copy(e);a[3].copy(d);a[4].copy(c);a[5].copy(b);return this},clone:function(){return new this.constructor().copy(this)},copy:function(c){var a=this.planes;for(var b=0;b<6;b++){a[b].copy(c.planes[b])}return this},setFromMatrix:function(o){var h=this.planes;var t=o.elements;var l=t[0],j=t[1],i=t[2],g=t[3];var f=t[4],e=t[5],d=t[6],c=t[7];var b=t[8],a=t[9],s=t[10],r=t[11];var q=t[12],p=t[13],n=t[14],k=t[15];h[0].setComponents(g-l,c-f,r-b,k-q).normalize();h[1].setComponents(g+l,c+f,r+b,k+q).normalize();h[2].setComponents(g+j,c+e,r+a,k+p).normalize();h[3].setComponents(g-j,c-e,r-a,k-p).normalize();h[4].setComponents(g-i,c-d,r-s,k-n).normalize();h[5].setComponents(g+i,c+d,r+s,k+n).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere();return function(b){var c=b.geometry;if(c.boundingSphere===null){c.computeBoundingSphere()}a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(c){var d=this.planes;var a=c.center;var b=-c.radius;for(var e=0;e<6;e++){var f=d[e].distanceToPoint(a);if(f<b){return false}}return true},intersectsBox:function(){var b=new THREE.Vector3(),a=new THREE.Vector3();return function(g){var d=this.planes;for(var e=0;e<6;e++){var c=d[e];b.x=c.normal.x>0?g.min.x:g.max.x;a.x=c.normal.x>0?g.max.x:g.min.x;b.y=c.normal.y>0?g.min.y:g.max.y;a.y=c.normal.y>0?g.max.y:g.min.y;b.z=c.normal.z>0?g.min.z:g.max.z;a.z=c.normal.z>0?g.max.z:g.min.z;var h=c.distanceToPoint(b);var f=c.distanceToPoint(a);if(h<0&&f<0){return false}}return true}}(),containsPoint:function(a){var b=this.planes;for(var c=0;c<6;c++){if(b[c].distanceToPoint(a)<0){return false}}return true}};THREE.Plane=function(b,a){this.normal=(b!==undefined)?b:new THREE.Vector3(1,0,0);this.constant=(a!==undefined)?a:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(b,a){this.normal.copy(b);this.constant=a;return this},setComponents:function(a,d,c,b){this.normal.set(a,d,c);this.constant=b;return this},setFromNormalAndCoplanarPoint:function(b,a){this.normal.copy(b);this.constant=-a.dot(this.normal);return this},setFromCoplanarPoints:function(){var b=new THREE.Vector3();var a=new THREE.Vector3();return function(e,d,g){var f=b.subVectors(g,d).cross(a.subVectors(e,d)).normalize();this.setFromNormalAndCoplanarPoint(f,e);return this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(b,d){var c=this.distanceToPoint(b);var a=d||new THREE.Vector3();return a.copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var c=this.distanceToPoint(a.start);var b=this.distanceToPoint(a.end);return(c<0&&b>0)||(b<0&&c>0)},intersectLine:function(){var a=new THREE.Vector3();return function(c,e){var b=e||new THREE.Vector3();var f=c.delta(a);var g=this.normal.dot(f);if(g===0){if(this.distanceToPoint(c.start)===0){return b.copy(c.start)}return undefined}var d=-(c.start.dot(this.normal)+this.constant)/g;if(d<0||d>1){return undefined}return b.copy(f).multiplyScalar(d).add(c.start)}}(),coplanarPoint:function(b){var a=b||new THREE.Vector3();return a.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var c=new THREE.Vector3();var b=new THREE.Vector3();var a=new THREE.Matrix3();return function(e,f){var h=f||a.getNormalMatrix(e);var g=c.copy(this.normal).applyMatrix3(h);var d=this.coplanarPoint(b);d.applyMatrix4(e);this.setFromNormalAndCoplanarPoint(g,d);return this}}(),translate:function(a){this.constant=this.constant-a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&(a.constant===this.constant)}};THREE.Math={generateUUID:function(){var d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");var b=new Array(36);var a=0,c;return function(){for(var e=0;e<36;e++){if(e===8||e===13||e===18||e===23){b[e]="-"}else{if(e===14){b[e]="4"}else{if(a<=2){a=33554432+(Math.random()*16777216)|0}c=a&15;a=a>>4;b[e]=d[(e===19)?(c&3)|8:c]}}}return b.join("")}}(),clamp:function(c,b,a){return Math.max(b,Math.min(a,c))},euclideanModulo:function(b,a){return((b%a)+a)%a},mapLinear:function(b,c,a,e,d){return e+(b-c)*(d-e)/(a-c)},smoothstep:function(b,c,a){if(b<=c){return 0}if(b>=a){return 1}b=(b-c)/(a-c);return b*b*(3-2*b)},smootherstep:function(b,c,a){if(b<=c){return 0}if(b>=a){return 1}b=(b-c)/(a-c);return b*b*b*(b*(b*6-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return(a&(a-1))===0&&a!==0},nearestPowerOfTwo:function(a){return Math.pow(2,Math.round(Math.log(a)/Math.LN2))},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a}};THREE.Spline=function(n){this.points=n;var h=[],j={x:0,y:0,z:0},m,a,e,d,b,l,k,i,g;this.initFromArray=function(c){this.points=[];for(var o=0;o<c.length;o++){this.points[o]={x:c[o][0],y:c[o][1],z:c[o][2]}}};this.getPoint=function(c){m=(this.points.length-1)*c;a=Math.floor(m);e=m-a;h[0]=a===0?a:a-1;h[1]=a;h[2]=a>this.points.length-2?this.points.length-1:a+1;h[3]=a>this.points.length-3?this.points.length-1:a+2;l=this.points[h[0]];k=this.points[h[1]];i=this.points[h[2]];g=this.points[h[3]];d=e*e;b=e*d;j.x=f(l.x,k.x,i.x,g.x,e,d,b);j.y=f(l.y,k.y,i.y,g.y,e,d,b);j.z=f(l.z,k.z,i.z,g.z,e,d,b);return j};this.getControlPointsArray=function(){var o,r,c=this.points.length,q=[];for(o=0;o<c;o++){r=this.points[o];q[o]=[r.x,r.y,r.z]}return q};this.getLength=function(p){var r,t,u,s,B=0,c=0,q=0,A=new THREE.Vector3(),o=new THREE.Vector3(),v=[],C=0;v[0]=0;if(!p){p=100}u=this.points.length*p;A.copy(this.points[0]);for(r=1;r<u;r++){t=r/u;s=this.getPoint(t);o.copy(s);C+=o.distanceTo(A);A.copy(s);B=(this.points.length-1)*t;c=Math.floor(B);if(c!==q){v[c]=C;q=c}}v[v.length]=C;return{chunks:v,total:C}};this.reparametrizeByArcLength=function(o){var s,r,v,A,p,B,u,t,C=[],c=new THREE.Vector3(),q=this.getLength();C.push(c.copy(this.points[0]).clone());for(s=1;s<this.points.length;s++){B=q.chunks[s]-q.chunks[s-1];u=Math.ceil(o*B/q.total);A=(s-1)/(this.points.length-1);p=s/(this.points.length-1);for(r=1;r<u-1;r++){v=A+r*(1/u)*(p-A);t=this.getPoint(v);C.push(c.copy(t).clone())}C.push(c.copy(this.points[s]).clone())}this.points=C};function f(v,u,r,q,A,o,c){var s=(r-v)*0.5,p=(q-u)*0.5;return(2*(u-r)+s+p)*c+(-3*(u-r)-2*s-p)*o+s*A+u}};THREE.Triangle=function(e,d,f){this.a=(e!==undefined)?e:new THREE.Vector3();this.b=(d!==undefined)?d:new THREE.Vector3();this.c=(f!==undefined)?f:new THREE.Vector3()};THREE.Triangle.normal=function(){var a=new THREE.Vector3();return function(g,e,i,h){var d=h||new THREE.Vector3();d.subVectors(i,e);a.subVectors(g,e);d.cross(a);var f=d.lengthSq();if(f>0){return d.multiplyScalar(1/Math.sqrt(f))}return d.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3();var c=new THREE.Vector3();var b=new THREE.Vector3();return function(n,m,k,h,r){a.subVectors(h,m);c.subVectors(k,m);b.subVectors(n,m);var l=a.dot(a);var j=a.dot(c);var i=a.dot(b);var f=c.dot(c);var d=c.dot(b);var g=(l*f-j*j);var q=r||new THREE.Vector3();if(g===0){return q.set(-2,-1,-1)}var e=1/g;var p=(f*i-j*d)*e;var o=(l*d-j*i)*e;return q.set(1-p-o,o,p)}}();THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3();return function(f,g,e,h){var d=THREE.Triangle.barycoordFromPoint(f,g,e,h,a);return(d.x>=0)&&(d.y>=0)&&((d.x+d.y)<=1)}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,d,f){this.a.copy(e);this.b.copy(d);this.c.copy(f);return this},setFromPointsAndIndices:function(b,d,c,a){this.a.copy(b[d]);this.b.copy(b[c]);this.c.copy(b[a]);return this},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3();var b=new THREE.Vector3();return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return a.cross(b).length()*0.5}}(),midpoint:function(b){var a=b||new THREE.Vector3();return a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(b){var a=b||new THREE.Plane();return a.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}};THREE.Channels=function(){this.mask=1};THREE.Channels.prototype={constructor:THREE.Channels,set:function(a){this.mask=1<<a},enable:function(a){this.mask|=1<<a},toggle:function(a){this.mask^=1<<a},disable:function(a){this.mask&=~(1<<a)}};THREE.Clock=function(a){this.autoStart=(a!==undefined)?a:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=self.performance.now();this.oldTime=this.startTime;this.running=true},stop:function(){this.getElapsedTime();this.running=false},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var b=0;if(this.autoStart&&!this.running){this.start()}if(this.running){var a=self.performance.now();b=0.001*(a-this.oldTime);this.oldTime=a;this.elapsedTime+=b}return b}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(b,c){if(this._listeners===undefined){this._listeners={}}var a=this._listeners;if(a[b]===undefined){a[b]=[]}if(a[b].indexOf(c)===-1){a[b].push(c)}},hasEventListener:function(b,c){if(this._listeners===undefined){return false}var a=this._listeners;if(a[b]!==undefined&&a[b].indexOf(c)!==-1){return true}return false},removeEventListener:function(d,e){if(this._listeners===undefined){return}var c=this._listeners;var a=c[d];if(a!==undefined){var b=a.indexOf(e);if(b!==-1){a.splice(b,1)}}},dispatchEvent:function(e){if(this._listeners===undefined){return}var c=this._listeners;var a=c[e.type];if(a!==undefined){e.target=this;var f=[];var d=a.length;for(var b=0;b<d;b++){f[b]=a[b]}for(var b=0;b<d;b++){f[b].call(this,e)}}}};(function(c){c.Raycaster=function(e,g,f,d){this.ray=new c.Ray(e,g);this.near=f||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})};function b(e,d){return e.distance-d.distance}function a(g,e,k,f){if(g.visible===false){return}g.raycast(e,k);if(f===true){var j=g.children;for(var h=0,d=j.length;h<d;h++){a(j[h],e,k,true)}}}c.Raycaster.prototype={constructor:c.Raycaster,linePrecision:1,set:function(d,e){this.ray.set(d,e)},setFromCamera:function(e,d){if(d instanceof c.PerspectiveCamera){this.ray.origin.setFromMatrixPosition(d.matrixWorld);this.ray.direction.set(e.x,e.y,0.5).unproject(d).sub(this.ray.origin).normalize()}else{if(d instanceof c.OrthographicCamera){this.ray.origin.set(e.x,e.y,-1).unproject(d);this.ray.direction.set(0,0,-1).transformDirection(d.matrixWorld)}else{console.error("THREE.Raycaster: Unsupported camera type.")}}},intersectObject:function(e,d){var f=[];a(e,this,f,d);f.sort(b);return f},intersectObjects:function(h,e){var g=[];if(Array.isArray(h)===false){console.warn("THREE.Raycaster.intersectObjects: objects is not an Array.");return g}for(var f=0,d=h.length;f<d;f++){a(h[f],this,g,e)}g.sort(b);return g}}}(THREE));THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.channels=new THREE.Channels();this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3();var c=new THREE.Euler();var e=new THREE.Quaternion();var f=new THREE.Vector3(1,1,1);function d(){e.setFromEuler(c,false)}function b(){c.setFromQuaternion(e,undefined,false)}c.onChange(d);e.onChange(b);Object.defineProperties(this,{position:{enumerable:true,value:a},rotation:{enumerable:true,value:c},quaternion:{enumerable:true,value:e},scale:{enumerable:true,value:f},modelViewMatrix:{value:new THREE.Matrix4()},normalMatrix:{value:new THREE.Matrix3()}});this.rotationAutoUpdate=true;this.matrix=new THREE.Matrix4();this.matrixWorld=new THREE.Matrix4();this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.DefaultMatrixAutoUpdate=true;THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set eulerOrder(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=a},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set renderDepth(a){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,true)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion();return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3();return function(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));return this}}(),translate:function(b,a){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(a,b)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4();return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4();return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(arguments.length>1){for(var b=0;b<arguments.length;b++){this.add(arguments[b])}return this}if(a===this){console.error("THREE.Object3D.add: object can't be added as a child of itself.",a);return this}if(a instanceof THREE.Object3D){if(a.parent!==null){a.parent.remove(a)}a.parent=this;a.dispatchEvent({type:"added"});this.children.push(a)}else{console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a)}return this},remove:function(b){if(arguments.length>1){for(var c=0;c<arguments.length;c++){this.remove(arguments[c])}}var a=this.children.indexOf(b);if(a!==-1){b.parent=null;b.dispatchEvent({type:"removed"});this.children.splice(a,1)}},getChildByName:function(a){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a)},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(c,e){if(this[c]===e){return this}for(var d=0,a=this.children.length;d<a;d++){var f=this.children[d];var b=f.getObjectByProperty(c,e);if(b!==undefined){return b}}return undefined},getWorldPosition:function(b){var a=b||new THREE.Vector3();this.updateMatrixWorld(true);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new THREE.Vector3();var b=new THREE.Vector3();return function(d){var c=d||new THREE.Quaternion();this.updateMatrixWorld(true);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion();return function(c){var b=c||new THREE.Euler();this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,false)}}(),getWorldScale:function(){var a=new THREE.Vector3();var b=new THREE.Quaternion();return function(d){var c=d||new THREE.Vector3();this.updateMatrixWorld(true);this.matrixWorld.decompose(a,b,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion();return function(c){var b=c||new THREE.Vector3();this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(d){d(this);var c=this.children;for(var b=0,a=c.length;b<a;b++){c[b].traverse(d)}},traverseVisible:function(d){if(this.visible===false){return}d(this);var c=this.children;for(var b=0,a=c.length;b<a;b++){c[b].traverseVisible(d)}},traverseAncestors:function(b){var a=this.parent;if(a!==null){b(a);a.traverseAncestors(b)}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(c){if(this.matrixAutoUpdate===true){this.updateMatrix()}if(this.matrixWorldNeedsUpdate===true||c===true){if(this.parent===null){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}this.matrixWorldNeedsUpdate=false;c=true}for(var b=0,a=this.children.length;b<a;b++){this.children[b].updateMatrixWorld(c)}},toJSON:function(k){var a=(k===undefined);var c={};if(a){k={geometries:{},materials:{},textures:{},images:{}};c.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"}}var d={};d.uuid=this.uuid;d.type=this.type;if(this.name!==""){d.name=this.name}if(JSON.stringify(this.userData)!=="{}"){d.userData=this.userData}if(this.castShadow===true){d.castShadow=true}if(this.receiveShadow===true){d.receiveShadow=true}if(this.visible===false){d.visible=false}d.matrix=this.matrix.toArray();if(this.geometry!==undefined){if(k.geometries[this.geometry.uuid]===undefined){k.geometries[this.geometry.uuid]=this.geometry.toJSON(k)}d.geometry=this.geometry.uuid}if(this.material!==undefined){if(k.materials[this.material.uuid]===undefined){k.materials[this.material.uuid]=this.material.toJSON(k)}d.material=this.material.uuid}if(this.children.length>0){d.children=[];for(var e=0;e<this.children.length;e++){d.children.push(this.children[e].toJSON(k).object)}}if(a){var b=g(k.geometries);var j=g(k.materials);var h=g(k.textures);var f=g(k.images);if(b.length>0){c.geometries=b}if(j.length>0){c.materials=j}if(h.length>0){c.textures=h}if(f.length>0){c.images=f}}c.object=d;return c;function g(l){var i=[];for(var m in l){var n=l[m];delete n.metadata;i.push(n)}return i}},clone:function(a){return new this.constructor().copy(this,a)},copy:function(c,a){if(a===undefined){a=true}this.name=c.name;this.up.copy(c.up);this.position.copy(c.position);this.quaternion.copy(c.quaternion);this.scale.copy(c.scale);this.rotationAutoUpdate=c.rotationAutoUpdate;this.matrix.copy(c.matrix);this.matrixWorld.copy(c.matrixWorld);this.matrixAutoUpdate=c.matrixAutoUpdate;this.matrixWorldNeedsUpdate=c.matrixWorldNeedsUpdate;this.visible=c.visible;this.castShadow=c.castShadow;this.receiveShadow=c.receiveShadow;this.frustumCulled=c.frustumCulled;this.renderOrder=c.renderOrder;this.userData=JSON.parse(JSON.stringify(c.userData));if(a===true){for(var b=0;b<c.children.length;b++){var d=c.children[b];this.add(d.clone())}}return this}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Face3=function(f,e,i,h,g,d){this.a=f;this.b=e;this.c=i;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3();this.vertexNormals=Array.isArray(h)?h:[];this.color=g instanceof THREE.Color?g:new THREE.Color();this.vertexColors=Array.isArray(g)?g:[];this.materialIndex=d!==undefined?d:0};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return new this.constructor().copy(this)},copy:function(c){this.a=c.a;this.b=c.b;this.c=c.c;this.normal.copy(c.normal);this.color.copy(c.color);this.materialIndex=c.materialIndex;for(var b=0,a=c.vertexNormals.length;b<a;b++){this.vertexNormals[b]=c.vertexNormals[b].clone()}for(var b=0,a=c.vertexColors.length;b<a;b++){this.vertexColors[b]=c.vertexColors[b].clone()}return this}};THREE.Face4=function(g,f,k,j,i,h,e){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(g,f,k,i,h,e)};THREE.BufferAttribute=function(b,a){this.uuid=THREE.Math.generateUUID();this.array=b;this.itemSize=a;this.dynamic=false;this.updateRange={offset:0,count:-1};this.version=0};THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count.");return this.array.length},get count(){return this.array.length/this.itemSize},set needsUpdate(a){if(a===true){this.version++}},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.dynamic=a.dynamic;return this},copyAt:function(e,c,d){e*=this.itemSize;d*=c.itemSize;for(var b=0,a=this.itemSize;b<a;b++){this.array[e+b]=c.array[d+b]}return this},copyArray:function(a){this.array.set(a);return this},copyColorsArray:function(b){var f=this.array,e=0;for(var d=0,a=b.length;d<a;d++){var c=b[d];if(c===undefined){console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d);c=new THREE.Color()}f[e++]=c.r;f[e++]=c.g;f[e++]=c.b}return this},copyIndicesArray:function(e){var f=this.array,d=0;for(var c=0,a=e.length;c<a;c++){var b=e[c];f[d++]=b.a;f[d++]=b.b;f[d++]=b.c}return this},copyVector2sArray:function(d){var f=this.array,e=0;for(var c=0,b=d.length;c<b;c++){var a=d[c];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",c);a=new THREE.Vector2()}f[e++]=a.x;f[e++]=a.y}return this},copyVector3sArray:function(d){var f=this.array,e=0;for(var c=0,b=d.length;c<b;c++){var a=d[c];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",c);a=new THREE.Vector3()}f[e++]=a.x;f[e++]=a.y;f[e++]=a.z}return this},copyVector4sArray:function(d){var f=this.array,e=0;for(var c=0,b=d.length;c<b;c++){var a=d[c];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",c);a=new THREE.Vector4()}f[e++]=a.x;f[e++]=a.y;f[e++]=a.z;f[e++]=a.w}return this},set:function(a,b){if(b===undefined){b=0}this.array.set(a,b);return this},getX:function(a){return this.array[a*this.itemSize]},setX:function(b,a){this.array[b*this.itemSize]=a;return this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*this.itemSize+3]},setW:function(b,a){this.array[b*this.itemSize+3]=a;return this},setXY:function(b,a,c){b*=this.itemSize;this.array[b+0]=a;this.array[b+1]=c;return this},setXYZ:function(b,a,d,c){b*=this.itemSize;this.array[b+0]=a;this.array[b+1]=d;this.array[b+2]=c;return this},setXYZW:function(c,a,e,d,b){c*=this.itemSize;this.array[c+0]=a;this.array[c+1]=e;this.array[c+2]=d;this.array[c+3]=b;return this},clone:function(){return new this.constructor().copy(this)}};THREE.Int8Attribute=function(b,a){return new THREE.BufferAttribute(new Int8Array(b),a)};THREE.Uint8Attribute=function(b,a){return new THREE.BufferAttribute(new Uint8Array(b),a)};THREE.Uint8ClampedAttribute=function(b,a){return new THREE.BufferAttribute(new Uint8ClampedArray(b),a)};THREE.Int16Attribute=function(b,a){return new THREE.BufferAttribute(new Int16Array(b),a)};THREE.Uint16Attribute=function(b,a){return new THREE.BufferAttribute(new Uint16Array(b),a)};THREE.Int32Attribute=function(b,a){return new THREE.BufferAttribute(new Int32Array(b),a)};THREE.Uint32Attribute=function(b,a){return new THREE.BufferAttribute(new Uint32Array(b),a)};THREE.Float32Attribute=function(b,a){return new THREE.BufferAttribute(new Float32Array(b),a)};THREE.Float64Attribute=function(b,a){return new THREE.BufferAttribute(new Float64Array(b),a)};THREE.DynamicBufferAttribute=function(b,a){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.");return new THREE.BufferAttribute(b,a).setDynamic(true)};THREE.InstancedBufferAttribute=function(c,b,a){THREE.BufferAttribute.call(this,c,b);this.meshPerAttribute=a||1};THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute;THREE.InstancedBufferAttribute.prototype.copy=function(a){THREE.BufferAttribute.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBuffer=function(b,a){this.uuid=THREE.Math.generateUUID();this.array=b;this.stride=a;this.dynamic=false;this.updateRange={offset:0,count:-1};this.version=0};THREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(a){if(a===true){this.version++}},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.stride=a.stride;this.dynamic=a.dynamic},copyAt:function(e,c,d){e*=this.stride;d*=c.stride;for(var b=0,a=this.stride;b<a;b++){this.array[e+b]=c.array[d+b]}return this},set:function(a,b){if(b===undefined){b=0}this.array.set(a,b);return this},clone:function(){return new this.constructor().copy(this)}};THREE.InstancedInterleavedBuffer=function(c,b,a){THREE.InterleavedBuffer.call(this,c,b);this.meshPerAttribute=a||1};THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype);THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer;THREE.InstancedInterleavedBuffer.prototype.copy=function(a){THREE.InterleavedBuffer.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBufferAttribute=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.data=a;this.itemSize=b;this.offset=c};THREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count.");return this.array.length},get count(){return this.data.array.length/this.data.stride},setX:function(b,a){this.data.array[b*this.data.stride+this.offset]=a;return this},setY:function(a,b){this.data.array[a*this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+2]=b;return this},setW:function(b,a){this.data.array[b*this.data.stride+this.offset+3]=a;return this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(b,a,c){b=b*this.data.stride+this.offset;this.data.array[b+0]=a;this.data.array[b+1]=c;return this},setXYZ:function(b,a,d,c){b=b*this.data.stride+this.offset;this.data.array[b+0]=a;this.data.array[b+1]=d;this.data.array[b+2]=c;return this},setXYZW:function(c,a,e,d,b){c=c*this.data.stride+this.offset;this.data.array[c+0]=a;this.data.array[c+1]=e;this.data.array[c+2]=d;this.data.array[c+3]=b;return this}};THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.verticesNeedUpdate=false;this.elementsNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.lineDistancesNeedUpdate=false;this.groupsNeedUpdate=false};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(b){var h=new THREE.Matrix3().getNormalMatrix(b);for(var e=0,a=this.vertices.length;e<a;e++){var g=this.vertices[e];g.applyMatrix4(b)}for(var e=0,a=this.faces.length;e<a;e++){var f=this.faces[e];f.normal.applyMatrix3(h).normalize();for(var c=0,d=f.vertexNormals.length;c<d;c++){f.vertexNormals[c].applyMatrix3(h).normalize()}}if(this.boundingBox!==null){this.computeBoundingBox()}if(this.boundingSphere!==null){this.computeBoundingSphere()}this.verticesNeedUpdate=true;this.normalsNeedUpdate=true},rotateX:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationX(c);this.applyMatrix(b);return this}}(),rotateY:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationY(c);this.applyMatrix(b);return this}}(),rotateZ:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationZ(c);this.applyMatrix(b);return this}}(),translate:function(){var a;return function b(c,e,d){if(a===undefined){a=new THREE.Matrix4()}a.makeTranslation(c,e,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function b(c,e,d){if(a===undefined){a=new THREE.Matrix4()}a.makeScale(c,e,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function b(c){if(a===undefined){a=new THREE.Object3D()}a.lookAt(c);a.updateMatrix();this.applyMatrix(a.matrix)}}(),fromBufferGeometry:function(e){var b=this;var f=e.index!==null?e.index.array:undefined;var n=e.attributes;var g=n.position.array;var q=n.normal!==undefined?n.normal.array:undefined;var o=n.color!==undefined?n.color.array:undefined;var p=n.uv!==undefined?n.uv.array:undefined;var A=n.uv2!==undefined?n.uv2.array:undefined;if(A!==undefined){this.faceVertexUvs[1]=[]}var a=[];var r=[];var c=[];for(var u=0,t=0,s=0;u<g.length;u+=3,t+=2,s+=4){b.vertices.push(new THREE.Vector3(g[u],g[u+1],g[u+2]));if(q!==undefined){a.push(new THREE.Vector3(q[u],q[u+1],q[u+2]))}if(o!==undefined){b.colors.push(new THREE.Color(o[u],o[u+1],o[u+2]))}if(p!==undefined){r.push(new THREE.Vector2(p[t],p[t+1]))}if(A!==undefined){c.push(new THREE.Vector2(A[t],A[t+1]))}}function h(j,i,E){var k=q!==undefined?[a[j].clone(),a[i].clone(),a[E].clone()]:[];var C=o!==undefined?[b.colors[j].clone(),b.colors[i].clone(),b.colors[E].clone()]:[];var D=new THREE.Face3(j,i,E,k,C);b.faces.push(D);if(p!==undefined){b.faceVertexUvs[0].push([r[j].clone(),r[i].clone(),r[E].clone()])}if(A!==undefined){b.faceVertexUvs[1].push([c[j].clone(),c[i].clone(),c[E].clone()])}}if(f!==undefined){var B=e.groups;if(B.length>0){for(var u=0;u<B.length;u++){var m=B[u];var d=m.start;var l=m.count;for(var t=d,v=d+l;t<v;t+=3){h(f[t],f[t+1],f[t+2])}}}else{for(var u=0;u<f.length;u+=3){h(f[u],f[u+1],f[u+2])}}}else{for(var u=0;u<g.length/3;u+=3){h(u,u+1,u+2)}}this.computeFaceNormals();if(e.boundingBox!==null){this.boundingBox=e.boundingBox.clone()}if(e.boundingSphere!==null){this.boundingSphere=e.boundingSphere.clone()}return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var b=this.boundingSphere.center;var a=this.boundingSphere.radius;var d=a===0?1:1/a;var c=new THREE.Matrix4();c.set(d,0,0,-d*b.x,0,d,0,-d*b.y,0,0,d,-d*b.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){var a=new THREE.Vector3(),i=new THREE.Vector3();for(var h=0,g=this.faces.length;h<g;h++){var e=this.faces[h];var d=this.vertices[e.a];var c=this.vertices[e.b];var b=this.vertices[e.c];a.subVectors(b,c);i.subVectors(d,c);a.cross(i);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(h){var m,e,i,l,k,j;j=new Array(this.vertices.length);for(m=0,e=this.vertices.length;m<e;m++){j[m]=new THREE.Vector3()}if(h){var c,b,a;var g=new THREE.Vector3(),n=new THREE.Vector3();for(i=0,l=this.faces.length;i<l;i++){k=this.faces[i];c=this.vertices[k.a];b=this.vertices[k.b];a=this.vertices[k.c];g.subVectors(a,b);n.subVectors(c,b);g.cross(n);j[k.a].add(g);j[k.b].add(g);j[k.c].add(g)}}else{for(i=0,l=this.faces.length;i<l;i++){k=this.faces[i];j[k.a].add(k.normal);j[k.b].add(k.normal);j[k.c].add(k.normal)}}for(m=0,e=this.vertices.length;m<e;m++){j[m].normalize()}for(i=0,l=this.faces.length;i<l;i++){k=this.faces[i];var d=k.vertexNormals;if(d.length===3){d[0].copy(j[k.a]);d[1].copy(j[k.b]);d[2].copy(j[k.c])}else{d[0]=j[k.a].clone();d[1]=j[k.b].clone();d[2]=j[k.c].clone()}}},computeMorphNormals:function(){var e,l,g,m,h;for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];if(!h.__originalFaceNormal){h.__originalFaceNormal=h.normal.clone()}else{h.__originalFaceNormal.copy(h.normal)}if(!h.__originalVertexNormals){h.__originalVertexNormals=[]}for(e=0,l=h.vertexNormals.length;e<l;e++){if(!h.__originalVertexNormals[e]){h.__originalVertexNormals[e]=h.vertexNormals[e].clone()}else{h.__originalVertexNormals[e].copy(h.vertexNormals[e])}}}var c=new THREE.Geometry();c.faces=this.faces;for(e=0,l=this.morphTargets.length;e<l;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];var d=this.morphNormals[e].faceNormals;var a=this.morphNormals[e].vertexNormals;var k,b;for(g=0,m=this.faces.length;g<m;g++){k=new THREE.Vector3();b={a:new THREE.Vector3(),b:new THREE.Vector3(),c:new THREE.Vector3()};d.push(k);a.push(b)}}var j=this.morphNormals[e];c.vertices=this.morphTargets[e].vertices;c.computeFaceNormals();c.computeVertexNormals();var k,b;for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];k=j.faceNormals[g];b=j.vertexNormals[g];k.copy(h.normal);b.a.copy(h.vertexNormals[0]);b.b.copy(h.vertexNormals[1]);b.c.copy(h.vertexNormals[2])}}for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];h.normal=h.__originalFaceNormal;h.vertexNormals=h.__originalVertexNormals}},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){var e=0;var b=this.vertices;for(var c=0,a=b.length;c<a;c++){if(c>0){e+=b[c].distanceTo(b[c-1])}this.lineDistances[c]=e}},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3()}this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere()}this.boundingSphere.setFromPoints(this.vertices)},merge:function(f,s,E){if(f instanceof THREE.Geometry===false){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",f);return}var k,m=this.vertices.length,d=this.vertices,c=f.vertices,b=this.faces,a=f.faces,B=this.faceVertexUvs[0],A=f.faceVertexUvs[0];if(E===undefined){E=0}if(s!==undefined){k=new THREE.Matrix3().getNormalMatrix(s)}for(var t=0,l=c.length;t<l;t++){var C=c[t];var p=C.clone();if(s!==undefined){p.applyMatrix4(s)}d.push(p)}for(t=0,l=a.length;t<l;t++){var h=a[t],o,D,q,n=h.vertexNormals,v=h.vertexColors;o=new THREE.Face3(h.a+m,h.b+m,h.c+m);o.normal.copy(h.normal);if(k!==undefined){o.normal.applyMatrix3(k).normalize()}for(var r=0,u=n.length;r<u;r++){D=n[r].clone();if(k!==undefined){D.applyMatrix3(k).normalize()}o.vertexNormals.push(D)}o.color.copy(h.color);for(var r=0,u=v.length;r<u;r++){q=v[r];o.vertexColors.push(q.clone())}o.materialIndex=h.materialIndex+E;b.push(o)}for(t=0,l=A.length;t<l;t++){var g=A[t],e=[];if(g===undefined){continue}for(var r=0,u=g.length;r<u;r++){e.push(g[r].clone())}B.push(e)}},mergeMesh:function(a){if(a instanceof THREE.Mesh===false){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a);return}a.matrixAutoUpdate&&a.updateMatrix();this.merge(a.geometry,a.matrix)},mergeVertices:function(){var b={};var a=[],t=[];var f,u;var g=4;var s=Math.pow(10,g);var q,e,d;var c,p,r;for(q=0,e=this.vertices.length;q<e;q++){f=this.vertices[q];u=Math.round(f.x*s)+"_"+Math.round(f.y*s)+"_"+Math.round(f.z*s);if(b[u]===undefined){b[u]=q;a.push(this.vertices[q]);t[q]=a.length-1}else{t[q]=t[b[u]]}}var l=[];for(q=0,e=this.faces.length;q<e;q++){d=this.faces[q];d.a=t[d.a];d.b=t[d.b];d.c=t[d.c];c=[d.a,d.b,d.c];var o=-1;for(var m=0;m<3;m++){if(c[m]===c[(m+1)%3]){o=m;l.push(q);break}}}for(q=l.length-1;q>=0;q--){var k=l[q];this.faces.splice(k,1);for(p=0,r=this.faceVertexUvs.length;p<r;p++){this.faceVertexUvs[p].splice(k,1)}}var h=this.vertices.length-a.length;this.vertices=a;return h},sortFacesByMaterialIndex:function(){var c=this.faces;var b=c.length;for(var d=0;d<b;d++){c[d]._id=d}function g(k,i){return k.materialIndex-i.materialIndex}c.sort(g);var j=this.faceVertexUvs[0];var h=this.faceVertexUvs[1];var f,e;if(j&&j.length===b){f=[]}if(h&&h.length===b){e=[]}for(var d=0;d<b;d++){var a=c[d]._id;if(f){f.push(j[a])}if(e){e.push(h[a])}}if(f){this.faceVertexUvs[0]=f}if(e){this.faceVertexUvs[1]=e}},toJSON:function(){var F={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};F.uuid=this.uuid;F.type=this.type;if(this.name!==""){F.name=this.name}if(this.parameters!==undefined){var f=this.parameters;for(var H in f){if(f[H]!==undefined){F[H]=f[H]}}return F}var e=[];for(var u=0;u<this.vertices.length;u++){var A=this.vertices[u];e.push(A.x,A.y,A.z)}var b=[];var p=[];var m={};var h=[];var D={};var j=[];var d={};for(var u=0;u<this.faces.length;u++){var g=this.faces[u];var n=false;var C=false;var a=this.faceVertexUvs[0][u]!==undefined;var v=g.normal.length()>0;var t=g.vertexNormals.length>0;var r=g.color.r!==1||g.color.g!==1||g.color.b!==1;var o=g.vertexColors.length>0;var G=0;G=l(G,0,0);G=l(G,1,n);G=l(G,2,C);G=l(G,3,a);G=l(G,4,v);G=l(G,5,t);G=l(G,6,r);G=l(G,7,o);b.push(G);b.push(g.a,g.b,g.c);if(a){var B=this.faceVertexUvs[0][u];b.push(c(B[0]),c(B[1]),c(B[2]))}if(v){b.push(E(g.normal))}if(t){var s=g.vertexNormals;b.push(E(s[0]),E(s[1]),E(s[2]))}if(r){b.push(k(g.color))}if(o){var q=g.vertexColors;b.push(k(q[0]),k(q[1]),k(q[2]))}}function l(J,i,I){return I?J|(1<<i):J&(~(1<<i))}function E(I){var i=I.x.toString()+I.y.toString()+I.z.toString();if(m[i]!==undefined){return m[i]}m[i]=p.length/3;p.push(I.x,I.y,I.z);return m[i]}function k(i){var I=i.r.toString()+i.g.toString()+i.b.toString();if(D[I]!==undefined){return D[I]}D[I]=h.length;h.push(i.getHex());return D[I]}function c(i){var I=i.x.toString()+i.y.toString();if(d[I]!==undefined){return d[I]}d[I]=j.length/2;j.push(i.x,i.y);return d[I]}F.data={};F.data.vertices=e;F.data.normals=p;if(h.length>0){F.data.colors=h}if(j.length>0){F.data.uvs=[j]}F.data.faces=b;return F},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.vertices=[];this.faces=[];this.faceVertexUvs=[[]];var n=a.vertices;for(var h=0,o=n.length;h<o;h++){this.vertices.push(n[h].clone())}var d=a.faces;for(var h=0,o=d.length;h<o;h++){this.faces.push(d[h].clone())}for(var h=0,o=a.faceVertexUvs.length;h<o;h++){var m=a.faceVertexUvs[h];if(this.faceVertexUvs[h]===undefined){this.faceVertexUvs[h]=[]}for(var g=0,l=m.length;g<l;g++){var f=m[g],p=[];for(var e=0,b=f.length;e<b;e++){var c=f[e];p.push(c.clone())}this.faceVertexUvs[h].push(p)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.DirectGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="DirectGeometry";this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingBox=null;this.boundingSphere=null;this.verticesNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.uvsNeedUpdate=false;this.groupsNeedUpdate=false};THREE.DirectGeometry.prototype={constructor:THREE.DirectGeometry,computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(g){var f;var c=[];var b;var a=g.faces;for(var d=0;d<a.length;d++){var e=a[d];if(e.materialIndex!==b){b=e.materialIndex;if(f!==undefined){f.count=(d*3)-f.start;c.push(f)}f={start:d*3,materialIndex:b}}}if(f!==undefined){f.count=(d*3)-f.start;c.push(f)}this.groups=c},fromGeometry:function(e){var c=e.faces;var f=e.vertices;var C=e.faceVertexUvs;var a=C[0]&&C[0].length>0;var u=C[1]&&C[1].length>0;var k=e.morphTargets;var D=k.length;if(D>0){var b=[];for(var v=0;v<D;v++){b[v]=[]}this.morphTargets.position=b}var m=e.morphNormals;var q=m.length;if(q>0){var p=[];for(var v=0;v<q;v++){p[v]=[]}this.morphTargets.normal=p}var n=e.skinIndices;var d=e.skinWeights;var g=n.length===f.length;var E=d.length===f.length;for(var v=0;v<c.length;v++){var h=c[v];this.vertices.push(f[h.a],f[h.b],f[h.c]);var s=h.vertexNormals;if(s.length===3){this.normals.push(s[0],s[1],s[2])}else{var F=h.normal;this.normals.push(F,F,F)}var o=h.vertexColors;if(o.length===3){this.colors.push(o[0],o[1],o[2])}else{var r=h.color;this.colors.push(r,r,r)}if(a===true){var l=C[0][v];if(l!==undefined){this.uvs.push(l[0],l[1],l[2])}else{console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v);this.uvs.push(new THREE.Vector2(),new THREE.Vector2(),new THREE.Vector2())}}if(u===true){var l=C[1][v];if(l!==undefined){this.uvs2.push(l[0],l[1],l[2])}else{console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v);this.uvs2.push(new THREE.Vector2(),new THREE.Vector2(),new THREE.Vector2())}}for(var t=0;t<D;t++){var B=k[t].vertices;b[t].push(B[h.a],B[h.b],B[h.c])}for(var t=0;t<q;t++){var A=m[t].vertexNormals[v];p[t].push(A.a,A.b,A.c)}if(g){this.skinIndices.push(n[h.a],n[h.b],n[h.c])}if(E){this.skinWeights.push(d[h.a],d[h.b],d[h.c])}}this.computeGroups(e);this.verticesNeedUpdate=e.verticesNeedUpdate;this.normalsNeedUpdate=e.normalsNeedUpdate;this.colorsNeedUpdate=e.colorsNeedUpdate;this.uvsNeedUpdate=e.uvsNeedUpdate;this.groupsNeedUpdate=e.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype);THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity}};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addIndex:function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(a)},getIndex:function(){return this.index},setIndex:function(a){this.index=a},addAttribute:function(a,b){if(b instanceof THREE.BufferAttribute===false&&b instanceof THREE.InterleavedBufferAttribute===false){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).");this.addAttribute(a,new THREE.BufferAttribute(arguments[1],arguments[2]));return}if(a==="index"){console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.");this.setIndex(b);return}this.attributes[a]=b},getAttribute:function(a){return this.attributes[a]},removeAttribute:function(a){delete this.attributes[a]},get drawcalls(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups},get offsets(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups},addDrawCall:function(c,a,b){if(b!==undefined){console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.")}console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(c,a)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");this.clearGroups()},addGroup:function(c,b,a){this.groups.push({start:c,count:b,materialIndex:a!==undefined?a:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(b,a){this.drawRange.start=b;this.drawRange.count=a},applyMatrix:function(b){var a=this.attributes.position;if(a!==undefined){b.applyToVector3Array(a.array);a.needsUpdate=true}var c=this.attributes.normal;if(c!==undefined){var d=new THREE.Matrix3().getNormalMatrix(b);d.applyToVector3Array(c.array);c.needsUpdate=true}if(this.boundingBox!==null){this.computeBoundingBox()}if(this.boundingSphere!==null){this.computeBoundingSphere()}},rotateX:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationX(c);this.applyMatrix(b);return this}}(),rotateY:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationY(c);this.applyMatrix(b);return this}}(),rotateZ:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationZ(c);this.applyMatrix(b);return this}}(),translate:function(){var a;return function b(c,e,d){if(a===undefined){a=new THREE.Matrix4()}a.makeTranslation(c,e,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function b(c,e,d){if(a===undefined){a=new THREE.Matrix4()}a.makeScale(c,e,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function b(c){if(a===undefined){a=new THREE.Object3D()}a.lookAt(c);a.updateMatrix();this.applyMatrix(a.matrix)}}(),center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(d){var e=d.geometry;if(d instanceof THREE.Points||d instanceof THREE.Line){var b=new THREE.Float32Attribute(e.vertices.length*3,3);var a=new THREE.Float32Attribute(e.colors.length*3,3);this.addAttribute("position",b.copyVector3sArray(e.vertices));this.addAttribute("color",a.copyColorsArray(e.colors));if(e.lineDistances&&e.lineDistances.length===e.vertices.length){var c=new THREE.Float32Attribute(e.lineDistances.length,1);this.addAttribute("lineDistance",c.copyArray(e.lineDistances))}if(e.boundingSphere!==null){this.boundingSphere=e.boundingSphere.clone()}if(e.boundingBox!==null){this.boundingBox=e.boundingBox.clone()}}else{if(d instanceof THREE.Mesh){if(e instanceof THREE.Geometry){this.fromGeometry(e)}}}return this},updateFromObject:function(a){var c=a.geometry;if(a instanceof THREE.Mesh){var d=c.__directGeometry;if(d===undefined){return this.fromGeometry(c)}d.verticesNeedUpdate=c.verticesNeedUpdate;d.normalsNeedUpdate=c.normalsNeedUpdate;d.colorsNeedUpdate=c.colorsNeedUpdate;d.uvsNeedUpdate=c.uvsNeedUpdate;d.groupsNeedUpdate=c.groupsNeedUpdate;c.verticesNeedUpdate=false;c.normalsNeedUpdate=false;c.colorsNeedUpdate=false;c.uvsNeedUpdate=false;c.groupsNeedUpdate=false;c=d}if(c.verticesNeedUpdate===true){var b=this.attributes.position;if(b!==undefined){b.copyVector3sArray(c.vertices);b.needsUpdate=true}c.verticesNeedUpdate=false}if(c.normalsNeedUpdate===true){var b=this.attributes.normal;if(b!==undefined){b.copyVector3sArray(c.normals);b.needsUpdate=true}c.normalsNeedUpdate=false}if(c.colorsNeedUpdate===true){var b=this.attributes.color;if(b!==undefined){b.copyColorsArray(c.colors);b.needsUpdate=true}c.colorsNeedUpdate=false}if(c.uvsNeedUpdate){var b=this.attributes.uv;if(b!==undefined){b.copyVector2sArray(c.uvs);b.needsUpdate=true}c.uvsNeedUpdate=false}if(c.lineDistancesNeedUpdate){var b=this.attributes.lineDistance;if(b!==undefined){b.copyArray(c.lineDistances);b.needsUpdate=true}c.lineDistancesNeedUpdate=false}if(c.groupsNeedUpdate){c.computeGroups(a.geometry);this.groups=c.groups;c.groupsNeedUpdate=false}return this},fromGeometry:function(a){a.__directGeometry=new THREE.DirectGeometry().fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(o){var m=new Float32Array(o.vertices.length*3);this.addAttribute("position",new THREE.BufferAttribute(m,3).copyVector3sArray(o.vertices));if(o.normals.length>0){var p=new Float32Array(o.normals.length*3);this.addAttribute("normal",new THREE.BufferAttribute(p,3).copyVector3sArray(o.normals))}if(o.colors.length>0){var b=new Float32Array(o.colors.length*3);this.addAttribute("color",new THREE.BufferAttribute(b,3).copyColorsArray(o.colors))}if(o.uvs.length>0){var h=new Float32Array(o.uvs.length*2);this.addAttribute("uv",new THREE.BufferAttribute(h,2).copyVector2sArray(o.uvs))}if(o.uvs2.length>0){var s=new Float32Array(o.uvs2.length*2);this.addAttribute("uv2",new THREE.BufferAttribute(s,2).copyVector2sArray(o.uvs2))}if(o.indices.length>0){var q=o.vertices.length>65535?Uint32Array:Uint16Array;var r=new q(o.indices.length*3);this.setIndex(new THREE.BufferAttribute(r,1).copyIndicesArray(o.indices))}this.groups=o.groups;for(var c in o.morphTargets){var n=[];var f=o.morphTargets[c];for(var k=0,g=f.length;k<g;k++){var j=f[k];var e=new THREE.Float32Attribute(j.length*3,3);n.push(e.copyVector3sArray(j))}this.morphAttributes[c]=n}if(o.skinIndices.length>0){var d=new THREE.Float32Attribute(o.skinIndices.length*4,4);this.addAttribute("skinIndex",d.copyVector4sArray(o.skinIndices))}if(o.skinWeights.length>0){var a=new THREE.Float32Attribute(o.skinWeights.length*4,4);this.addAttribute("skinWeight",a.copyVector4sArray(o.skinWeights))}if(o.boundingSphere!==null){this.boundingSphere=o.boundingSphere.clone()}if(o.boundingBox!==null){this.boundingBox=o.boundingBox.clone()}return this},computeBoundingBox:function(){var a=new THREE.Vector3();return function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3()}var b=this.attributes.position.array;if(b){var e=this.boundingBox;e.makeEmpty();for(var d=0,c=b.length;d<c;d+=3){a.fromArray(b,d);e.expandByPoint(a)}}if(b===undefined||b.length===0){this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}}}(),computeBoundingSphere:function(){var b=new THREE.Box3();var a=new THREE.Vector3();return function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere()}var e=this.attributes.position.array;if(e){b.makeEmpty();var c=this.boundingSphere.center;for(var g=0,f=e.length;g<f;g+=3){a.fromArray(e,g);b.expandByPoint(a)}b.center(c);var d=0;for(var g=0,f=e.length;g<f;g+=3){a.fromArray(e,g);d=Math.max(d,c.distanceToSquared(a))}this.boundingSphere.radius=Math.sqrt(d);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var d=this.index;var g=this.attributes;var v=this.groups;if(g.position){var e=g.position.array;if(g.normal===undefined){this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(e.length),3))}else{var k=g.normal.array;for(var r=0,h=k.length;r<h;r++){k[r]=0}}var k=g.normal.array;var u,s,q,p=new THREE.Vector3(),n=new THREE.Vector3(),m=new THREE.Vector3(),l=new THREE.Vector3(),A=new THREE.Vector3();if(d){var b=d.array;if(v.length===0){this.addGroup(0,b.length)}for(var o=0,t=v.length;o<t;++o){var f=v[o];var a=f.start;var c=f.count;for(var r=a,h=a+c;r<h;r+=3){u=b[r+0]*3;s=b[r+1]*3;q=b[r+2]*3;p.fromArray(e,u);n.fromArray(e,s);m.fromArray(e,q);l.subVectors(m,n);A.subVectors(p,n);l.cross(A);k[u]+=l.x;k[u+1]+=l.y;k[u+2]+=l.z;k[s]+=l.x;k[s+1]+=l.y;k[s+2]+=l.z;k[q]+=l.x;k[q+1]+=l.y;k[q+2]+=l.z}}}else{for(var r=0,h=e.length;r<h;r+=9){p.fromArray(e,r);n.fromArray(e,r+3);m.fromArray(e,r+6);l.subVectors(m,n);A.subVectors(p,n);l.cross(A);k[r]=l.x;k[r+1]=l.y;k[r+2]=l.z;k[r+3]=l.x;k[r+4]=l.y;k[r+5]=l.z;k[r+6]=l.x;k[r+7]=l.y;k[r+8]=l.z}}this.normalizeNormals();g.normal.needsUpdate=true}},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(a){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},merge:function(l,f){if(l instanceof THREE.BufferGeometry===false){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",l);return}if(f===undefined){f=0}var g=this.attributes;for(var m in g){if(l.attributes[m]===undefined){continue}var d=g[m];var b=d.array;var c=l.attributes[m];var a=c.array;var k=c.itemSize;for(var h=0,e=k*f;h<a.length;h++,e++){b[e]=a[h]}}return this},normalizeNormals:function(){var d=this.attributes.normal.array;var a,g,e,f;for(var c=0,b=d.length;c<b;c+=3){a=d[c];g=d[c+1];e=d[c+2];f=1/Math.sqrt(a*a+g*g+e*e);d[c]*=f;d[c+1]*=f;d[c+2]*=f}},toJSON:function(){var d={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};d.uuid=this.uuid;d.type=this.type;if(this.name!==""){d.name=this.name}if(this.parameters!==undefined){var i=this.parameters;for(var h in i){if(i[h]!==undefined){d[h]=i[h]}}return d}d.data={attributes:{}};var e=this.index;if(e!==null){var f=Array.prototype.slice.call(e.array);d.data.index={type:e.array.constructor.name,array:f}}var c=this.attributes;for(var h in c){var a=c[h];var f=Array.prototype.slice.call(a.array);d.data.attributes[h]={itemSize:a.itemSize,type:a.array.constructor.name,array:f}}var b=this.groups;if(b.length>0){d.data.groups=JSON.parse(JSON.stringify(b))}var g=this.boundingSphere;if(g!==null){d.data.boundingSphere={center:g.center.toArray(),radius:g.radius}}return d},clone:function(){return new this.constructor().copy(this)},copy:function(a){var h=a.index;if(h!==null){this.setIndex(h.clone())}var f=a.attributes;for(var b in f){var c=f[b];this.addAttribute(b,c.clone())}var d=a.groups;for(var g=0,e=d.length;g<e;g++){var j=d[g];this.addGroup(j.start,j.count)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.BufferGeometry.MaxIndex=65535;THREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this);this.type="InstancedBufferGeometry";this.maxInstancedCount=undefined};THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry;THREE.InstancedBufferGeometry.prototype.addGroup=function(c,a,b){this.groups.push({start:c,count:a,instances:b})};THREE.InstancedBufferGeometry.prototype.copy=function(a){var h=a.index;if(h!==null){this.setIndex(h.clone())}var f=a.attributes;for(var b in f){var c=f[b];this.addAttribute(b,c.clone())}var d=a.groups;for(var g=0,e=d.length;g<e;g++){var j=d[g];this.addGroup(j.start,j.count,j.instances)}return this};THREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype);THREE.AnimationAction=function(c,b,e,d,a){if(c===undefined){throw new Error("clip is null")}this.clip=c;this.localRoot=null;this.startTime=b||0;this.timeScale=e||1;this.weight=d||1;this.loop=a||THREE.LoopRepeat;this.loopCount=0;this.enabled=true;this.actionTime=-this.startTime;this.clipTime=0;this.propertyBindings=[]};THREE.AnimationAction.prototype={constructor:THREE.AnimationAction,setLocalRoot:function(a){this.localRoot=a;return this},updateTime:function(c){var d=this.clipTime;var f=this.loopCount;var a=this.actionTime;var e=this.clip.duration;this.actionTime=this.actionTime+c;if(this.loop===THREE.LoopOnce){this.loopCount=0;this.clipTime=Math.min(Math.max(this.actionTime,0),e);if(this.clipTime!==d){if(this.clipTime===e){this.mixer.dispatchEvent({type:"finished",action:this,direction:1})}else{if(this.clipTime===0){this.mixer.dispatchEvent({type:"finished",action:this,direction:-1})}}}return this.clipTime}this.loopCount=Math.floor(this.actionTime/e);var b=this.actionTime-this.loopCount*e;b=b%e;if(this.loop==THREE.LoopPingPong){if(Math.abs(this.loopCount%2)===1){b=e-b}}this.clipTime=b;if(this.loopCount!==f){this.mixer.dispatchEvent({type:"loop",action:this,loopDelta:(this.loopCount-this.loopCount)})}return this.clipTime},syncWith:function(a){this.actionTime=a.actionTime;this.timeScale=a.timeScale;return this},warpToDuration:function(a){this.timeScale=this.clip.duration/a;return this},init:function(a){this.clipTime=a-this.startTime;return this},update:function(a){this.updateTime(a);var b=this.clip.getAt(this.clipTime);return b},getTimeScaleAt:function(a){if(this.timeScale.getAt){return this.timeScale.getAt(a)}return this.timeScale},getWeightAt:function(a){if(this.weight.getAt){return this.weight.getAt(a)}return this.weight}};THREE.AnimationClip=function(c,e,b){this.name=c;this.tracks=b;this.duration=(e!==undefined)?e:-1;if(this.duration<0){for(var d=0;d<this.tracks.length;d++){var a=this.tracks[d];this.duration=Math.max(a.keys[a.keys.length-1].time)}}this.trim();this.optimize();this.results=[]};THREE.AnimationClip.prototype={constructor:THREE.AnimationClip,getAt:function(c){c=Math.max(0,Math.min(c,this.duration));for(var b=0;b<this.tracks.length;b++){var a=this.tracks[b];this.results[b]=a.getAt(c)}return this.results},trim:function(){for(var a=0;a<this.tracks.length;a++){this.tracks[a].trim(0,this.duration)}return this},optimize:function(){for(var a=0;a<this.tracks.length;a++){this.tracks[a].optimize()}return this}};THREE.AnimationClip.CreateFromMorphTargetSequence=function(b,f,e){var g=f.length;var a=[];for(var c=0;c<g;c++){var d=[];d.push({time:(c+g-1)%g,value:0});d.push({time:c,value:1});d.push({time:(c+1)%g,value:0});d.sort(THREE.KeyframeTrack.keyComparer);if(d[0].time===0){d.push({time:g,value:d[0].value})}a.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences["+f[c].name+"]",d).scale(1/e))}return new THREE.AnimationClip(b,-1,a)};THREE.AnimationClip.findByName=function(c,a){for(var b=0;b<c.length;b++){if(c[b].name===a){return c[b]}}return null};THREE.AnimationClip.CreateClipsFromMorphTargetSequences=function(d,c){var j={};var k=/^([\w-]*?)([\d]+)$/;for(var h=0,l=d.length;h<l;h++){var g=d[h];var e=g.name.match(k);if(e&&e.length>1){var b=e[1];var f=j[b];if(!f){j[b]=f=[]}f.push(g)}}var a=[];for(var b in j){a.push(THREE.AnimationClip.CreateFromMorphTargetSequence(b,j[b],c))}return a};THREE.AnimationClip.parse=function(c){var a=[];for(var b=0;b<c.tracks.length;b++){a.push(THREE.KeyframeTrack.parse(c.tracks[b]).scale(1/c.fps))}return new THREE.AnimationClip(c.name,c.duration,a)};THREE.AnimationClip.parseAnimation=function(v,u,b){if(!v){console.error("  no animation in JSONLoader data");return null}var e=function(E,I,m,H,G){var F=[];for(var h=0;h<I.length;h++){var D=I[h];if(D[m]!==undefined){F.push({time:D.time,value:G(D)})}}if(F.length>0){return new H(E,F)}return null};var s=[];var o=v.name||"default";var a=v.length||-1;var c=v.fps||30;var n=v.hierarchy||[];for(var t=0;t<n.length;t++){var C=n[t].keys;if(!C||C.length==0){continue}if(C[0].morphTargets){var p={};for(var r=0;r<C.length;r++){if(C[r].morphTargets){for(var q=0;q<C[r].morphTargets.length;q++){p[C[r].morphTargets[q]]=-1}}}for(var i in p){var j=[];for(var q=0;q<C[r].morphTargets.length;q++){var d=C[r];j.push({time:d.time,value:((d.morphTarget===i)?1:0)})}s.push(new THREE.NumberKeyframeTrack(b+".morphTargetInfluence["+i+"]",j))}a=p.length*(c||1)}else{var g=b+".bones["+u[t].name+"]";var f=e(g+".position",C,"pos",THREE.VectorKeyframeTrack,function(h){return new THREE.Vector3().fromArray(h.pos)});if(f){s.push(f)}var l=e(g+".quaternion",C,"rot",THREE.QuaternionKeyframeTrack,function(h){if(h.rot.slerp){return h.rot.clone()}else{return new THREE.Quaternion().fromArray(h.rot)}});if(l){s.push(l)}var B=e(g+".scale",C,"scl",THREE.VectorKeyframeTrack,function(h){return new THREE.Vector3().fromArray(h.scl)});if(B){s.push(B)}}}if(s.length===0){return null}var A=new THREE.AnimationClip(o,a,s);return A};THREE.AnimationMixer=function(a){this.root=a;this.time=0;this.timeScale=1;this.actions=[];this.propertyBindingMap={}};THREE.AnimationMixer.prototype={constructor:THREE.AnimationMixer,addAction:function(f){this.actions.push(f);f.init(this.time);f.mixer=this;var c=f.clip.tracks;var b=f.localRoot||this.root;for(var d=0;d<c.length;d++){var a=c[d];var g=b.uuid+"-"+a.name;var e=this.propertyBindingMap[g];if(e===undefined){e=new THREE.PropertyBinding(b,a.name);this.propertyBindingMap[g]=e}f.propertyBindings.push(e);e.referenceCount+=1}},removeAllActions:function(){for(var a=0;a<this.actions.length;a++){this.actions[a].mixer=null}for(var b in this.propertyBindingMap){this.propertyBindingMap[b].unbind()}this.actions=[];this.propertyBindingMap={};return this},removeAction:function(g){var d=this.actions.indexOf(g);if(d!==-1){this.actions.splice(d,1);g.mixer=null}var b=g.localRoot||this.root;var c=g.clip.tracks;for(var e=0;e<c.length;e++){var a=c[e];var h=b.uuid+"-"+a.name;var f=this.propertyBindingMap[h];f.referenceCount-=1;if(f.referenceCount<=0){f.unbind();delete this.propertyBindingMap[h]}}return this},findActionByName:function(a){for(var b=0;b<this.actions.length;b++){if(this.actions[b].name===a){return this.actions[b]}}return null},play:function(b,a){b.startTime=this.time;this.addAction(b);return this},fadeOut:function(b,c){var a=[];a.push({time:this.time,value:1});a.push({time:this.time+c,value:0});b.weight=new THREE.NumberKeyframeTrack("weight",a);return this},fadeIn:function(b,c){var a=[];a.push({time:this.time,value:0});a.push({time:this.time+c,value:1});b.weight=new THREE.NumberKeyframeTrack("weight",a);return this},warp:function(c,e,a,d){var b=[];b.push({time:this.time,value:e});b.push({time:this.time+d,value:a});c.timeScale=new THREE.NumberKeyframeTrack("timeScale",b);return this},crossFade:function(e,f,c,b){this.fadeOut(e,c);this.fadeIn(f,c);if(b){var a=e.clip.duration/f.clip.duration;var d=1/a;this.warp(e,1,a,c);this.warp(f,d,1,c)}return this},update:function(l){var g=l*this.timeScale;this.time+=g;for(var h=0;h<this.actions.length;h++){var e=this.actions[h];var k=e.getWeightAt(this.time);var c=e.getTimeScaleAt(this.time);var b=g*c;var m=e.update(b);if(e.weight<=0||!e.enabled){continue}for(var f=0;f<m.length;f++){var a=e.clip.tracks[f].name;e.propertyBindings[f].accumulate(m[f],k)}}for(var d in this.propertyBindingMap){this.propertyBindingMap[d].apply()}return this}};THREE.EventDispatcher.prototype.apply(THREE.AnimationMixer.prototype);THREE.AnimationUtils={getEqualsFunc:function(b){if(b.equals){return function c(e,d){return e.equals(d)}}return function a(e,d){return(e===d)}},clone:function(b){var a=typeof b;if(a==="object"){if(b.clone){return b.clone()}console.error("can not figure out how to copy exemplarValue",b)}return b},lerp:function(d,c,g,f){var e=THREE.AnimationUtils.getLerpFunc(d,f);return e(d,c,g)},lerp_object:function(d,c,e){return d.lerp(c,e)},slerp_object:function(d,c,e){return d.slerp(c,e)},lerp_number:function(d,c,e){return d*(1-e)+c*e},lerp_boolean:function(d,c,e){return(e<0.5)?d:c},lerp_boolean_immediate:function(d,c,e){return d},lerp_string:function(d,c,e){return(e<0.5)?d:c},lerp_string_immediate:function(d,c,e){return d},getLerpFunc:function(c,b){if(c===undefined||c===null){throw new Error("examplarValue is null")}var a=typeof c;switch(a){case"object":if(c.lerp){return THREE.AnimationUtils.lerp_object}if(c.slerp){return THREE.AnimationUtils.slerp_object}break;case"number":return THREE.AnimationUtils.lerp_number;case"boolean":if(b){return THREE.AnimationUtils.lerp_boolean}else{return THREE.AnimationUtils.lerp_boolean_immediate}case"string":if(b){return THREE.AnimationUtils.lerp_string}else{return THREE.AnimationUtils.lerp_string_immediate}}}};THREE.KeyframeTrack=function(a,b){if(a===undefined){throw new Error("track name is undefined")}if(b===undefined||b.length===0){throw new Error("no keys in track named "+a)}this.name=a;this.keys=b;this.lastIndex=0;this.validate();this.optimize()};THREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,getAt:function(c){while((this.lastIndex<this.keys.length)&&(c>=this.keys[this.lastIndex].time)){this.lastIndex++}while((this.lastIndex>0)&&(c<this.keys[this.lastIndex-1].time)){this.lastIndex--}if(this.lastIndex>=this.keys.length){this.setResult(this.keys[this.keys.length-1].value);return this.result}if(this.lastIndex===0){this.setResult(this.keys[0].value);return this.result}var a=this.keys[this.lastIndex-1];this.setResult(a.value);if(a.constantToNext){return this.result}var d=this.keys[this.lastIndex];var b=(c-a.time)/(d.time-a.time);this.result=this.lerpValues(this.result,d.value,b);return this.result},shift:function(a){if(a!==0){for(var b=0;b<this.keys.length;b++){this.keys[b].time+=a}}return this},scale:function(b){if(b!==1){for(var a=0;a<this.keys.length;a++){this.keys[a].time*=b}}return this},trim:function(d,a){var c=0;for(var b=1;b<this.keys.length;b++){if(this.keys[b]<=d){c++}}var e=0;for(var b=this.keys.length-2;b>0;b++){if(this.keys[b]>=a){e++}else{break}}if((c+e)>0){this.keys=this.keys.splice(c,this.keys.length-e-c)}return this},validate:function(){var c=null;if(this.keys.length===0){console.error("  track is empty, no keys",this);return}for(var b=0;b<this.keys.length;b++){var a=this.keys[b];if(!a){console.error("  key is null in track",this,b);return}if((typeof a.time)!=="number"||isNaN(a.time)){console.error("  key.time is not a valid number",this,b,a);return}if(a.value===undefined||a.value===null){console.error("  key.value is null in track",this,b,a);return}if(c&&c.time>a.time){console.error("  key.time is less than previous key time, out of order keys",this,b,a,c);return}c=a}return this},optimize:function(){var d=[];var e=this.keys[0];d.push(e);var f=THREE.AnimationUtils.getEqualsFunc(e.value);for(var c=1;c<this.keys.length-1;c++){var b=this.keys[c];var a=this.keys[c+1];if((e.time===b.time)){continue}if(this.compareValues(e.value,b.value)&&this.compareValues(b.value,a.value)){continue}e.constantToNext=this.compareValues(e.value,b.value);d.push(b);e=b}d.push(this.keys[this.keys.length-1]);this.keys=d;return this}};THREE.KeyframeTrack.keyComparer=function keyComparator(b,a){return b.time-a.time};THREE.KeyframeTrack.parse=function(a){if(a.type===undefined){throw new Error("track type undefined, can not parse")}var b=THREE.KeyframeTrack.GetTrackTypeForTypeName(a.type);return b.parse(a)};THREE.KeyframeTrack.GetTrackTypeForTypeName=function(a){switch(a.toLowerCase()){case"vector":case"vector2":case"vector3":case"vector4":return THREE.VectorKeyframeTrack;case"quaternion":return THREE.QuaternionKeyframeTrack;case"integer":case"scalar":case"double":case"float":case"number":return THREE.NumberKeyframeTrack;case"bool":case"boolean":return THREE.BooleanKeyframeTrack;case"string":return THREE.StringKeyframeTrack}throw new Error("Unsupported typeName: "+a)};THREE.PropertyBinding=function(a,c){this.rootNode=a;this.trackName=c;this.referenceCount=0;this.originalValue=null;var b=THREE.PropertyBinding.parseTrackName(c);this.directoryName=b.directoryName;this.nodeName=b.nodeName;this.objectName=b.objectName;this.objectIndex=b.objectIndex;this.propertyName=b.propertyName;this.propertyIndex=b.propertyIndex;this.node=THREE.PropertyBinding.findNode(a,this.nodeName)||a;this.cumulativeValue=null;this.cumulativeWeight=0};THREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,reset:function(){this.cumulativeValue=null;this.cumulativeWeight=0},accumulate:function(c,b){if(!this.isBound){this.bind()}if(this.cumulativeWeight===0){if(b>0){if(this.cumulativeValue===null){this.cumulativeValue=THREE.AnimationUtils.clone(c)}this.cumulativeWeight=b}}else{var a=b/(this.cumulativeWeight+b);this.cumulativeValue=this.lerpValue(this.cumulativeValue,c,a);this.cumulativeWeight+=b}},unbind:function(){if(!this.isBound){return}this.setValue(this.originalValue);this.setValue=null;this.getValue=null;this.lerpValue=null;this.equalsValue=null;this.triggerDirty=null;this.isBound=false},bind:function(){if(this.isBound){return}var l=this.node;if(!l){console.error("  trying to update node for track: "+this.trackName+" but it wasn't found.");return}if(this.objectName){if(this.objectName==="materials"){if(!l.material){console.error("  can not bind to material as node does not have a material",this);return}if(!l.material.materials){console.error("  can not bind to material.materials as node.material does not have a materials array",this);return}l=l.material.materials}else{if(this.objectName==="bones"){if(!l.skeleton){console.error("  can not bind to bones as node does not have a skeleton",this);return}l=l.skeleton.bones;for(var f=0;f<l.length;f++){if(l[f].name===this.objectIndex){this.objectIndex=f;break}}}else{if(l[this.objectName]===undefined){console.error("  can not bind to objectName of node, undefined",this);return}l=l[this.objectName]}}if(this.objectIndex!==undefined){if(l[this.objectIndex]===undefined){console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,l);return}l=l[this.objectIndex]}}var j=l[this.propertyName];if(!j){console.error("  trying to update property for track: "+this.nodeName+"."+this.propertyName+" but it wasn't found.",l);return}if(this.propertyIndex!==undefined){if(this.propertyName==="morphTargetInfluences"){if(!l.geometry){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this)}if(!l.geometry.morphTargets){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this)}for(var f=0;f<this.node.geometry.morphTargets.length;f++){if(l.geometry.morphTargets[f].name===this.propertyIndex){this.propertyIndex=f;break}}}this.setValue=function c(i){if(!this.equalsValue(j[this.propertyIndex],i)){j[this.propertyIndex]=i;return true}return false};this.getValue=function e(){return j[this.propertyIndex]}}else{if(j.copy){this.setValue=function k(i){if(!this.equalsValue(j,i)){j.copy(i);return true}return false};this.getValue=function a(){return j}}else{this.setValue=function h(i){if(!this.equalsValue(l[this.propertyName],i)){l[this.propertyName]=i;return true}return false};this.getValue=function b(){return l[this.propertyName]}}}if(l.needsUpdate!==undefined){this.triggerDirty=function d(){this.node.needsUpdate=true}}else{if(l.matrixWorldNeedsUpdate!==undefined){this.triggerDirty=function g(){l.matrixWorldNeedsUpdate=true}}}this.originalValue=this.getValue();this.equalsValue=THREE.AnimationUtils.getEqualsFunc(this.originalValue);this.lerpValue=THREE.AnimationUtils.getLerpFunc(this.originalValue,true);this.isBound=true},apply:function(){if(!this.isBound){this.bind()}if(this.cumulativeWeight>0){if(this.cumulativeWeight<1){var c=1-this.cumulativeWeight;var b=c/(this.cumulativeWeight+c);this.cumulativeValue=this.lerpValue(this.cumulativeValue,this.originalValue,b)}var a=this.setValue(this.cumulativeValue);if(a&&this.triggerDirty){this.triggerDirty()}this.cumulativeValue=null;this.cumulativeWeight=0}}};THREE.PropertyBinding.parseTrackName=function(b){var c=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_. ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/;var d=c.exec(b);if(!d){throw new Error("cannot parse trackName at all: "+b)}if(d.index===c.lastIndex){c.lastIndex++}var a={directoryName:d[1],nodeName:d[3],objectName:d[5],objectIndex:d[7],propertyName:d[9],propertyIndex:d[11]};if(a.propertyName===null||a.propertyName.length===0){throw new Error("can not parse propertyName from trackName: "+b)}return a};THREE.PropertyBinding.findNode=function(a,f){function c(j){for(var g=0;g<j.bones.length;g++){var h=j.bones[g];if(h.name===f){return h}}return null}function e(k){for(var j=0;j<k.length;j++){var h=k[j];if(h.name===f||h.uuid===f){return h}var g=e(h.children);if(g){return g}}return null}if(!f||f===""||f==="root"||f==="."||f===-1||f===a.name||f===a.uuid){return a}if(a.skeleton){var d=c(a.skeleton);if(d){return d}}if(a.children){var b=e(a.children);if(b){return b}}return null};THREE.VectorKeyframeTrack=function(a,b){THREE.KeyframeTrack.call(this,a,b);this.result=this.keys[0].value.clone()};THREE.VectorKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype);THREE.VectorKeyframeTrack.prototype.constructor=THREE.VectorKeyframeTrack;THREE.VectorKeyframeTrack.prototype.setResult=function(a){this.result.copy(a)};THREE.VectorKeyframeTrack.prototype.lerpValues=function(b,a,c){return b.lerp(a,c)};THREE.VectorKeyframeTrack.prototype.compareValues=function(b,a){return b.equals(a)};THREE.VectorKeyframeTrack.prototype.clone=function(){var c=[];for(var b=0;b<this.keys.length;b++){var a=this.keys[b];c.push({time:a.time,value:a.value.clone()})}return new THREE.VectorKeyframeTrack(this.name,c)};THREE.VectorKeyframeTrack.parse=function(b){var e=b.keys[0].value.length;var f=THREE["Vector"+e];var d=[];for(var a=0;a<b.keys.length;a++){var c=b.keys[a];d.push({value:new f().fromArray(c.value),time:c.time})}return new THREE.VectorKeyframeTrack(b.name,d)};THREE.QuaternionKeyframeTrack=function(a,b){THREE.KeyframeTrack.call(this,a,b);this.result=this.keys[0].value.clone()};THREE.QuaternionKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype);THREE.QuaternionKeyframeTrack.prototype.constructor=THREE.QuaternionKeyframeTrack;THREE.QuaternionKeyframeTrack.prototype.setResult=function(a){this.result.copy(a)};THREE.QuaternionKeyframeTrack.prototype.lerpValues=function(b,a,c){return b.slerp(a,c)};THREE.QuaternionKeyframeTrack.prototype.compareValues=function(b,a){return b.equals(a)};THREE.QuaternionKeyframeTrack.prototype.multiply=function(b){for(var a=0;a<this.keys.length;a++){this.keys[a].value.multiply(b)}return this};THREE.QuaternionKeyframeTrack.prototype.clone=function(){var c=[];for(var b=0;b<this.keys.length;b++){var a=this.keys[b];c.push({time:a.time,value:a.value.clone()})}return new THREE.QuaternionKeyframeTrack(this.name,c)};THREE.QuaternionKeyframeTrack.parse=function(b){var d=[];for(var a=0;a<b.keys.length;a++){var c=b.keys[a];d.push({value:new THREE.Quaternion().fromArray(c.value),time:c.time})}return new THREE.QuaternionKeyframeTrack(b.name,d)};THREE.StringKeyframeTrack=function(a,b){THREE.KeyframeTrack.call(this,a,b);this.result=this.keys[0].value};THREE.StringKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype);THREE.StringKeyframeTrack.prototype.constructor=THREE.StringKeyframeTrack;THREE.StringKeyframeTrack.prototype.setResult=function(a){this.result=a};THREE.StringKeyframeTrack.prototype.lerpValues=function(b,a,c){return(c<1)?b:a};THREE.StringKeyframeTrack.prototype.compareValues=function(b,a){return(b===a)};THREE.StringKeyframeTrack.prototype.clone=function(){var c=[];for(var b=0;b<this.keys.length;b++){var a=this.keys[b];c.push({time:a.time,value:a.value})}return new THREE.StringKeyframeTrack(this.name,c)};THREE.StringKeyframeTrack.parse=function(a){return new THREE.StringKeyframeTrack(a.name,a.keys)};THREE.BooleanKeyframeTrack=function(a,b){THREE.KeyframeTrack.call(this,a,b);this.result=this.keys[0].value};THREE.BooleanKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype);THREE.BooleanKeyframeTrack.prototype.constructor=THREE.BooleanKeyframeTrack;THREE.BooleanKeyframeTrack.prototype.setResult=function(a){this.result=a};THREE.BooleanKeyframeTrack.prototype.lerpValues=function(b,a,c){return(c<1)?b:a};THREE.BooleanKeyframeTrack.prototype.compareValues=function(b,a){return(b===a)};THREE.BooleanKeyframeTrack.prototype.clone=function(){var c=[];for(var b=0;b<this.keys.length;b++){var a=this.keys[b];c.push({time:a.time,value:a.value})}return new THREE.BooleanKeyframeTrack(this.name,c)};THREE.BooleanKeyframeTrack.parse=function(a){return new THREE.BooleanKeyframeTrack(a.name,a.keys)};THREE.NumberKeyframeTrack=function(a,b){THREE.KeyframeTrack.call(this,a,b);this.result=this.keys[0].value};THREE.NumberKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype);THREE.NumberKeyframeTrack.prototype.constructor=THREE.NumberKeyframeTrack;THREE.NumberKeyframeTrack.prototype.setResult=function(a){this.result=a};THREE.NumberKeyframeTrack.prototype.lerpValues=function(b,a,c){return b*(1-c)+a*c};THREE.NumberKeyframeTrack.prototype.compareValues=function(b,a){return(b===a)};THREE.NumberKeyframeTrack.prototype.clone=function(){var c=[];for(var b=0;b<this.keys.length;b++){var a=this.keys[b];c.push({time:a.time,value:a.value})}return new THREE.NumberKeyframeTrack(this.name,c)};THREE.NumberKeyframeTrack.parse=function(a){return new THREE.NumberKeyframeTrack(a.name,a.keys)};THREE.Camera=function(){THREE.Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new THREE.Matrix4();this.projectionMatrix=new THREE.Matrix4()};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion();return function(c){var b=c||new THREE.Vector3();this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4();return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(){return new this.constructor().copy(this)};THREE.Camera.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.matrixWorldInverse.copy(a.matrixWorldInverse);this.projectionMatrix.copy(a.projectionMatrix);return this};THREE.CubeCamera=function(f,e,g){THREE.Object3D.call(this);this.type="CubeCamera";var d=90,b=1;var c=new THREE.PerspectiveCamera(d,b,f,e);c.up.set(0,-1,0);c.lookAt(new THREE.Vector3(1,0,0));this.add(c);var j=new THREE.PerspectiveCamera(d,b,f,e);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(-1,0,0));this.add(j);var a=new THREE.PerspectiveCamera(d,b,f,e);a.up.set(0,0,1);a.lookAt(new THREE.Vector3(0,1,0));this.add(a);var i=new THREE.PerspectiveCamera(d,b,f,e);i.up.set(0,0,-1);i.lookAt(new THREE.Vector3(0,-1,0));this.add(i);var k=new THREE.PerspectiveCamera(d,b,f,e);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,1));this.add(k);var h=new THREE.PerspectiveCamera(d,b,f,e);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,-1));this.add(h);this.renderTarget=new THREE.WebGLRenderTargetCube(g,g,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(n,o){if(this.parent===null){this.updateMatrixWorld()}var m=this.renderTarget;var l=m.texture.generateMipmaps;m.texture.generateMipmaps=false;m.activeCubeFace=0;n.render(o,c,m);m.activeCubeFace=1;n.render(o,j,m);m.activeCubeFace=2;n.render(o,a,m);m.activeCubeFace=3;n.render(o,i,m);m.activeCubeFace=4;n.render(o,k,m);m.texture.generateMipmaps=l;m.activeCubeFace=5;n.render(o,h,m);n.setRenderTarget(null)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;THREE.OrthographicCamera=function(f,c,e,b,d,a){THREE.Camera.call(this);this.type="OrthographicCamera";this.zoom=1;this.left=f;this.right=c;this.top=e;this.bottom=b;this.near=(d!==undefined)?d:0.1;this.far=(a!==undefined)?a:2000;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var c=(this.right-this.left)/(2*this.zoom);var b=(this.top-this.bottom)/(2*this.zoom);var a=(this.right+this.left)/2;var d=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(a-c,a+c,d+b,d-b,this.near,this.far)};THREE.OrthographicCamera.prototype.copy=function(a){THREE.Camera.prototype.copy.call(this,a);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;return this};THREE.OrthographicCamera.prototype.toJSON=function(b){var a=THREE.Object3D.prototype.toJSON.call(this,b);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;return a};THREE.PerspectiveCamera=function(c,b,d,a){THREE.Camera.call(this);this.type="PerspectiveCamera";this.zoom=1;this.fov=c!==undefined?c:50;this.aspect=b!==undefined?b:1;this.near=d!==undefined?d:0.1;this.far=a!==undefined?a:2000;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(b,a){if(a===undefined){a=24}this.fov=2*THREE.Math.radToDeg(Math.atan(a/(b*2)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(e,c,b,f,d,a){this.fullWidth=e;this.fullHeight=c;this.x=b;this.y=f;this.width=d;this.height=a;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var d=THREE.Math.radToDeg(2*Math.atan(Math.tan(THREE.Math.degToRad(this.fov)*0.5)/this.zoom));if(this.fullWidth){var c=this.fullWidth/this.fullHeight;var h=Math.tan(THREE.Math.degToRad(d*0.5))*this.near;var b=-h;var g=c*b;var e=c*h;var f=Math.abs(e-g);var a=Math.abs(h-b);this.projectionMatrix.makeFrustum(g+this.x*f/this.fullWidth,g+(this.x+this.width)*f/this.fullWidth,h-(this.y+this.height)*a/this.fullHeight,h-this.y*a/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(d,this.aspect,this.near,this.far)}};THREE.PerspectiveCamera.prototype.copy=function(a){THREE.Camera.prototype.copy.call(this,a);this.fov=a.fov;this.aspect=a.aspect;this.near=a.near;this.far=a.far;this.zoom=a.zoom;return this};THREE.PerspectiveCamera.prototype.toJSON=function(b){var a=THREE.Object3D.prototype.toJSON.call(this,b);a.object.zoom=this.zoom;a.object.fov=this.fov;a.object.aspect=this.aspect;a.object.near=this.near;a.object.far=this.far;return a};THREE.Light=function(a){THREE.Object3D.call(this);this.type="Light";this.color=new THREE.Color(a);this.receiveShadow=undefined};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;Object.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(a){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){this.shadow.camera.far=a}},shadowCameraVisible:{set:function(a){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow ) instead.")}},shadowBias:{set:function(a){this.shadow.bias=a}},shadowDarkness:{set:function(a){this.shadow.darkness=a}},shadowMapWidth:{set:function(a){this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){this.shadow.mapSize.height=a}}});THREE.Light.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.color.copy(a.color);return this};THREE.Light.prototype.toJSON=function(b){var a=THREE.Object3D.prototype.toJSON.call(this,b);a.object.color=this.color.getHex();if(this.groundColor!==undefined){a.object.groundColor=this.groundColor.getHex()}if(this.intensity!==undefined){a.object.intensity=this.intensity}if(this.distance!==undefined){a.object.distance=this.distance}if(this.angle!==undefined){a.object.angle=this.angle}if(this.decay!==undefined){a.object.decay=this.decay}if(this.exponent!==undefined){a.object.exponent=this.exponent}return a};THREE.LightShadow=function(a){this.camera=a;this.bias=0;this.darkness=1;this.mapSize=new THREE.Vector2(512,512);this.map=null;this.matrix=null};THREE.LightShadow.prototype={constructor:THREE.LightShadow,copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.darkness=a.darkness;this.mapSize.copy(a.mapSize)},clone:function(){return new this.constructor().copy(this)}};THREE.AmbientLight=function(a){THREE.Light.call(this,a);this.type="AmbientLight";this.castShadow=undefined};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(b,a){THREE.Light.call(this,b);this.type="DirectionalLight";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D();this.intensity=(a!==undefined)?a:1;this.shadow=new THREE.LightShadow(new THREE.OrthographicCamera(-500,500,500,-500,50,5000))};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.DirectionalLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.intensity=a.intensity;this.target=a.target.clone();this.shadow=a.shadow.clone();return this};THREE.HemisphereLight=function(b,c,a){THREE.Light.call(this,b);this.type="HemisphereLight";this.castShadow=undefined;this.position.set(0,1,0);this.updateMatrix();this.groundColor=new THREE.Color(c);this.intensity=(a!==undefined)?a:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight;THREE.HemisphereLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);this.intensity=a.intensity;return this};THREE.PointLight=function(b,a,d,c){THREE.Light.call(this,b);this.type="PointLight";this.intensity=(a!==undefined)?a:1;this.distance=(d!==undefined)?d:0;this.decay=(c!==undefined)?c:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,1,500))};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.PointLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.intensity=a.intensity;this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this};THREE.SpotLight=function(b,a,f,e,d,c){THREE.Light.call(this,b);this.type="SpotLight";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D();this.intensity=(a!==undefined)?a:1;this.distance=(f!==undefined)?f:0;this.angle=(e!==undefined)?e:Math.PI/3;this.exponent=(d!==undefined)?d:10;this.decay=(c!==undefined)?c:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(50,1,50,5000))};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;THREE.SpotLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.intensity=a.intensity;this.distance=a.distance;this.angle=a.angle;this.exponent=a.exponent;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this};THREE.Cache={enabled:false,files:{},add:function(b,a){if(this.enabled===false){return}this.files[b]=a},get:function(a){if(this.enabled===false){return}return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};THREE.Loader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:undefined,extractUrlBase:function(a){var b=a.split("/");if(b.length===1){return"./"}b.pop();return b.join("/")+"/"},initMaterials:function(a,d,b){var e=[];for(var c=0;c<a.length;++c){e[c]=this.createMaterial(a[c],d,b)}return e},createMaterial:(function(){var a,b,c;return function(e,i,f){if(a===undefined){a=new THREE.Color()}if(b===undefined){b=new THREE.TextureLoader()}if(c===undefined){c=new THREE.MaterialLoader()}var d={};function k(t,n,q,o,m){var p=i+t;var s=THREE.Loader.Handlers.get(p);var r;if(s!==null){r=s.load(p)}else{b.setCrossOrigin(f);r=b.load(p)}if(n!==undefined){r.repeat.fromArray(n);if(n[0]!==1){r.wrapS=THREE.RepeatWrapping}if(n[1]!==1){r.wrapT=THREE.RepeatWrapping}}if(q!==undefined){r.offset.fromArray(q)}if(o!==undefined){if(o[0]==="repeat"){r.wrapS=THREE.RepeatWrapping}if(o[0]==="mirror"){r.wrapS=THREE.MirroredRepeatWrapping}if(o[1]==="repeat"){r.wrapT=THREE.RepeatWrapping}if(o[1]==="mirror"){r.wrapT=THREE.MirroredRepeatWrapping}}if(m!==undefined){r.anisotropy=m}var l=THREE.Math.generateUUID();d[l]=r;return l}var h={uuid:THREE.Math.generateUUID(),type:"MeshLambertMaterial"};for(var g in e){var j=e[g];switch(g){case"DbgColor":h.color=j;break;case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":h.name=j;break;case"blending":h.blending=THREE[j];break;case"colorDiffuse":h.color=a.fromArray(j).getHex();break;case"colorSpecular":h.specular=a.fromArray(j).getHex();break;case"colorEmissive":h.emissive=a.fromArray(j).getHex();break;case"specularCoef":h.shininess=j;break;case"shading":if(j.toLowerCase()==="basic"){h.type="MeshBasicMaterial"}if(j.toLowerCase()==="phong"){h.type="MeshPhongMaterial"}break;case"mapDiffuse":h.map=k(j,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapLight":h.lightMap=k(j,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":h.aoMap=k(j,e.mapAORepeat,e.mapAOOffset,e.mapAOWrap,e.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":h.bumpMap=k(j,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy);break;case"mapBumpScale":h.bumpScale=j;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":h.normalMap=k(j,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy);break;case"mapNormalFactor":h.normalScale=[j,j];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":h.specularMap=k(j,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapAlpha":h.alphaMap=k(j,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":h.side=THREE.BackSide;break;case"doubleSided":h.side=THREE.DoubleSide;break;case"transparency":console.warn("THREE.Loader: transparency has been renamed to opacity");h.opacity=j;break;case"opacity":case"transparent":case"depthTest":case"depthWrite":case"transparent":case"visible":case"wireframe":h[g]=j;break;case"vertexColors":if(j===true){h.vertexColors=THREE.VertexColors}if(j==="face"){h.vertexColors=THREE.FaceColors}break;default:console.error("Loader.createMaterial: Unsupported",g,j);break}}if(h.type!=="MeshPhongMaterial"){delete h.specular}if(h.opacity<1){h.transparent=true}c.setTextures(d);return c.parse(h)}})()};THREE.Loader.Handlers={handlers:[],add:function(b,a){this.handlers.push(b,a)},get:function(e){var c=this.handlers;for(var d=0,b=c.length;d<b;d+=2){var f=c[d];var a=c[d+1];if(f.test(e)){return a}}return null}};THREE.XHRLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,d,g,f){var c=this;var b=THREE.Cache.get(a);if(b!==undefined){if(d){setTimeout(function(){d(b)},0)}return b}var e=new XMLHttpRequest();e.open("GET",a,true);e.addEventListener("load",function(i){var h=i.target.response;THREE.Cache.add(a,h);if(d){d(h)}c.manager.itemEnd(a)},false);if(g!==undefined){e.addEventListener("progress",function(h){g(h)},false)}e.addEventListener("error",function(h){if(f){f(h)}c.manager.itemError(a)},false);if(this.crossOrigin!==undefined){e.crossOrigin=this.crossOrigin}if(this.responseType!==undefined){e.responseType=this.responseType}if(this.withCredentials!==undefined){e.withCredentials=this.withCredentials}e.send(null);c.manager.itemStart(a);return e},setResponseType:function(a){this.responseType=a},setCrossOrigin:function(a){this.crossOrigin=a},setWithCredentials:function(a){this.withCredentials=a}};THREE.ImageLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,d,g,e){var c=this;var b=THREE.Cache.get(a);if(b!==undefined){c.manager.itemStart(a);if(d){setTimeout(function(){d(b);c.manager.itemEnd(a)},0)}else{c.manager.itemEnd(a)}return b}var f=document.createElement("img");f.addEventListener("load",function(h){THREE.Cache.add(a,this);if(d){d(this)}c.manager.itemEnd(a)},false);if(g!==undefined){f.addEventListener("progress",function(h){g(h)},false)}f.addEventListener("error",function(h){if(e){e(h)}c.manager.itemError(a)},false);if(this.crossOrigin!==undefined){f.crossOrigin=this.crossOrigin}c.manager.itemStart(a);f.src=a;return f},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.JSONLoader=function(a){if(typeof a==="boolean"){console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor.");a=undefined}this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this.withCredentials=false};THREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){if(this._statusDomElement===undefined){this._statusDomElement=document.createElement("div")}console.warn("THREE.JSONLoader: .statusDomElement has been removed.");return this._statusDomElement},load:function(b,d,g,f){var c=this;var e=this.texturePath&&(typeof this.texturePath==="string")?this.texturePath:THREE.Loader.prototype.extractUrlBase(b);var a=new THREE.XHRLoader(this.manager);a.setCrossOrigin(this.crossOrigin);a.setWithCredentials(this.withCredentials);a.load(b,function(k){var j=JSON.parse(k);var i=j.metadata;if(i!==undefined){if(i.type==="object"){console.error("THREE.JSONLoader: "+b+" should be loaded with THREE.ObjectLoader instead.");return}if(i.type==="scene"){console.error("THREE.JSONLoader: "+b+" should be loaded with THREE.SceneLoader instead.");return}}var h=c.parse(j,e);d(h.geometry,h.materials)})},setCrossOrigin:function(a){this.crossOrigin=a},setTexturePath:function(a){this.texturePath=a},parse:function(i,c){var f=new THREE.Geometry(),d=(i.scale!==undefined)?1/i.scale:1;a(d);g();b(d);e();f.computeFaceNormals();f.computeBoundingSphere();function a(W){function B(u,j){return u&(1<<j)}var R,Q,H,s,r,q,U,K,D,o,I,L,k,T,P,O,M,S,E,n,m,C,V,p,A,J,G,l=i.faces,t=i.vertices,N=i.normals,F=i.colors,X=0;if(i.uvs!==undefined){for(R=0;R<i.uvs.length;R++){if(i.uvs[R].length){X++}}for(R=0;R<X;R++){f.faceVertexUvs[R]=[]}}s=0;r=t.length;while(s<r){S=new THREE.Vector3();S.x=t[s++]*W;S.y=t[s++]*W;S.z=t[s++]*W;f.vertices.push(S)}s=0;r=l.length;while(s<r){o=l[s++];I=B(o,0);L=B(o,1);k=B(o,3);T=B(o,4);P=B(o,5);O=B(o,6);M=B(o,7);if(I){n=new THREE.Face3();n.a=l[s];n.b=l[s+1];n.c=l[s+3];m=new THREE.Face3();m.a=l[s+1];m.b=l[s+2];m.c=l[s+3];s+=4;if(L){D=l[s++];n.materialIndex=D;m.materialIndex=D}H=f.faces.length;if(k){for(R=0;R<X;R++){p=i.uvs[R];f.faceVertexUvs[R][H]=[];f.faceVertexUvs[R][H+1]=[];for(Q=0;Q<4;Q++){K=l[s++];J=p[K*2];G=p[K*2+1];A=new THREE.Vector2(J,G);if(Q!==2){f.faceVertexUvs[R][H].push(A)}if(Q!==0){f.faceVertexUvs[R][H+1].push(A)}}}}if(T){U=l[s++]*3;n.normal.set(N[U++],N[U++],N[U]);m.normal.copy(n.normal)}if(P){for(R=0;R<4;R++){U=l[s++]*3;V=new THREE.Vector3(N[U++],N[U++],N[U]);if(R!==2){n.vertexNormals.push(V)}if(R!==0){m.vertexNormals.push(V)}}}if(O){q=l[s++];C=F[q];n.color.setHex(C);m.color.setHex(C)}if(M){for(R=0;R<4;R++){q=l[s++];C=F[q];if(R!==2){n.vertexColors.push(new THREE.Color(C))}if(R!==0){m.vertexColors.push(new THREE.Color(C))}}}f.faces.push(n);f.faces.push(m)}else{E=new THREE.Face3();E.a=l[s++];E.b=l[s++];E.c=l[s++];if(L){D=l[s++];E.materialIndex=D}H=f.faces.length;if(k){for(R=0;R<X;R++){p=i.uvs[R];f.faceVertexUvs[R][H]=[];for(Q=0;Q<3;Q++){K=l[s++];J=p[K*2];G=p[K*2+1];A=new THREE.Vector2(J,G);f.faceVertexUvs[R][H].push(A)}}}if(T){U=l[s++]*3;E.normal.set(N[U++],N[U++],N[U])}if(P){for(R=0;R<3;R++){U=l[s++]*3;V=new THREE.Vector3(N[U++],N[U++],N[U]);E.vertexNormals.push(V)}}if(O){q=l[s++];E.color.setHex(F[q])}if(M){for(R=0;R<3;R++){q=l[s++];E.vertexColors.push(new THREE.Color(F[q]))}}f.faces.push(E)}}}function g(){var j=(i.influencesPerVertex!==undefined)?i.influencesPerVertex:2;if(i.skinWeights){for(var m=0,k=i.skinWeights.length;m<k;m+=j){var t=i.skinWeights[m];var r=(j>1)?i.skinWeights[m+1]:0;var p=(j>2)?i.skinWeights[m+2]:0;var u=(j>3)?i.skinWeights[m+3]:0;f.skinWeights.push(new THREE.Vector4(t,r,p,u))}}if(i.skinIndices){for(var m=0,k=i.skinIndices.length;m<k;m+=j){var s=i.skinIndices[m];var q=(j>1)?i.skinIndices[m+1]:0;var o=(j>2)?i.skinIndices[m+2]:0;var n=(j>3)?i.skinIndices[m+3]:0;f.skinIndices.push(new THREE.Vector4(s,q,o,n))}}f.bones=i.bones;if(f.bones&&f.bones.length>0&&(f.skinWeights.length!==f.skinIndices.length||f.skinIndices.length!==f.vertices.length)){console.warn("When skinning, number of vertices ("+f.vertices.length+"), skinIndices ("+f.skinIndices.length+"), and skinWeights ("+f.skinWeights.length+") should match.")}}function b(m){if(i.morphTargets!==undefined){for(var o=0,n=i.morphTargets.length;o<n;o++){f.morphTargets[o]={};f.morphTargets[o].name=i.morphTargets[o].name;f.morphTargets[o].vertices=[];var q=f.morphTargets[o].vertices;var t=i.morphTargets[o].vertices;for(var s=0,k=t.length;s<k;s+=3){var p=new THREE.Vector3();p.x=t[s]*m;p.y=t[s+1]*m;p.z=t[s+2]*m;q.push(p)}}}if(i.morphColors!==undefined&&i.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');var j=f.faces;var r=i.morphColors[0].colors;for(var o=0,n=j.length;o<n;o++){j[o].color.fromArray(r,o*3)}}}function e(){var m=[];var n=[];if(i.animation!==undefined){n.push(i.animation)}if(i.animations!==undefined){if(i.animations.length){n=n.concat(i.animations)}else{n.push(i.animations)}}for(var j=0;j<n.length;j++){var l=THREE.AnimationClip.parseAnimation(n[j],f.bones);if(l){m.push(l)}}if(f.morphTargets){var k=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(f.morphTargets,10);m=m.concat(k)}if(m.length>0){f.animations=m}}if(i.materials===undefined||i.materials.length===0){return{geometry:f}}else{var h=THREE.Loader.prototype.initMaterials(i.materials,c,this.crossOrigin);return{geometry:f,materials:h}}}};THREE.LoadingManager=function(e,g,f){var d=this;var c=false,b=0,a=0;this.onStart=undefined;this.onLoad=e;this.onProgress=g;this.onError=f;this.itemStart=function(h){a++;if(c===false){if(d.onStart!==undefined){d.onStart(h,b,a)}}c=true};this.itemEnd=function(h){b++;if(d.onProgress!==undefined){d.onProgress(h,b,a)}if(b===a){c=false;if(d.onLoad!==undefined){d.onLoad()}}};this.itemError=function(h){if(d.onError!==undefined){d.onError(h)}}};THREE.DefaultLoadingManager=new THREE.LoadingManager();THREE.BufferGeometryLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(b,d,f,e){var c=this;var a=new THREE.XHRLoader(c.manager);a.setCrossOrigin(this.crossOrigin);a.load(b,function(g){d(c.parse(JSON.parse(g)))},f,e)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(o){var h=new THREE.BufferGeometry();var g=o.data.index;if(g!==undefined){var j=new self[g.type](g.array);h.setIndex(new THREE.BufferAttribute(j,1))}var e=o.data.attributes;for(var m in e){var b=e[m];var j=new self[b.type](b.array);h.addAttribute(m,new THREE.BufferAttribute(j,b.itemSize))}var d=o.data.groups||o.data.drawcalls||o.data.offsets;if(d!==undefined){for(var f=0,c=d.length;f!==c;++f){var l=d[f];h.addGroup(l.start,l.count)}}var k=o.data.boundingSphere;if(k!==undefined){var a=new THREE.Vector3();if(k.center!==undefined){a.fromArray(k.center)}h.boundingSphere=new THREE.Sphere(a,k.radius)}return h}};THREE.MaterialLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this.textures={}};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(b,d,f,e){var c=this;var a=new THREE.XHRLoader(c.manager);a.setCrossOrigin(this.crossOrigin);a.load(b,function(g){d(c.parse(JSON.parse(g)))},f,e)},setCrossOrigin:function(a){this.crossOrigin=a},setTextures:function(a){this.textures=a},getTexture:function(b){var a=this.textures;if(a[b]===undefined){console.warn("THREE.MaterialLoader: Undefined texture",b)}return a[b]},parse:function(c){var d=new THREE[c.type];d.uuid=c.uuid;if(c.name!==undefined){d.name=c.name}if(c.color!==undefined){d.color.setHex(c.color)}if(c.emissive!==undefined){d.emissive.setHex(c.emissive)}if(c.specular!==undefined){d.specular.setHex(c.specular)}if(c.shininess!==undefined){d.shininess=c.shininess}if(c.uniforms!==undefined){d.uniforms=c.uniforms}if(c.vertexShader!==undefined){d.vertexShader=c.vertexShader}if(c.fragmentShader!==undefined){d.fragmentShader=c.fragmentShader}if(c.vertexColors!==undefined){d.vertexColors=c.vertexColors}if(c.shading!==undefined){d.shading=c.shading}if(c.blending!==undefined){d.blending=c.blending}if(c.side!==undefined){d.side=c.side}if(c.opacity!==undefined){d.opacity=c.opacity}if(c.transparent!==undefined){d.transparent=c.transparent}if(c.alphaTest!==undefined){d.alphaTest=c.alphaTest}if(c.depthTest!==undefined){d.depthTest=c.depthTest}if(c.depthWrite!==undefined){d.depthWrite=c.depthWrite}if(c.wireframe!==undefined){d.wireframe=c.wireframe}if(c.wireframeLinewidth!==undefined){d.wireframeLinewidth=c.wireframeLinewidth}if(c.size!==undefined){d.size=c.size}if(c.sizeAttenuation!==undefined){d.sizeAttenuation=c.sizeAttenuation}if(c.map!==undefined){d.map=this.getTexture(c.map)}if(c.alphaMap!==undefined){d.alphaMap=this.getTexture(c.alphaMap);d.transparent=true}if(c.bumpMap!==undefined){d.bumpMap=this.getTexture(c.bumpMap)}if(c.bumpScale!==undefined){d.bumpScale=c.bumpScale}if(c.normalMap!==undefined){d.normalMap=this.getTexture(c.normalMap)}if(c.normalScale){d.normalScale=new THREE.Vector2(c.normalScale,c.normalScale)}if(c.displacementMap!==undefined){d.displacementMap=this.getTexture(c.displacementMap)}if(c.displacementScale!==undefined){d.displacementScale=c.displacementScale}if(c.displacementBias!==undefined){d.displacementBias=c.displacementBias}if(c.specularMap!==undefined){d.specularMap=this.getTexture(c.specularMap)}if(c.envMap!==undefined){d.envMap=this.getTexture(c.envMap);d.combine=THREE.MultiplyOperation}if(c.reflectivity){d.reflectivity=c.reflectivity}if(c.lightMap!==undefined){d.lightMap=this.getTexture(c.lightMap)}if(c.lightMapIntensity!==undefined){d.lightMapIntensity=c.lightMapIntensity}if(c.aoMap!==undefined){d.aoMap=this.getTexture(c.aoMap)}if(c.aoMapIntensity!==undefined){d.aoMapIntensity=c.aoMapIntensity}if(c.materials!==undefined){for(var b=0,a=c.materials.length;b<a;b++){d.materials.push(this.parse(c.materials[b]))}}return d}};THREE.ObjectLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this.texturePath=""};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(b,d,f,e){if(this.texturePath===""){this.texturePath=b.substring(0,b.lastIndexOf("/")+1)}var c=this;var a=new THREE.XHRLoader(c.manager);a.setCrossOrigin(this.crossOrigin);a.load(b,function(g){c.parse(JSON.parse(g),d)},f,e)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(e,g){var f=this.parseGeometries(e.geometries);var b=this.parseImages(e.images,function(){if(g!==undefined){g(d)}});var a=this.parseTextures(e.textures,b);var c=this.parseMaterials(e.materials,a);var d=this.parseObject(e.object,f,c);if(e.animations){d.animations=this.parseAnimations(e.animations)}if(e.images===undefined||e.images.length===0){if(g!==undefined){g(d)}}return d},parseGeometries:function(d){var e={};if(d!==undefined){var b=new THREE.JSONLoader();var g=new THREE.BufferGeometryLoader();for(var c=0,a=d.length;c<a;c++){var h;var f=d[c];switch(f.type){case"PlaneGeometry":case"PlaneBufferGeometry":h=new THREE[f.type](f.width,f.height,f.widthSegments,f.heightSegments);break;case"BoxGeometry":case"CubeGeometry":h=new THREE.BoxGeometry(f.width,f.height,f.depth,f.widthSegments,f.heightSegments,f.depthSegments);break;case"CircleBufferGeometry":h=new THREE.CircleBufferGeometry(f.radius,f.segments,f.thetaStart,f.thetaLength);break;case"CircleGeometry":h=new THREE.CircleGeometry(f.radius,f.segments,f.thetaStart,f.thetaLength);break;case"CylinderGeometry":h=new THREE.CylinderGeometry(f.radiusTop,f.radiusBottom,f.height,f.radialSegments,f.heightSegments,f.openEnded,f.thetaStart,f.thetaLength);break;case"SphereGeometry":h=new THREE.SphereGeometry(f.radius,f.widthSegments,f.heightSegments,f.phiStart,f.phiLength,f.thetaStart,f.thetaLength);break;case"SphereBufferGeometry":h=new THREE.SphereBufferGeometry(f.radius,f.widthSegments,f.heightSegments,f.phiStart,f.phiLength,f.thetaStart,f.thetaLength);break;case"DodecahedronGeometry":h=new THREE.DodecahedronGeometry(f.radius,f.detail);break;case"IcosahedronGeometry":h=new THREE.IcosahedronGeometry(f.radius,f.detail);break;case"OctahedronGeometry":h=new THREE.OctahedronGeometry(f.radius,f.detail);break;case"TetrahedronGeometry":h=new THREE.TetrahedronGeometry(f.radius,f.detail);break;case"RingGeometry":h=new THREE.RingGeometry(f.innerRadius,f.outerRadius,f.thetaSegments,f.phiSegments,f.thetaStart,f.thetaLength);break;case"TorusGeometry":h=new THREE.TorusGeometry(f.radius,f.tube,f.radialSegments,f.tubularSegments,f.arc);break;case"TorusKnotGeometry":h=new THREE.TorusKnotGeometry(f.radius,f.tube,f.radialSegments,f.tubularSegments,f.p,f.q,f.heightScale);break;case"BufferGeometry":h=g.parse(f);break;case"Geometry":h=b.parse(f.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+f.type+'"');continue}h.uuid=f.uuid;if(f.name!==undefined){h.name=f.name}e[f.uuid]=h}}return e},parseMaterials:function(f,b){var d={};if(f!==undefined){var a=new THREE.MaterialLoader();a.setTextures(b);for(var e=0,c=f.length;e<c;e++){var g=a.parse(f[e]);d[g.uuid]=g}}return d},parseAnimations:function(b){var d=[];for(var a=0;a<b.length;a++){var c=THREE.AnimationClip.parse(b[a]);d.push(c)}return d},parseImages:function(k,f){var j=this;var g={};function a(i){j.manager.itemStart(i);return h.load(i,function(){j.manager.itemEnd(i)})}if(k!==undefined&&k.length>0){var d=new THREE.LoadingManager(f);var h=new THREE.ImageLoader(d);h.setCrossOrigin(this.crossOrigin);for(var e=0,c=k.length;e<c;e++){var b=k[e];var m=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(b.url)?b.url:j.texturePath+b.url;g[b.uuid]=a(m)}}return g},parseTextures:function(f,b){function d(i){if(typeof(i)==="number"){return i}console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",i);return THREE[i]}var a={};if(f!==undefined){for(var e=0,c=f.length;e<c;e++){var h=f[e];if(h.image===undefined){console.warn('THREE.ObjectLoader: No "image" specified for',h.uuid)}if(b[h.image]===undefined){console.warn("THREE.ObjectLoader: Undefined image",h.image)}var g=new THREE.Texture(b[h.image]);g.needsUpdate=true;g.uuid=h.uuid;if(h.name!==undefined){g.name=h.name}if(h.mapping!==undefined){g.mapping=d(h.mapping)}if(h.offset!==undefined){g.offset=new THREE.Vector2(h.offset[0],h.offset[1])}if(h.repeat!==undefined){g.repeat=new THREE.Vector2(h.repeat[0],h.repeat[1])}if(h.minFilter!==undefined){g.minFilter=d(h.minFilter)}if(h.magFilter!==undefined){g.magFilter=d(h.magFilter)}if(h.anisotropy!==undefined){g.anisotropy=h.anisotropy}if(Array.isArray(h.wrap)){g.wrapS=d(h.wrap[0]);g.wrapT=d(h.wrap[1])}a[h.uuid]=g}}return a},parseObject:function(){var a=new THREE.Matrix4();return function(i,e,j){var h;function f(l){if(e[l]===undefined){console.warn("THREE.ObjectLoader: Undefined geometry",l)}return e[l]}function c(l){if(l===undefined){return undefined}if(j[l]===undefined){console.warn("THREE.ObjectLoader: Undefined material",l)}return j[l]}switch(i.type){case"Scene":h=new THREE.Scene();break;case"PerspectiveCamera":h=new THREE.PerspectiveCamera(i.fov,i.aspect,i.near,i.far);break;case"OrthographicCamera":h=new THREE.OrthographicCamera(i.left,i.right,i.top,i.bottom,i.near,i.far);break;case"AmbientLight":h=new THREE.AmbientLight(i.color);break;case"DirectionalLight":h=new THREE.DirectionalLight(i.color,i.intensity);break;case"PointLight":h=new THREE.PointLight(i.color,i.intensity,i.distance,i.decay);break;case"SpotLight":h=new THREE.SpotLight(i.color,i.intensity,i.distance,i.angle,i.exponent,i.decay);break;case"HemisphereLight":h=new THREE.HemisphereLight(i.color,i.groundColor,i.intensity);break;case"Mesh":h=new THREE.Mesh(f(i.geometry),c(i.material));break;case"LOD":h=new THREE.LOD();break;case"Line":h=new THREE.Line(f(i.geometry),c(i.material),i.mode);break;case"PointCloud":case"Points":h=new THREE.Points(f(i.geometry),c(i.material));break;case"Sprite":h=new THREE.Sprite(c(i.material));break;case"Group":h=new THREE.Group();break;default:h=new THREE.Object3D()}h.uuid=i.uuid;if(i.name!==undefined){h.name=i.name}if(i.matrix!==undefined){a.fromArray(i.matrix);a.decompose(h.position,h.quaternion,h.scale)}else{if(i.position!==undefined){h.position.fromArray(i.position)}if(i.rotation!==undefined){h.rotation.fromArray(i.rotation)}if(i.scale!==undefined){h.scale.fromArray(i.scale)}}if(i.castShadow!==undefined){h.castShadow=i.castShadow}if(i.receiveShadow!==undefined){h.receiveShadow=i.receiveShadow}if(i.visible!==undefined){h.visible=i.visible}if(i.userData!==undefined){h.userData=i.userData}if(i.children!==undefined){for(var d in i.children){h.add(this.parseObject(i.children[d],e,j))}}if(i.type==="LOD"){var k=i.levels;for(var g=0;g<k.length;g++){var b=k[g];var d=h.getObjectByProperty("uuid",b.object);if(d!==undefined){h.addLevel(d,b.distance)}}}return h}}()};THREE.TextureLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(b,c,f,e){var d=new THREE.Texture();var a=new THREE.ImageLoader(this.manager);a.setCrossOrigin(this.crossOrigin);a.load(b,function(g){d.image=g;d.needsUpdate=true;if(c!==undefined){c(d)}},f,e);return d},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.CubeTextureLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.CubeTextureLoader.prototype={constructor:THREE.CubeTextureLoader,load:function(f,g,j,c){var d=new THREE.CubeTexture([]);var h=new THREE.ImageLoader();h.setCrossOrigin(this.crossOrigin);var b=0;function e(k){h.load(f[k],function(i){d.images[k]=i;b++;if(b===6){d.needsUpdate=true;if(g){g(d)}}},undefined,c)}for(var a=0;a<f.length;++a){e(a)}return d},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this._parser=null};THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(b,d,g,f){var c=this;var e=new THREE.DataTexture();var a=new THREE.XHRLoader(this.manager);a.setCrossOrigin(this.crossOrigin);a.setResponseType("arraybuffer");a.load(b,function(h){var i=c._parser(h);if(!i){return}if(undefined!==i.image){e.image=i.image}else{if(undefined!==i.data){e.image.width=i.width;e.image.height=i.height;e.image.data=i.data}}e.wrapS=undefined!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping;e.wrapT=undefined!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping;e.magFilter=undefined!==i.magFilter?i.magFilter:THREE.LinearFilter;e.minFilter=undefined!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter;e.anisotropy=undefined!==i.anisotropy?i.anisotropy:1;if(undefined!==i.format){e.format=i.format}if(undefined!==i.type){e.type=i.type}if(undefined!==i.mipmaps){e.mipmaps=i.mipmaps}if(1===i.mipmapCount){e.minFilter=THREE.LinearFilter}e.needsUpdate=true;if(d){d(e,i)}},g,f);return e},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.CompressedTextureLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this._parser=null};THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(a,g,l,d){var m=this;var h=[];var e=new THREE.CompressedTexture();e.image=h;var k=new THREE.XHRLoader(this.manager);k.setCrossOrigin(this.crossOrigin);k.setResponseType("arraybuffer");if(Array.isArray(a)){var c=0;var f=function(n){k.load(a[n],function(i){var o=m._parser(i,true);h[n]={width:o.width,height:o.height,format:o.format,mipmaps:o.mipmaps};c+=1;if(c===6){if(o.mipmapCount===1){e.minFilter=THREE.LinearFilter}e.format=o.format;e.needsUpdate=true;if(g){g(e)}}},l,d)};for(var b=0,j=a.length;b<j;++b){f(b)}}else{k.load(a,function(o){var r=m._parser(o,true);if(r.isCubemap){var n=r.mipmaps.length/r.mipmapCount;for(var q=0;q<n;q++){h[q]={mipmaps:[]};for(var p=0;p<r.mipmapCount;p++){h[q].mipmaps.push(r.mipmaps[q*r.mipmapCount+p]);h[q].format=r.format;h[q].width=r.width;h[q].height=r.height}}}else{e.image.width=r.width;e.image.height=r.height;e.mipmaps=r.mipmaps}if(r.mipmapCount===1){e.minFilter=THREE.LinearFilter}e.format=r.format;e.needsUpdate=true;if(g){g(e)}},l,d)}return e},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Material";this.side=THREE.FrontSide;this.opacity=1;this.transparent=false;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=THREE.LessEqualDepth;this.depthTest=true;this.depthWrite=true;this.colorWrite=true;this.precision=null;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.overdraw=0;this.visible=true;this._needsUpdate=true};THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){if(a===true){this.update()}this._needsUpdate=a},setValues:function(a){if(a===undefined){return}for(var b in a){var d=a[b];if(d===undefined){console.warn("THREE.Material: '"+b+"' parameter is undefined.");continue}var c=this[b];if(c===undefined){console.warn("THREE."+this.type+": '"+b+"' is not a property of this material.");continue}if(c instanceof THREE.Color){c.set(d)}else{if(c instanceof THREE.Vector3&&d instanceof THREE.Vector3){c.copy(d)}else{if(b==="overdraw"){this[b]=Number(d)}else{this[b]=d}}}}},toJSON:function(b){var a={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};a.uuid=this.uuid;a.type=this.type;if(this.name!==""){a.name=this.name}if(this.color instanceof THREE.Color){a.color=this.color.getHex()}if(this.emissive instanceof THREE.Color){a.emissive=this.emissive.getHex()}if(this.specular instanceof THREE.Color){a.specular=this.specular.getHex()}if(this.shininess!==undefined){a.shininess=this.shininess}if(this.map instanceof THREE.Texture){a.map=this.map.toJSON(b).uuid}if(this.alphaMap instanceof THREE.Texture){a.alphaMap=this.alphaMap.toJSON(b).uuid}if(this.lightMap instanceof THREE.Texture){a.lightMap=this.lightMap.toJSON(b).uuid}if(this.bumpMap instanceof THREE.Texture){a.bumpMap=this.bumpMap.toJSON(b).uuid;a.bumpScale=this.bumpScale}if(this.normalMap instanceof THREE.Texture){a.normalMap=this.normalMap.toJSON(b).uuid;a.normalScale=this.normalScale}if(this.displacementMap instanceof THREE.Texture){a.displacementMap=this.displacementMap.toJSON(b).uuid;a.displacementScale=this.displacementScale;a.displacementBias=this.displacementBias}if(this.specularMap instanceof THREE.Texture){a.specularMap=this.specularMap.toJSON(b).uuid}if(this.envMap instanceof THREE.Texture){a.envMap=this.envMap.toJSON(b).uuid;a.reflectivity=this.reflectivity}if(this.size!==undefined){a.size=this.size}if(this.sizeAttenuation!==undefined){a.sizeAttenuation=this.sizeAttenuation}if(this.vertexColors!==undefined&&this.vertexColors!==THREE.NoColors){a.vertexColors=this.vertexColors}if(this.shading!==undefined&&this.shading!==THREE.SmoothShading){a.shading=this.shading}if(this.blending!==undefined&&this.blending!==THREE.NormalBlending){a.blending=this.blending}if(this.side!==undefined&&this.side!==THREE.FrontSide){a.side=this.side}if(this.opacity<1){a.opacity=this.opacity}if(this.transparent===true){a.transparent=this.transparent}if(this.alphaTest>0){a.alphaTest=this.alphaTest}if(this.wireframe===true){a.wireframe=this.wireframe}if(this.wireframeLinewidth>1){a.wireframeLinewidth=this.wireframeLinewidth}return a},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.name=a.name;this.side=a.side;this.opacity=a.opacity;this.transparent=a.transparent;this.blending=a.blending;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=a.blendDstAlpha;this.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.precision=a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.alphaTest=a.alphaTest;this.overdraw=a.overdraw;this.visible=a.visible;return this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})},get wrapAround(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set wrapAround(a){console.warn("THREE."+this.type+": .wrapAround has been removed.")},get wrapRGB(){console.warn("THREE."+this.type+": .wrapRGB has been removed.");return new THREE.Color()}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type="LineBasicMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.vertexColors=THREE.NoColors;this.fog=true;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;THREE.LineBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type="LineDashedMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.scale=1;this.dashSize=3;this.gapSize=1;this.vertexColors=false;this.fog=true;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;THREE.LineDashedMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type="MeshBasicMaterial";this.color=new THREE.Color(16777215);this.map=null;this.aoMap=null;this.aoMapIntensity=1;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.setValues(a)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;THREE.MeshBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type="MeshLambertMaterial";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.map=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;THREE.MeshLambertMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.emissive.copy(a.emissive);this.map=a.map;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type="MeshPhongMaterial";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=false;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;THREE.MeshPhongMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.emissive.copy(a.emissive);this.specular.copy(a.specular);this.shininess=a.shininess;this.metal=a.metal;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissiveMap=a.emissiveMap;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type="MeshDepthMaterial";this.morphTargets=false;this.wireframe=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;THREE.MeshDepthMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type="MeshNormalMaterial";this.wireframe=false;this.wireframeLinewidth=1;this.morphTargets=false;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};THREE.MultiMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type="MultiMaterial";this.materials=a instanceof Array?a:[];this.visible=true};THREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(){var b={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]};for(var c=0,a=this.materials.length;c<a;c++){b.materials.push(this.materials[c].toJSON())}b.visible=this.visible;return b},clone:function(){var b=new this.constructor();for(var a=0;a<this.materials.length;a++){b.materials.push(this.materials[a].clone())}b.visible=this.visible;return b}};THREE.MeshFaceMaterial=THREE.MultiMaterial;THREE.PointsMaterial=function(a){THREE.Material.call(this);this.type="PointsMaterial";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=true;this.vertexColors=THREE.NoColors;this.fog=true;this.setValues(a)};THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial;THREE.PointsMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};THREE.PointCloudMaterial=function(a){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(a)};THREE.ParticleBasicMaterial=function(a){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(a)};THREE.ParticleSystemMaterial=function(a){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(a)};THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.derivatives=false;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=undefined;if(a!==undefined){if(a.attributes!==undefined){console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.")}this.setValues(a)}};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;THREE.ShaderMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.attributes=a.attributes;this.defines=a.defines;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.fog=a.fog;this.lights=a.lights;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;this.derivatives=a.derivatives;return this};THREE.ShaderMaterial.prototype.toJSON=function(b){var a=THREE.Material.prototype.toJSON.call(this,b);a.uniforms=this.uniforms;a.attributes=this.attributes;a.vertexShader=this.vertexShader;a.fragmentShader=this.fragmentShader;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type="RawShaderMaterial"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type="SpriteMaterial";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=false;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;THREE.SpriteMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;this.fog=a.fog;return this};THREE.Texture=function(d,b,f,e,i,c,h,g,a){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.sourceFile="";this.image=d!==undefined?d:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=b!==undefined?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrapT=e!==undefined?e:THREE.ClampToEdgeWrapping;this.magFilter=i!==undefined?i:THREE.LinearFilter;this.minFilter=c!==undefined?c:THREE.LinearMipMapLinearFilter;this.anisotropy=a!==undefined?a:1;this.format=h!==undefined?h:THREE.RGBAFormat;this.type=g!==undefined?g:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.version=0;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=undefined;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;THREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(a){if(a===true){this.version++}},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;this.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=a.premultiplyAlpha;this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;return this},toJSON:function(d){if(d.textures[this.uuid]!==undefined){return d.textures[this.uuid]}function a(f){var e;if(f.toDataURL!==undefined){e=f}else{e=document.createElement("canvas");e.width=f.width;e.height=f.height;e.getContext("2d").drawImage(f,0,0,f.width,f.height)}if(e.width>2048||e.height>2048){return e.toDataURL("image/jpeg",0.6)}else{return e.toDataURL("image/png")}}var b={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(this.image!==undefined){var c=this.image;if(c.uuid===undefined){c.uuid=THREE.Math.generateUUID()}if(d.images[c.uuid]===undefined){d.images[c.uuid]={uuid:c.uuid,url:a(c)}}b.image=c.uuid}d.textures[this.uuid]=b;return b},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(a){if(this.mapping!==THREE.UVMapping){return}a.multiply(this.repeat);a.add(this.offset);if(a.x<0||a.x>1){switch(this.wrapS){case THREE.RepeatWrapping:a.x=a.x-Math.floor(a.x);break;case THREE.ClampToEdgeWrapping:a.x=a.x<0?0:1;break;case THREE.MirroredRepeatWrapping:if(Math.abs(Math.floor(a.x)%2)===1){a.x=Math.ceil(a.x)-a.x}else{a.x=a.x-Math.floor(a.x)}break}}if(a.y<0||a.y>1){switch(this.wrapT){case THREE.RepeatWrapping:a.y=a.y-Math.floor(a.y);break;case THREE.ClampToEdgeWrapping:a.y=a.y<0?0:1;break;case THREE.MirroredRepeatWrapping:if(Math.abs(Math.floor(a.y)%2)===1){a.y=Math.ceil(a.y)-a.y}else{a.y=a.y-Math.floor(a.y)}break}}if(this.flipY){a.y=1-a.y}}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CanvasTexture=function(d,b,f,e,i,c,h,g,a){THREE.Texture.call(this,d,b,f,e,i,c,h,g,a);this.needsUpdate=true};THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture;THREE.CubeTexture=function(g,b,e,d,i,c,h,f,a){b=b!==undefined?b:THREE.CubeReflectionMapping;THREE.Texture.call(this,g,b,e,d,i,c,h,f,a);this.images=g;this.flipY=false};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;THREE.CubeTexture.prototype.copy=function(a){THREE.Texture.prototype.copy.call(this,a);this.images=a.images;return this};THREE.CompressedTexture=function(e,d,k,i,h,b,g,f,j,c,a){THREE.Texture.call(this,null,b,g,f,j,c,i,h,a);this.image={width:d,height:k};this.mipmaps=e;this.flipY=false;this.generateMipmaps=false};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;THREE.DataTexture=function(f,d,k,i,h,b,g,e,j,c,a){THREE.Texture.call(this,null,b,g,e,j,c,i,h,a);this.image={data:f,width:d,height:k};this.magFilter=j!==undefined?j:THREE.NearestFilter;this.minFilter=c!==undefined?c:THREE.NearestFilter;this.flipY=false;this.generateMipmaps=false};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;THREE.VideoTexture=function(c,b,g,f,j,d,i,h,a){THREE.Texture.call(this,c,b,g,f,j,d,i,h,a);this.generateMipmaps=false;var k=this;function e(){requestAnimationFrame(e);if(c.readyState===c.HAVE_ENOUGH_DATA){k.needsUpdate=true}}e()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;THREE.Group=function(){THREE.Object3D.call(this);this.type="Group"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);THREE.Group.prototype.constructor=THREE.Group;THREE.Points=function(b,a){THREE.Object3D.call(this);this.type="Points";this.geometry=b!==undefined?b:new THREE.Geometry();this.material=a!==undefined?a:new THREE.PointsMaterial({color:Math.random()*16777215})};THREE.Points.prototype=Object.create(THREE.Object3D.prototype);THREE.Points.prototype.constructor=THREE.Points;THREE.Points.prototype.raycast=(function(){var b=new THREE.Matrix4();var a=new THREE.Ray();return function c(r,d){var A=this;var h=A.geometry;var g=r.params.Points.threshold;b.getInverse(this.matrixWorld);a.copy(r.ray).applyMatrix4(b);if(h.boundingBox!==null){if(a.isIntersectionBox(h.boundingBox)===false){return}}var f=g/((this.scale.x+this.scale.y+this.scale.z)/3);var e=f*f;var v=new THREE.Vector3();function q(i,B){var C=a.distanceSqToPoint(i);if(C<e){var l=a.closestPointToPoint(i);l.applyMatrix4(A.matrixWorld);var D=r.ray.origin.distanceTo(l);if(D<r.near||D>r.far){return}d.push({distance:D,distanceToRay:Math.sqrt(C),point:l.clone(),index:B,face:null,object:A})}}if(h instanceof THREE.BufferGeometry){var m=h.index;var o=h.attributes;var n=o.position.array;if(m!==null){var j=m.array;for(var t=0,p=j.length;t<p;t++){var u=j[t];v.fromArray(n,u*3);q(v,u)}}else{for(var t=0,s=n.length/3;t<s;t++){v.fromArray(n,t*3);q(v,t)}}}else{var k=h.vertices;for(var t=0,s=k.length;t<s;t++){q(k[t],t)}}}}());THREE.Points.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)};THREE.PointCloud=function(b,a){console.warn("THREE.PointCloud has been renamed to THREE.Points.");return new THREE.Points(b,a)};THREE.ParticleSystem=function(b,a){console.warn("THREE.ParticleSystem has been renamed to THREE.Points.");return new THREE.Points(b,a)};THREE.Line=function(c,a,b){if(b===1){console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.");return new THREE.LineSegments(c,a)}THREE.Object3D.call(this);this.type="Line";this.geometry=c!==undefined?c:new THREE.Geometry();this.material=a!==undefined?a:new THREE.LineBasicMaterial({color:Math.random()*16777215})};THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.constructor=THREE.Line;THREE.Line.prototype.raycast=(function(){var c=new THREE.Matrix4();var a=new THREE.Ray();var b=new THREE.Sphere();return function d(s,f){var A=s.linePrecision;var E=A*A;var j=this.geometry;if(j.boundingSphere===null){j.computeBoundingSphere()}b.copy(j.boundingSphere);b.applyMatrix4(this.matrixWorld);if(s.ray.isIntersectionSphere(b)===false){return}c.getInverse(this.matrixWorld);a.copy(s.ray).applyMatrix4(c);var F=new THREE.Vector3();var e=new THREE.Vector3();var k=new THREE.Vector3();var t=new THREE.Vector3();var o=this instanceof THREE.LineSegments?2:1;if(j instanceof THREE.BufferGeometry){var p=j.index;var r=j.attributes;if(p!==null){var m=p.array;var q=r.position.array;for(var v=0,u=m.length-1;v<u;v+=o){var C=m[v];var B=m[v+1];F.fromArray(q,C*3);e.fromArray(q,B*3);var g=a.distanceSqToSegment(F,e,t,k);if(g>E){continue}t.applyMatrix4(this.matrixWorld);var h=s.ray.origin.distanceTo(t);if(h<s.near||h>s.far){continue}f.push({distance:h,point:k.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{var q=r.position.array;for(var v=0,u=q.length/3-1;v<u;v+=o){F.fromArray(q,3*v);e.fromArray(q,3*v+3);var g=a.distanceSqToSegment(F,e,t,k);if(g>E){continue}t.applyMatrix4(this.matrixWorld);var h=s.ray.origin.distanceTo(t);if(h<s.near||h>s.far){continue}f.push({distance:h,point:k.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}else{if(j instanceof THREE.Geometry){var n=j.vertices;var D=n.length;for(var v=0;v<D-1;v+=o){var g=a.distanceSqToSegment(n[v],n[v+1],t,k);if(g>E){continue}t.applyMatrix4(this.matrixWorld);var h=s.ray.origin.distanceTo(t);if(h<s.near||h>s.far){continue}f.push({distance:h,point:k.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}}}());THREE.Line.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)};THREE.LineStrip=0;THREE.LinePieces=1;THREE.LineSegments=function(b,a){THREE.Line.call(this,b,a);this.type="LineSegments"};THREE.LineSegments.prototype=Object.create(THREE.Line.prototype);THREE.LineSegments.prototype.constructor=THREE.LineSegments;THREE.Mesh=function(b,a){THREE.Object3D.call(this);this.type="Mesh";this.geometry=b!==undefined?b:new THREE.Geometry();this.material=a!==undefined?a:new THREE.MeshBasicMaterial({color:Math.random()*16777215});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets!==undefined&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1;this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++){this.morphTargetInfluences.push(0);this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==undefined){return this.morphTargetDictionary[a]}console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.raycast=(function(){var c=new THREE.Matrix4();var h=new THREE.Ray();var a=new THREE.Sphere();var r=new THREE.Vector3();var q=new THREE.Vector3();var o=new THREE.Vector3();var l=new THREE.Vector3();var k=new THREE.Vector3();var j=new THREE.Vector3();var i=new THREE.Vector2();var g=new THREE.Vector2();var f=new THREE.Vector2();var b=new THREE.Vector3();var p=new THREE.Vector3();var d=new THREE.Vector3();function n(t,D,C,B,A,v,u){THREE.Triangle.barycoordFromPoint(t,D,C,B,b);A.multiplyScalar(b.x);v.multiplyScalar(b.y);u.multiplyScalar(b.z);A.add(v).add(u);return A.clone()}function e(C,E,F,A,v,u,G){var B;var D=C.material;if(D.side===THREE.BackSide){B=F.intersectTriangle(u,v,A,true,G)}else{B=F.intersectTriangle(A,v,u,D.side!==THREE.DoubleSide,G)}if(B===null){return null}d.copy(G);d.applyMatrix4(C.matrixWorld);var t=E.ray.origin.distanceTo(d);if(t<E.near||t>E.far){return null}return{distance:t,point:d.clone(),object:C}}function s(u,C,E,A,v,F,D,B){r.fromArray(A,F*3);q.fromArray(A,D*3);o.fromArray(A,B*3);var t=e(u,C,E,r,q,o,p);if(t){if(v){i.fromArray(v,F*2);g.fromArray(v,D*2);f.fromArray(v,B*2);t.uv=n(p,r,q,o,i,g,f)}t.face=new THREE.Face3(F,D,B,THREE.Triangle.normal(r,q,o));t.faceIndex=F}return t}return function m(V,u){var G=this.geometry;var R=this.material;if(R===undefined){return}if(G.boundingSphere===null){G.computeBoundingSphere()}var Y=this.matrixWorld;a.copy(G.boundingSphere);a.applyMatrix4(Y);if(V.ray.isIntersectionSphere(a)===false){return}c.getInverse(Y);h.copy(V.ray).applyMatrix4(c);if(G.boundingBox!==null){if(h.isIntersectionBox(G.boundingBox)===false){return}}var Q,N;if(G instanceof THREE.BufferGeometry){var ag,ae,ad;var J=G.index;var L=G.attributes;var K=L.position.array;if(L.uv!==undefined){Q=L.uv.array}if(J!==null){var H=J.array;for(var Z=0,W=H.length;Z<W;Z+=3){ag=H[Z];ae=H[Z+1];ad=H[Z+2];N=s(this,V,h,K,Q,ag,ae,ad);if(N){N.faceIndex=Math.floor(Z/3);u.push(N)}}}else{for(var Z=0,W=K.length;Z<W;Z+=9){ag=Z/3;ae=ag+1;ad=ag+2;N=s(this,V,h,K,Q,ag,ae,ad);if(N){N.index=ag;u.push(N)}}}}else{if(G instanceof THREE.Geometry){var F,E,C;var B=R instanceof THREE.MeshFaceMaterial;var A=B===true?R.materials:null;var I=G.vertices;var v=G.faces;var ab=G.faceVertexUvs[0];if(ab.length>0){Q=ab}for(var aa=0,O=v.length;aa<O;aa++){var M=v[aa];var ac=B===true?A[M.materialIndex]:R;if(ac===undefined){continue}F=I[M.a];E=I[M.b];C=I[M.c];if(ac.morphTargets===true){var P=G.morphTargets;var T=this.morphTargetInfluences;r.set(0,0,0);q.set(0,0,0);o.set(0,0,0);for(var S=0,D=P.length;S<D;S++){var X=T[S];if(X===0){continue}var af=P[S].vertices;r.addScaledVector(l.subVectors(af[M.a],F),X);q.addScaledVector(k.subVectors(af[M.b],E),X);o.addScaledVector(j.subVectors(af[M.c],C),X)}r.add(F);q.add(E);o.add(C);F=r;E=q;C=o}N=e(this,V,h,F,E,C,p);if(N){if(Q){var U=Q[aa];i.copy(U[0]);g.copy(U[1]);f.copy(U[2]);N.uv=n(p,F,E,C,i,g,f)}N.face=M;N.faceIndex=aa;u.push(N)}}}}}}());THREE.Mesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)};THREE.Bone=function(a){THREE.Object3D.call(this);this.type="Bone";this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.skin=a.skin;return this};THREE.Skeleton=function(c,e,f){this.useVertexTexture=f!==undefined?f:true;this.identityMatrix=new THREE.Matrix4();c=c||[];this.bones=c.slice(0);if(this.useVertexTexture){var d=Math.sqrt(this.bones.length*4);d=THREE.Math.nextPowerOfTwo(Math.ceil(d));d=Math.max(d,4);this.boneTextureWidth=d;this.boneTextureHeight=d;this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)}else{this.boneMatrices=new Float32Array(16*this.bones.length)}if(e===undefined){this.calculateInverses()}else{if(this.bones.length===e.length){this.boneInverses=e.slice(0)}else{console.warn("THREE.Skeleton bonInverses is the wrong length.");this.boneInverses=[];for(var a=0,g=this.bones.length;a<g;a++){this.boneInverses.push(new THREE.Matrix4())}}}};THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,d=this.bones.length;a<d;a++){var c=new THREE.Matrix4();if(this.bones[a]){c.getInverse(this.bones[a].matrixWorld)}this.boneInverses.push(c)}};THREE.Skeleton.prototype.pose=function(){var c;for(var a=0,d=this.bones.length;a<d;a++){c=this.bones[a];if(c){c.matrixWorld.getInverse(this.boneInverses[a])}}for(var a=0,d=this.bones.length;a<d;a++){c=this.bones[a];if(c){if(c.parent){c.matrix.getInverse(c.parent.matrixWorld);c.matrix.multiply(c.matrixWorld)}else{c.matrix.copy(c.matrixWorld)}c.matrix.decompose(c.position,c.quaternion,c.scale)}}};THREE.Skeleton.prototype.update=(function(){var a=new THREE.Matrix4();return function b(){for(var c=0,e=this.bones.length;c<e;c++){var d=this.bones[c]?this.bones[c].matrixWorld:this.identityMatrix;a.multiplyMatrices(d,this.boneInverses[c]);a.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.useVertexTexture){this.boneTexture.needsUpdate=true}}})();THREE.Skeleton.prototype.clone=function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)};THREE.SkinnedMesh=function(h,d,f){THREE.Mesh.call(this,h,d);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new THREE.Matrix4();this.bindMatrixInverse=new THREE.Matrix4();var c=[];if(this.geometry&&this.geometry.bones!==undefined){var e,g;for(var a=0,i=this.geometry.bones.length;a<i;++a){g=this.geometry.bones[a];e=new THREE.Bone(this);c.push(e);e.name=g.name;e.position.fromArray(g.pos);e.quaternion.fromArray(g.rotq);if(g.scl!==undefined){e.scale.fromArray(g.scl)}}for(var a=0,i=this.geometry.bones.length;a<i;++a){g=this.geometry.bones[a];if(g.parent!==-1&&g.parent!==null){c[g.parent].add(c[a])}else{this.add(c[a])}}}this.normalizeSkinWeights();this.updateMatrixWorld(true);this.bind(new THREE.Skeleton(c,undefined,f),this.matrixWorld)};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.bind=function(b,a){this.skeleton=b;if(a===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();a=this.matrixWorld}this.bindMatrix.copy(a);this.bindMatrixInverse.getInverse(a)};THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry){for(var b=0;b<this.geometry.skinIndices.length;b++){var a=this.geometry.skinWeights[b];var c=1/a.lengthManhattan();if(c!==Infinity){a.multiplyScalar(c)}else{a.set(1)}}}else{}};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,true);if(this.bindMode==="attached"){this.bindMatrixInverse.getInverse(this.matrixWorld)}else{if(this.bindMode==="detached"){this.bindMatrixInverse.getInverse(this.bindMatrix)}else{console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)}}};THREE.SkinnedMesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)};THREE.LOD=function(){THREE.Object3D.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:true,value:[]},objects:{get:function(){console.warn("THREE.LOD: .objects has been renamed to .levels.");return this.levels}}})};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.addLevel=function(b,d){if(d===undefined){d=0}d=Math.abs(d);var c=this.levels;for(var a=0;a<c.length;a++){if(d<c[a].distance){break}}c.splice(a,0,{distance:d,object:b});this.add(b)};THREE.LOD.prototype.getObjectForDistance=function(d){var c=this.levels;for(var b=1,a=c.length;b<a;b++){if(d<c[b].distance){break}}return c[b-1].object};THREE.LOD.prototype.raycast=(function(){var a=new THREE.Vector3();return function b(c,d){a.setFromMatrixPosition(this.matrixWorld);var e=c.ray.origin.distanceTo(a);this.getObjectForDistance(e).raycast(c,d)}}());THREE.LOD.prototype.update=function(){var c=new THREE.Vector3();var a=new THREE.Vector3();return function b(f){var g=this.levels;if(g.length>1){c.setFromMatrixPosition(f.matrixWorld);a.setFromMatrixPosition(this.matrixWorld);var h=c.distanceTo(a);g[0].object.visible=true;for(var e=1,d=g.length;e<d;e++){if(h>=g[e].distance){g[e-1].object.visible=false;g[e].object.visible=true}else{break}}for(;e<d;e++){g[e].object.visible=false}}}}();THREE.LOD.prototype.copy=function(d){THREE.Object3D.prototype.copy.call(this,d,false);var c=d.levels;for(var b=0,a=c.length;b<a;b++){var e=c[b];this.addLevel(e.object.clone(),e.distance)}return this};THREE.LOD.prototype.toJSON=function(e){var d=THREE.Object3D.prototype.toJSON.call(this,e);d.object.levels=[];var c=this.levels;for(var b=0,a=c.length;b<a;b++){var f=c[b];d.object.levels.push({object:f.object.uuid,distance:f.distance})}return d};THREE.Sprite=(function(){var e=new Uint16Array([0,1,2,0,2,3]);var b=new Float32Array([-0.5,-0.5,0,0.5,-0.5,0,0.5,0.5,0,-0.5,0.5,0]);var c=new Float32Array([0,0,1,0,1,1,0,1]);var d=new THREE.BufferGeometry();d.setIndex(new THREE.BufferAttribute(e,1));d.addAttribute("position",new THREE.BufferAttribute(b,3));d.addAttribute("uv",new THREE.BufferAttribute(c,2));return function a(f){THREE.Object3D.call(this);this.type="Sprite";this.geometry=d;this.material=(f!==undefined)?f:new THREE.SpriteMaterial()}})();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=(function(){var a=new THREE.Vector3();return function b(d,e){a.setFromMatrixPosition(this.matrixWorld);var c=d.ray.distanceSqToPoint(a);var f=this.scale.x*this.scale.y;if(c>f){return}e.push({distance:Math.sqrt(c),point:this.position,face:null,object:this})}}());THREE.Sprite.prototype.clone=function(){return new this.constructor(this.material).copy(this)};THREE.Particle=THREE.Sprite;THREE.LensFlare=function(d,b,e,c,a){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3();this.customUpdateCallback=undefined;if(d!==undefined){this.add(d,b,e,c,a)}};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.add=function(e,c,f,d,a,b){if(c===undefined){c=-1}if(f===undefined){f=0}if(b===undefined){b=1}if(a===undefined){a=new THREE.Color(16777215)}if(d===undefined){d=THREE.NormalBlending}f=Math.min(f,Math.max(0,f));this.lensFlares.push({texture:e,size:c,distance:f,x:0,y:0,z:0,scale:1,rotation:0,opacity:b,color:a,blending:d})};THREE.LensFlare.prototype.updateLensFlares=function(){var d,c=this.lensFlares.length;var b;var a=-this.positionScreen.x*2;var e=-this.positionScreen.y*2;for(d=0;d<c;d++){b=this.lensFlares[d];b.x=this.positionScreen.x+a*b.distance;b.y=this.positionScreen.y+e*b.distance;b.wantedRotation=b.x*Math.PI*0.25;b.rotation+=(b.wantedRotation-b.rotation)*0.25}};THREE.LensFlare.prototype.copy=function(c){THREE.Object3D.prototype.copy.call(this,c);this.positionScreen.copy(c.positionScreen);this.customUpdateCallback=c.customUpdateCallback;for(var b=0,a=c.lensFlares.length;b<a;b++){this.lensFlares.push(c.lensFlares[b])}return this};THREE.Scene=function(){THREE.Object3D.call(this);this.type="Scene";this.fog=null;this.overrideMaterial=null;this.autoUpdate=true};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);if(a.fog!==null){this.fog=a.fog.clone()}if(a.overrideMaterial!==null){this.overrideMaterial=a.overrideMaterial.clone()}this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this};THREE.Fog=function(b,c,a){this.name="";this.color=new THREE.Color(b);this.near=(c!==undefined)?c:1;this.far=(a!==undefined)?a:1000};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(b,a){this.name="";this.color=new THREE.Color(b);this.density=(a!==undefined)?a:0.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n  diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n uniform sampler2D alphaMap;\n\n#endif\n";THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n  if ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n\n  totalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n#endif\n";THREE.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n\n uniform sampler2D aoMap;\n  uniform float aoMapIntensity;\n\n#endif";THREE.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n";THREE.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n";THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n uniform sampler2D bumpMap;\n  uniform float bumpScale;\n\n\n\n  vec2 dHdxy_fwd() {\n\n    vec2 dSTdx = dFdx( vUv );\n   vec2 dSTdy = dFdy( vUv );\n\n   float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n    float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n    float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n    return vec2( dBx, dBy );\n\n  }\n\n vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n    vec3 vSigmaX = dFdx( surf_pos );\n    vec3 vSigmaY = dFdy( surf_pos );\n    vec3 vN = surf_norm;\n    vec3 R1 = cross( vSigmaY, vN );\n   vec3 R2 = cross( vN, vSigmaX );\n\n   float fDet = dot( vSigmaX, R1 );\n\n    vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n    return normalize( abs( fDet ) * surf_norm - vGrad );\n\n  }\n\n#endif\n";THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n  diffuseColor.rgb *= vColor;\n\n#endif";THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n varying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n varying vec3 vColor;\n\n#endif";THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n  vColor.xyz = color.xyz;\n\n#endif";THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n\n  return normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n\n  return normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n  float distance = dot( planeNormal, point - pointOnPlane );\n\n  return - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n  return sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n\n if ( decayExponent > 0.0 ) {\n\n    return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n }\n\n return 1.0;\n\n}\n\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\n\n\n float fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\n\n return ( 1.0 - specularColor ) * fresnel + specularColor;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\n\n\n return 0.25;\n\n}\n\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\n\n\n return ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\n\n  vec3 halfDir = normalize( lightDir + viewDir );\n\n float dotNH = saturate( dot( normal, halfDir ) );\n float dotLH = saturate( dot( lightDir, halfDir ) );\n\n vec3 F = F_Schlick( specularColor, dotLH );\n\n float G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n  float D = D_BlinnPhong( shininess, dotNH );\n\n return F * G * D;\n\n}\n\nvec3 inputToLinear( in vec3 a ) {\n\n #ifdef GAMMA_INPUT\n\n    return pow( a, vec3( float( GAMMA_FACTOR ) ) );\n\n #else\n\n   return a;\n\n #endif\n\n}\n\nvec3 linearToOutput( in vec3 a ) {\n\n #ifdef GAMMA_OUTPUT\n\n   return pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n\n #else\n\n   return a;\n\n #endif\n\n}\n";THREE.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n\n objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n";THREE.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\n  transformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n";THREE.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\n uniform sampler2D displacementMap;\n  uniform float displacementScale;\n  uniform float displacementBias;\n\n#endif\n";THREE.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\n  vec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n emissiveColor.rgb = inputToLinear( emissiveColor.rgb );\n\n totalEmissiveLight *= emissiveColor.rgb;\n\n#endif\n";THREE.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\n uniform sampler2D emissiveMap;\n\n#endif\n";THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n  #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n    vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n   vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n   #ifdef ENVMAP_MODE_REFLECTION\n\n     vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n   #else\n\n     vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n    #endif\n\n  #else\n\n   vec3 reflectVec = vReflect;\n\n #endif\n\n  #ifdef DOUBLE_SIDED\n   float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n #else\n   float flipNormal = 1.0;\n #endif\n\n  #ifdef ENVMAP_TYPE_CUBE\n   vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n #elif defined( ENVMAP_TYPE_EQUIREC )\n    vec2 sampleUV;\n    sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n   sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n   vec4 envColor = texture2D( envMap, sampleUV );\n\n  #elif defined( ENVMAP_TYPE_SPHERE )\n   vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n    vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n  #endif\n\n  envColor.xyz = inputToLinear( envColor.xyz );\n\n #ifdef ENVMAP_BLENDING_MULTIPLY\n\n   outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n  #elif defined( ENVMAP_BLENDING_MIX )\n\n    outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n  #elif defined( ENVMAP_BLENDING_ADD )\n\n    outgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n  #endif\n\n#endif\n";THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n uniform float reflectivity;\n #ifdef ENVMAP_TYPE_CUBE\n   uniform samplerCube envMap;\n #else\n   uniform sampler2D envMap;\n #endif\n  uniform float flipEnvMap;\n\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n    uniform float refractionRatio;\n\n  #else\n\n   varying vec3 vReflect;\n\n  #endif\n\n#endif\n";THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n varying vec3 vReflect;\n\n  uniform float refractionRatio;\n\n#endif\n";THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n  vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n  vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n  #ifdef ENVMAP_MODE_REFLECTION\n\n   vReflect = reflect( cameraToVertex, worldNormal );\n\n  #else\n\n   vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n #endif\n\n#endif\n";THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n  #ifdef USE_LOGDEPTHBUF_EXT\n\n    float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n #else\n\n   float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n  #endif\n\n  #ifdef FOG_EXP2\n\n   float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\n  #else\n\n   float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n #endif\n  \n  outgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif";THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n uniform vec3 fogColor;\n\n  #ifdef FOG_EXP2\n\n   uniform float fogDensity;\n\n #else\n\n   uniform float fogNear;\n    uniform float fogFar;\n #endif\n\n#endif";THREE.ShaderChunk.hemilight_fragment="#if MAX_HEMI_LIGHTS > 0\n\n for ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n    vec3 lightDir = hemisphereLightDirection[ i ];\n\n    float dotProduct = dot( normal, lightDir );\n\n   float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n   vec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n    totalAmbientLight += lightColor;\n\n  }\n\n#endif\n\n";THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n  totalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n#endif\n";THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n uniform sampler2D lightMap;\n uniform float lightMapIntensity;\n\n#endif";THREE.ShaderChunk.lights_lambert_pars_vertex="#if MAX_DIR_LIGHTS > 0\n\n  uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n  uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n  uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n  uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n  uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n";THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n  vLightBack = vec3( 0.0 );\n\n#endif\n\nvec3 normal = normalize( transformedNormal );\n\n#if MAX_POINT_LIGHTS > 0\n\n  for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n   vec3 lightColor = pointLightColor[ i ];\n\n   vec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\n    vec3 lightDir = normalize( lVector );\n\n\n   float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n   float dotProduct = dot( normal, lightDir );\n\n   vLightFront += lightColor * attenuation * saturate( dotProduct );\n\n   #ifdef DOUBLE_SIDED\n\n     vLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n    #endif\n\n  }\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n  for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n    vec3 lightColor = spotLightColor[ i ];\n\n    vec3 lightPosition = spotLightPosition[ i ];\n    vec3 lVector = lightPosition - mvPosition.xyz;\n    vec3 lightDir = normalize( lVector );\n\n   float spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n    if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n      spotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n     float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n     attenuation *= spotEffect;\n\n\n      float dotProduct = dot( normal, lightDir );\n\n     vLightFront += lightColor * attenuation * saturate( dotProduct );\n\n     #ifdef DOUBLE_SIDED\n\n       vLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n      #endif\n\n    }\n\n }\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n for ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n   vec3 lightColor = directionalLightColor[ i ];\n\n   vec3 lightDir = directionalLightDirection[ i ];\n\n\n   float dotProduct = dot( normal, lightDir );\n\n   vLightFront += lightColor * saturate( dotProduct );\n\n   #ifdef DOUBLE_SIDED\n\n     vLightBack += lightColor * saturate( - dotProduct );\n\n    #endif\n\n  }\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n  for ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n    vec3 lightDir = hemisphereLightDirection[ i ];\n\n\n    float dotProduct = dot( normal, lightDir );\n\n   float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n   vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n   #ifdef DOUBLE_SIDED\n\n     float hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\n\n     vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n    #endif\n\n  }\n\n#endif\n";THREE.ShaderChunk.lights_phong_fragment="vec3 viewDir = normalize( vViewPosition );\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n  for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n   vec3 lightColor = pointLightColor[ i ];\n\n   vec3 lightPosition = pointLightPosition[ i ];\n   vec3 lVector = lightPosition + vViewPosition.xyz;\n   vec3 lightDir = normalize( lVector );\n\n\n   float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n   float cosineTerm = saturate( dot( normal, lightDir ) );\n\n   totalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n   vec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n    totalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n\n  }\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n  for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n    vec3 lightColor = spotLightColor[ i ];\n\n    vec3 lightPosition = spotLightPosition[ i ];\n    vec3 lVector = lightPosition + vViewPosition.xyz;\n   vec3 lightDir = normalize( lVector );\n\n   float spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n    if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n      spotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n     float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n     attenuation *= spotEffect;\n\n\n      float cosineTerm = saturate( dot( normal, lightDir ) );\n\n     totalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n     vec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n      totalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n    }\n\n }\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n for ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n   vec3 lightColor = directionalLightColor[ i ];\n\n   vec3 lightDir = directionalLightDirection[ i ];\n\n\n   float cosineTerm = saturate( dot( normal, lightDir ) );\n\n   totalDiffuseLight += lightColor * cosineTerm;\n\n\n   vec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n    totalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\n\n  }\n\n#endif\n";THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n  uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n  uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n  uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n  uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n  varying vec3 vWorldPosition;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n  varying vec3 vNormal;\n\n#endif\n";THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n  varying vec3 vWorldPosition;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n  uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\n#endif\n";THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n vWorldPosition = worldPosition.xyz;\n\n#endif\n";THREE.ShaderChunk.linear_to_gamma_fragment="\n  outgoingLight = linearToOutput( outgoingLight );\n";THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n  gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n uniform float logDepthBufFC;\n\n  #ifdef USE_LOGDEPTHBUF_EXT\n\n    varying float vFragDepth;\n\n #endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n #ifdef USE_LOGDEPTHBUF_EXT\n\n    varying float vFragDepth;\n\n #endif\n\n  uniform float logDepthBufFC;\n\n#endif";THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n  gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n  #ifdef USE_LOGDEPTHBUF_EXT\n\n    vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n    gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n  #endif\n\n#endif";THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n  vec4 texelColor = texture2D( map, vUv );\n\n  texelColor.xyz = inputToLinear( texelColor.xyz );\n\n diffuseColor *= texelColor;\n\n#endif\n";THREE.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n\n uniform sampler2D map;\n\n#endif";THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n diffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n";THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n  uniform vec4 offsetRepeat;\n  uniform sampler2D map;\n\n#endif\n";THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n";THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n  #ifndef USE_MORPHNORMALS\n\n  uniform float morphTargetInfluences[ 8 ];\n\n #else\n\n uniform float morphTargetInfluences[ 4 ];\n\n #endif\n\n#endif";THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n  transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n  transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n  transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n  #ifndef USE_MORPHNORMALS\n\n  transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n  transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n  transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n  transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n  #endif\n\n#endif\n";THREE.ShaderChunk.normal_phong_fragment="#ifndef FLAT_SHADED\n\n  vec3 normal = normalize( vNormal );\n\n #ifdef DOUBLE_SIDED\n\n   normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n #endif\n\n#else\n\n vec3 fdx = dFdx( vViewPosition );\n vec3 fdy = dFdy( vViewPosition );\n vec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n";THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n uniform sampler2D normalMap;\n  uniform vec2 normalScale;\n\n\n vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n    vec3 q0 = dFdx( eye_pos.xyz );\n    vec3 q1 = dFdy( eye_pos.xyz );\n    vec2 st0 = dFdx( vUv.st );\n    vec2 st1 = dFdy( vUv.st );\n\n    vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n    vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n   vec3 N = normalize( surf_norm );\n\n    vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n    mapN.xy = normalScale * mapN.xy;\n    mat3 tsn = mat3( S, T, N );\n   return normalize( tsn * mapN );\n\n }\n\n#endif\n";THREE.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n\n vec4 mvPosition = modelViewMatrix * skinned;\n\n#else\n\n vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n";THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n  for ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n    float texelSizeY =  1.0 / shadowMapSize[ i ].y;\n\n   float shadow = 0.0;\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n   bool isPointLight = shadowDarkness[ i ] < 0.0;\n\n    if ( isPointLight ) {\n\n     float realShadowDarkness = abs( shadowDarkness[ i ] );\n\n      vec3 lightToPosition = vShadowCoord[ i ].xyz;\n\n #if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n     vec3 bd3D = normalize( lightToPosition );\n     float dp = length( lightToPosition );\n\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\n  #if defined( SHADOWMAP_TYPE_PCF )\n     const float Dr = 1.25;\n  #elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n      const float Dr = 2.25;\n  #endif\n\n      float os = Dr *  2.0 * texelSizeY;\n\n      const vec3 Gsd = vec3( - 1, 0, 1 );\n\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n     shadow *= realShadowDarkness * ( 1.0 / 21.0 );\n\n  #else \n      vec3 bd3D = normalize( lightToPosition );\n     float dp = length( lightToPosition );\n\n     adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n      shadow *= realShadowDarkness;\n\n #endif\n\n    } else {\n\n#endif \n     float texelSizeX =  1.0 / shadowMapSize[ i ].x;\n\n     vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\n     bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n      bool inFrustum = all( inFrustumVec );\n\n     bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n      bool frustumTest = all( frustumTestVec );\n\n     if ( frustumTest ) {\n\n  #if defined( SHADOWMAP_TYPE_PCF )\n\n\n       /*\n          for ( float y = -1.25; y <= 1.25; y += 1.25 )\n           for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n             vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n              float fDepth = unpackDepth( rgbaDepth );\n              if ( fDepth < shadowCoord.z )\n               shadow += 1.0;\n          }\n         shadow /= 9.0;\n        */\n\n        shadowCoord.z += shadowBias[ i ];\n\n       const float ShadowDelta = 1.0 / 9.0;\n\n        float xPixelOffset = texelSizeX;\n        float yPixelOffset = texelSizeY;\n\n        float dx0 = - 1.25 * xPixelOffset;\n        float dy0 = - 1.25 * yPixelOffset;\n        float dx1 = 1.25 * xPixelOffset;\n        float dy1 = 1.25 * yPixelOffset;\n\n        float fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n       if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n       if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n       if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n       if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n        if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n       if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n       if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n       if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n        fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n       if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n        shadow *= shadowDarkness[ i ];\n\n  #elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\n        shadowCoord.z += shadowBias[ i ];\n\n       float xPixelOffset = texelSizeX;\n        float yPixelOffset = texelSizeY;\n\n        float dx0 = - 1.0 * xPixelOffset;\n       float dy0 = - 1.0 * yPixelOffset;\n       float dx1 = 1.0 * xPixelOffset;\n       float dy1 = 1.0 * yPixelOffset;\n\n       mat3 shadowKernel;\n        mat3 depthKernel;\n\n       depthKernel[ 0 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n        depthKernel[ 0 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n        depthKernel[ 0 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n        depthKernel[ 1 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n        depthKernel[ 1 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n       depthKernel[ 1 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n        depthKernel[ 2 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n        depthKernel[ 2 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n        depthKernel[ 2 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n        vec3 shadowZ = vec3( shadowCoord.z );\n       shadowKernel[ 0 ] = vec3( lessThan( depthKernel[ 0 ], shadowZ ) );\n        shadowKernel[ 0 ] *= vec3( 0.25 );\n\n        shadowKernel[ 1 ] = vec3( lessThan( depthKernel[ 1 ], shadowZ ) );\n        shadowKernel[ 1 ] *= vec3( 0.25 );\n\n        shadowKernel[ 2 ] = vec3( lessThan( depthKernel[ 2 ], shadowZ ) );\n        shadowKernel[ 2 ] *= vec3( 0.25 );\n\n        vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[ i ].xy );\n\n       shadowKernel[ 0 ] = mix( shadowKernel[ 1 ], shadowKernel[ 0 ], fractionalCoord.x );\n       shadowKernel[ 1 ] = mix( shadowKernel[ 2 ], shadowKernel[ 1 ], fractionalCoord.x );\n\n       vec4 shadowValues;\n        shadowValues.x = mix( shadowKernel[ 0 ][ 1 ], shadowKernel[ 0 ][ 0 ], fractionalCoord.y );\n        shadowValues.y = mix( shadowKernel[ 0 ][ 2 ], shadowKernel[ 0 ][ 1 ], fractionalCoord.y );\n        shadowValues.z = mix( shadowKernel[ 1 ][ 1 ], shadowKernel[ 1 ][ 0 ], fractionalCoord.y );\n        shadowValues.w = mix( shadowKernel[ 1 ][ 2 ], shadowKernel[ 1 ][ 1 ], fractionalCoord.y );\n\n        shadow = dot( shadowValues, vec4( 1.0 ) ) * shadowDarkness[ i ];\n\n  #else \n        shadowCoord.z += shadowBias[ i ];\n\n       vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n       float fDepth = unpackDepth( rgbaDepth );\n\n        if ( fDepth < shadowCoord.z )\n         shadow = shadowDarkness[ i ];\n\n #endif\n\n      }\n\n#ifdef SHADOWMAP_DEBUG\n\n     if ( inFrustum ) {\n\n        if ( i == 0 ) {\n\n         outgoingLight *= vec3( 1.0, 0.5, 0.0 );\n\n       } else if ( i == 1 ) {\n\n          outgoingLight *= vec3( 0.0, 1.0, 0.8 );\n\n       } else {\n\n          outgoingLight *= vec3( 0.0, 0.5, 1.0 );\n\n       }\n\n     }\n\n#endif\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n   }\n\n#endif\n\n   shadowMask = shadowMask * vec3( 1.0 - shadow );\n\n }\n\n#endif\n";THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n uniform sampler2D shadowMap[ MAX_SHADOWS ];\n uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n  uniform float shadowDarkness[ MAX_SHADOWS ];\n  uniform float shadowBias[ MAX_SHADOWS ];\n\n  varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n float unpackDepth( const in vec4 rgba_depth ) {\n\n   const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n    float depth = dot( rgba_depth, bit_shift );\n   return depth;\n\n }\n\n #if defined(POINT_LIGHT_SHADOWS)\n\n\n    void adjustShadowValue1K( const float testDepth, const vec4 textureData, const float bias, inout float shadowValue ) {\n\n      const vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n      if ( testDepth >= dot( textureData, bitSh ) * 1000.0 + bias )\n       shadowValue += 1.0;\n\n   }\n\n\n   vec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\n     vec3 absV = abs( v );\n\n\n     float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n     absV *= scaleToCube;\n\n\n      v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\n\n      vec2 planar = v.xy;\n\n     float almostATexel = 1.5 * texelSizeY;\n      float almostOne = 1.0 - almostATexel;\n\n     if ( absV.z >= almostOne ) {\n\n        if ( v.z > 0.0 )\n          planar.x = 4.0 - v.x;\n\n     } else if ( absV.x >= almostOne ) {\n\n       float signX = sign( v.x );\n        planar.x = v.z * signX + 2.0 * signX;\n\n     } else if ( absV.y >= almostOne ) {\n\n       float signY = sign( v.y );\n        planar.x = v.x + 2.0 * signY + 2.0;\n       planar.y = v.z * signY - 2.0;\n\n     }\n\n\n     return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n    }\n\n #endif\n\n#endif\n";THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n uniform float shadowDarkness[ MAX_SHADOWS ];\n  uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n#endif";THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n  for ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n      vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n  }\n\n#endif";THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n  mat4 boneMatX = getBoneMatrix( skinIndex.x );\n mat4 boneMatY = getBoneMatrix( skinIndex.y );\n mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n uniform mat4 bindMatrix;\n  uniform mat4 bindMatrixInverse;\n\n #ifdef BONE_TEXTURE\n\n   uniform sampler2D boneTexture;\n    uniform int boneTextureWidth;\n   uniform int boneTextureHeight;\n\n    mat4 getBoneMatrix( const in float i ) {\n\n      float j = i * 4.0;\n      float x = mod( j, float( boneTextureWidth ) );\n      float y = floor( j / float( boneTextureWidth ) );\n\n     float dx = 1.0 / float( boneTextureWidth );\n     float dy = 1.0 / float( boneTextureHeight );\n\n      y = dy * ( y + 0.5 );\n\n     vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n      vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n      vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n      vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n      mat4 bone = mat4( v1, v2, v3, v4 );\n\n     return bone;\n\n    }\n\n #else\n\n   uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n   mat4 getBoneMatrix( const in float i ) {\n\n      mat4 bone = boneGlobalMatrices[ int(i) ];\n     return bone;\n\n    }\n\n #endif\n\n#endif\n";THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n  vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n  vec4 skinned = vec4( 0.0 );\n skinned += boneMatX * skinVertex * skinWeight.x;\n  skinned += boneMatY * skinVertex * skinWeight.y;\n  skinned += boneMatZ * skinVertex * skinWeight.z;\n  skinned += boneMatW * skinVertex * skinWeight.w;\n  skinned  = bindMatrixInverse * skinned;\n\n#endif\n";THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n  mat4 skinMatrix = mat4( 0.0 );\n  skinMatrix += skinWeight.x * boneMatX;\n  skinMatrix += skinWeight.y * boneMatY;\n  skinMatrix += skinWeight.z * boneMatZ;\n  skinMatrix += skinWeight.w * boneMatW;\n  skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n  objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n";THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n vec4 texelSpecular = texture2D( specularMap, vUv );\n specularStrength = texelSpecular.r;\n\n#else\n\n  specularStrength = 1.0;\n\n#endif";THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n uniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n  varying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n  attribute vec2 uv2;\n varying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n vUv2 = uv2;\n\n#endif";THREE.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n varying vec2 vUv;\n\n#endif";THREE.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n varying vec2 vUv;\n uniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n  vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n #ifdef USE_SKINNING\n\n   vec4 worldPosition = modelMatrix * skinned;\n\n #else\n\n   vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n  #endif\n\n#endif\n";THREE.UniformsUtils={merge:function(b){var a={};for(var c=0;c<b.length;c++){var d=this.clone(b[c]);for(var e in d){a[e]=d[e]}}return a},clone:function(a){var c={};for(var d in a){c[d]={};for(var e in a[d]){var b=a[d][e];if(b instanceof THREE.Color||b instanceof THREE.Vector2||b instanceof THREE.Vector3||b instanceof THREE.Vector4||b instanceof THREE.Matrix3||b instanceof THREE.Matrix4||b instanceof THREE.Texture){c[d][e]=b.clone()}else{if(Array.isArray(b)){c[d][e]=b.slice()}else{c[d][e]=b}}}}return c}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"f",value:1},displacementBias:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},pointLightDecay:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},spotLightDecay:{type:"fv1",value:[]}},points:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex," #ifdef USE_ENVMAP",THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex," #endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {"," vec3 outgoingLight = vec3( 0.0 );"," vec4 diffuseColor = vec4( diffuse, opacity );"," vec3 totalAmbientLight = vec3( 1.0 );"," vec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.aomap_fragment,THREE.ShaderChunk.shadowmap_fragment," outgoingLight = diffuseColor.rgb * totalAmbientLight * shadowMask;",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment," gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED"," varying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform vec3 emissive;","uniform float opacity;","uniform vec3 ambientLightColor;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED"," varying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {"," vec3 outgoingLight = vec3( 0.0 );"," vec4 diffuseColor = vec4( diffuse, opacity );"," vec3 totalAmbientLight = ambientLightColor;"," vec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.shadowmap_fragment," #ifdef DOUBLE_SIDED","   if ( gl_FrontFacing )","     outgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;","   else","     outgoingLight += diffuseColor.rgb * ( vLightBack * shadowMask + totalAmbientLight ) + emissive;"," #else","   outgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;"," #endif",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment," gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","#ifndef FLAT_SHADED"," varying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.displacementmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED"," vNormal = normalize( transformedNormal );","#endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.displacementmap_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex," vViewPosition = - mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.emissivemap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {"," vec3 outgoingLight = vec3( 0.0 );"," vec4 diffuseColor = vec4( diffuse, opacity );"," vec3 totalAmbientLight = ambientLightColor;"," vec3 totalEmissiveLight = emissive;"," vec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.normal_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.hemilight_fragment,THREE.ShaderChunk.aomap_fragment,THREE.ShaderChunk.emissivemap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.shadowmap_fragment,"totalDiffuseLight *= shadowMask;","totalSpecularLight *= shadowMask;","#ifdef METAL"," outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;","#else"," outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;","#endif",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment," gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex," vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );"," #ifdef USE_SIZEATTENUATION","   gl_PointSize = size * ( scale / length( mvPosition.xyz ) );"," #else","   gl_PointSize = size;"," #endif"," gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {"," vec3 outgoingLight = vec3( 0.0 );"," vec4 diffuseColor = vec4( psColor, opacity );"," vec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.shadowmap_fragment," outgoingLight = diffuseColor.rgb * shadowMask;",THREE.ShaderChunk.fog_fragment," gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex," vLineDistance = scale * lineDistance;"," vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );"," gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {"," if ( mod( vLineDistance, totalSize ) > dashSize ) {","   discard;"," }"," vec3 outgoingLight = vec3( 0.0 );"," vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment," outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment," gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2000},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment," #ifdef USE_LOGDEPTHBUF_EXT","   float depth = gl_FragDepthEXT / gl_FragCoord.w;"," #else","   float depth = gl_FragCoord.z / gl_FragCoord.w;"," #endif"," float color = 1.0 - smoothstep( mNear, mFar, depth );"," gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {"," vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {"," gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {"," vWorldPosition = transformDirection( position, modelMatrix );"," gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {"," gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {"," vWorldPosition = transformDirection( position, modelMatrix );"," gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","vec3 direction = normalize( vWorldPosition );","vec2 sampleUV;","sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );","sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","gl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {"," const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );"," const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );"," vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );"," res -= res.xxyz * bit_mask;"," return res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment," #ifdef USE_LOGDEPTHBUF_EXT","   gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );"," #else","   gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );"," #endif","}"].join("\n")},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new THREE.Vector3(0,0,0)}},vertexShader:["varying vec4 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.worldpos_vertex,"vWorldPosition = worldPosition;","}"].join("\n"),fragmentShader:["uniform vec3 lightPos;","varying vec4 vWorldPosition;",THREE.ShaderChunk.common,"vec4 pack1K ( float depth ) {","   depth /= 1000.0;","   const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );"," const vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );"," vec4 res = fract( depth * bitSh );"," res -= res.xxyz * bitMsk;"," return res; ","}","float unpack1K ( vec4 color ) {"," const vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );"," return dot( color, bitSh ) * 1000.0;","}","void main () {"," gl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );","}"].join("\n")}};THREE.WebGLRenderer=function(S){console.log("THREE.WebGLRenderer",THREE.REVISION);S=S||{};var h=S.canvas!==undefined?S.canvas:document.createElement("canvas"),g=S.context!==undefined?S.context:null,aA=h.width,T=h.height,E=1,ae=S.alpha!==undefined?S.alpha:false,aG=S.depth!==undefined?S.depth:true,a6=S.stencil!==undefined?S.stencil:true,ax=S.antialias!==undefined?S.antialias:false,a2=S.premultipliedAlpha!==undefined?S.premultipliedAlpha:true,aC=S.preserveDrawingBuffer!==undefined?S.preserveDrawingBuffer:false,W=new THREE.Color(0),aI=0;var l=[];var k=[];var aS=-1;var au=[];var at=-1;var ah=new Float32Array(8);var al=[];var aW=[];this.domElement=h;this.context=null;this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.gammaFactor=2;this.gammaInput=false;this.gammaOutput=false;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=true;var P=this,K=null,aX=null,an=-1,U="",Q=null,aY=0,e=0,c=0,aR=h.width,R=h.height,Z=0,aB=0,aF=new THREE.Frustum(),aw=new THREE.Matrix4(),B=new THREE.Vector3(),j=new THREE.Vector3(),a5=true,C={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},aq={geometries:0,textures:0},aV={calls:0,vertices:0,faces:0,points:0};this.info={render:aV,memory:aq,programs:null};var aJ;try{var aM={alpha:ae,depth:aG,stencil:a6,antialias:ax,premultipliedAlpha:a2,preserveDrawingBuffer:aC};aJ=g||h.getContext("webgl",aM)||h.getContext("experimental-webgl",aM);if(aJ===null){if(h.getContext("webgl")!==null){throw"Error creating WebGL context with your selected attributes."}else{throw"Error creating WebGL context."}}h.addEventListener("webglcontextlost",r,false)}catch(aL){console.error("THREE.WebGLRenderer: "+aL)}var d=new THREE.WebGLExtensions(aJ);d.get("OES_texture_float");d.get("OES_texture_float_linear");d.get("OES_texture_half_float");d.get("OES_texture_half_float_linear");d.get("OES_standard_derivatives");d.get("ANGLE_instanced_arrays");if(d.get("OES_element_index_uint")){THREE.BufferGeometry.MaxIndex=4294967296}var af=new THREE.WebGLCapabilities(aJ,d,S);var a3=new THREE.WebGLState(aJ,d,ao);var ak=new THREE.WebGLProperties();var av=new THREE.WebGLObjects(aJ,ak,this.info);var o=new THREE.WebGLPrograms(this,af);this.info.programs=o.programs;var H=new THREE.WebGLBufferRenderer(aJ,d,aV);var s=new THREE.WebGLIndexedBufferRenderer(aJ,d,aV);function M(ba,a9,a7,a8){if(a2===true){ba*=a8;a9*=a8;a7*=a8}aJ.clearColor(ba,a9,a7,a8)}function aN(){a3.init();aJ.viewport(e,c,aR,R);M(W.r,W.g,W.b,aI)}function az(){K=null;Q=null;U="";an=-1;a5=true;a3.reset()}aN();this.context=aJ;this.capabilities=af;this.extensions=d;this.state=a3;var A=new THREE.WebGLShadowMap(this,l,av);this.shadowMap=A;var aE=new THREE.SpritePlugin(this,al);var a4=new THREE.LensFlarePlugin(this,aW);this.getContext=function(){return aJ};this.getContextAttributes=function(){return aJ.getContextAttributes()};this.forceContextLoss=function(){d.get("WEBGL_lose_context").loseContext()};this.getMaxAnisotropy=(function(){var a8;return function a7(){if(a8!==undefined){return a8}var a9=d.get("EXT_texture_filter_anisotropic");if(a9!==null){a8=aJ.getParameter(a9.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else{a8=0}return a8}})();this.getPrecision=function(){return af.precision};this.getPixelRatio=function(){return E};this.setPixelRatio=function(a7){if(a7!==undefined){E=a7}};this.getSize=function(){return{width:aA,height:T}};this.setSize=function(a8,a7,a9){aA=a8;T=a7;h.width=a8*E;h.height=a7*E;if(a9!==false){h.style.width=a8+"px";h.style.height=a7+"px"}this.setViewport(0,0,a8,a7)};this.setViewport=function(a8,ba,a9,a7){e=a8*E;c=ba*E;aR=a9*E;R=a7*E;aJ.viewport(e,c,aR,R)};this.getViewport=function(a7){a7.x=e/E;a7.y=c/E;a7.z=aR/E;a7.w=R/E};this.setScissor=function(a8,ba,a9,a7){aJ.scissor(a8*E,ba*E,a9*E,a7*E)};this.enableScissorTest=function(a7){a3.setScissorTest(a7)};this.getClearColor=function(){return W};this.setClearColor=function(a7,a8){W.set(a7);aI=a8!==undefined?a8:1;M(W.r,W.g,W.b,aI)};this.getClearAlpha=function(){return aI};this.setClearAlpha=function(a7){aI=a7;M(W.r,W.g,W.b,aI)};this.clear=function(a7,ba,a8){var a9=0;if(a7===undefined||a7){a9|=aJ.COLOR_BUFFER_BIT}if(ba===undefined||ba){a9|=aJ.DEPTH_BUFFER_BIT}if(a8===undefined||a8){a9|=aJ.STENCIL_BUFFER_BIT}aJ.clear(a9)};this.clearColor=function(){aJ.clear(aJ.COLOR_BUFFER_BIT)};this.clearDepth=function(){aJ.clear(aJ.DEPTH_BUFFER_BIT)};this.clearStencil=function(){aJ.clear(aJ.STENCIL_BUFFER_BIT)};this.clearTarget=function(a9,a7,ba,a8){this.setRenderTarget(a9);this.clear(a7,ba,a8)};this.resetGLState=az;this.dispose=function(){h.removeEventListener("webglcontextlost",r,false)};function r(a7){a7.preventDefault();az();aN();ak.clear()}function ab(a8){var a7=a8.target;a7.removeEventListener("dispose",ab);ar(a7);aq.textures--}function a0(a7){var a8=a7.target;a8.removeEventListener("dispose",a0);V(a8);aq.textures--}function a1(a8){var a7=a8.target;a7.removeEventListener("dispose",a1);m(a7)}function ar(a7){var a8=ak.get(a7);if(a7.image&&a8.__image__webglTextureCube){aJ.deleteTexture(a8.__image__webglTextureCube)}else{if(a8.__webglInit===undefined){return}aJ.deleteTexture(a8.__webglTexture)}ak["delete"](a7)}function V(ba){var a7=ak.get(ba);var a9=ak.get(ba.texture);if(!ba||a9.__webglTexture===undefined){return}aJ.deleteTexture(a9.__webglTexture);if(ba instanceof THREE.WebGLRenderTargetCube){for(var a8=0;a8<6;a8++){aJ.deleteFramebuffer(a7.__webglFramebuffer[a8]);aJ.deleteRenderbuffer(a7.__webglRenderbuffer[a8])}}else{aJ.deleteFramebuffer(a7.__webglFramebuffer);aJ.deleteRenderbuffer(a7.__webglRenderbuffer)}ak["delete"](ba.texture);ak["delete"](ba)}function m(a7){I(a7);ak["delete"](a7)}function I(a8){var a7=ak.get(a8).program;a8.program=undefined;if(a7!==undefined){o.releaseProgram(a7)}}this.renderBufferImmediate=function(a8,bc,bg){a3.initAttributes();var bh=ak.get(a8);if(a8.hasPositions&&!bh.position){bh.position=aJ.createBuffer()}if(a8.hasNormals&&!bh.normal){bh.normal=aJ.createBuffer()}if(a8.hasUvs&&!bh.uv){bh.uv=aJ.createBuffer()}if(a8.hasColors&&!bh.color){bh.color=aJ.createBuffer()}var a9=bc.getAttributes();if(a8.hasPositions){aJ.bindBuffer(aJ.ARRAY_BUFFER,bh.position);aJ.bufferData(aJ.ARRAY_BUFFER,a8.positionArray,aJ.DYNAMIC_DRAW);a3.enableAttribute(a9.position);aJ.vertexAttribPointer(a9.position,3,aJ.FLOAT,false,0,0)}if(a8.hasNormals){aJ.bindBuffer(aJ.ARRAY_BUFFER,bh.normal);if(bg.type!=="MeshPhongMaterial"&&bg.shading===THREE.FlatShading){for(var bb=0,a7=a8.count*3;bb<a7;bb+=9){var bf=a8.normalArray;var be=(bf[bb+0]+bf[bb+3]+bf[bb+6])/3;var bd=(bf[bb+1]+bf[bb+4]+bf[bb+7])/3;var ba=(bf[bb+2]+bf[bb+5]+bf[bb+8])/3;bf[bb+0]=be;bf[bb+1]=bd;bf[bb+2]=ba;bf[bb+3]=be;bf[bb+4]=bd;bf[bb+5]=ba;bf[bb+6]=be;bf[bb+7]=bd;bf[bb+8]=ba}}aJ.bufferData(aJ.ARRAY_BUFFER,a8.normalArray,aJ.DYNAMIC_DRAW);a3.enableAttribute(a9.normal);aJ.vertexAttribPointer(a9.normal,3,aJ.FLOAT,false,0,0)}if(a8.hasUvs&&bg.map){aJ.bindBuffer(aJ.ARRAY_BUFFER,bh.uv);aJ.bufferData(aJ.ARRAY_BUFFER,a8.uvArray,aJ.DYNAMIC_DRAW);a3.enableAttribute(a9.uv);aJ.vertexAttribPointer(a9.uv,2,aJ.FLOAT,false,0,0)}if(a8.hasColors&&bg.vertexColors!==THREE.NoColors){aJ.bindBuffer(aJ.ARRAY_BUFFER,bh.color);aJ.bufferData(aJ.ARRAY_BUFFER,a8.colorArray,aJ.DYNAMIC_DRAW);a3.enableAttribute(a9.color);aJ.vertexAttribPointer(a9.color,3,aJ.FLOAT,false,0,0)}a3.disableUnusedAttributes();aJ.drawArrays(aJ.TRIANGLES,0,a8.count);a8.count=0};this.renderBufferDirect=function(br,bw,a8,bc,bk,bA,bg){L(bk);var bh=aD(br,bw,a8,bk,bA);var bl=false;var bp=bc.id+"_"+bh.id+"_"+bk.wireframe;if(bp!==U){U=bp;bl=true}var bs=bA.morphTargetInfluences;if(bs!==undefined){var bi=[];for(var bq=0,bn=bs.length;bq<bn;bq++){var bo=bs[bq];bi.push([bo,bq])}bi.sort(a);if(bi.length>8){bi.length=8}var be=bc.morphAttributes;for(var bq=0,bn=bi.length;bq<bn;bq++){var bo=bi[bq];ah[bq]=bo[0];if(bo[0]!==0){var bd=bo[1];if(bk.morphTargets===true&&be.position){bc.addAttribute("morphTarget"+bq,be.position[bd])}if(bk.morphNormals===true&&be.normal){bc.addAttribute("morphNormal"+bq,be.normal[bd])}}else{if(bk.morphTargets===true){bc.removeAttribute("morphTarget"+bq)}if(bk.morphNormals===true){bc.removeAttribute("morphNormal"+bq)}}}var bv=bh.getUniforms();if(bv.morphTargetInfluences!==null){aJ.uniform1fv(bv.morphTargetInfluences,ah)}bl=true}var bd=bc.index;var bz=bc.attributes.position;if(bk.wireframe===true){bd=av.getWireframeAttribute(bc)}var bm;if(bd!==null){bm=s;bm.setIndex(bd)}else{bm=H}if(bl){t(bk,bh,bc);if(bd!==null){aJ.bindBuffer(aJ.ELEMENT_ARRAY_BUFFER,av.getAttributeBuffer(bd))}}var bu=0;var by=Infinity;if(bd!==null){by=bd.count}else{if(bz!==undefined){by=bz.count}}var bt=bc.drawRange.start;var bx=bc.drawRange.count;var a9=bg!==null?bg.start:0;var bb=bg!==null?bg.count:Infinity;var bf=Math.max(bu,bt,a9);var ba=Math.min(bu+by,bt+bx,a9+bb)-1;var bj=Math.max(0,ba-bf+1);if(bA instanceof THREE.Mesh){if(bk.wireframe===true){a3.setLineWidth(bk.wireframeLinewidth*E);bm.setMode(aJ.LINES)}else{bm.setMode(aJ.TRIANGLES)}if(bc instanceof THREE.InstancedBufferGeometry&&bc.maxInstancedCount>0){bm.renderInstances(bc)}else{bm.render(bf,bj)}}else{if(bA instanceof THREE.Line){var a7=bk.linewidth;if(a7===undefined){a7=1}a3.setLineWidth(a7*E);if(bA instanceof THREE.LineSegments){bm.setMode(aJ.LINES)}else{bm.setMode(aJ.LINE_STRIP)}bm.render(bf,bj)}else{if(bA instanceof THREE.Points){bm.setMode(aJ.POINTS);bm.render(bf,bj)}}}};function t(bh,bf,bi,bl){var bk;if(bi instanceof THREE.InstancedBufferGeometry){bk=d.get("ANGLE_instanced_arrays");if(bk===null){console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}if(bl===undefined){bl=0}a3.initAttributes();var bg=bi.attributes;var ba=bf.getAttributes();var a9=bh.defaultAttributeValues;for(var a8 in ba){var be=ba[a8];if(be>=0){var bn=bg[a8];if(bn!==undefined){var bm=bn.itemSize;var bc=av.getAttributeBuffer(bn);if(bn instanceof THREE.InterleavedBufferAttribute){var bd=bn.data;var a7=bd.stride;var bb=bn.offset;if(bd instanceof THREE.InstancedInterleavedBuffer){a3.enableAttributeAndDivisor(be,bd.meshPerAttribute,bk);if(bi.maxInstancedCount===undefined){bi.maxInstancedCount=bd.meshPerAttribute*bd.count}}else{a3.enableAttribute(be)}aJ.bindBuffer(aJ.ARRAY_BUFFER,bc);aJ.vertexAttribPointer(be,bm,aJ.FLOAT,false,a7*bd.array.BYTES_PER_ELEMENT,(bl*a7+bb)*bd.array.BYTES_PER_ELEMENT)}else{if(bn instanceof THREE.InstancedBufferAttribute){a3.enableAttributeAndDivisor(be,bn.meshPerAttribute,bk);if(bi.maxInstancedCount===undefined){bi.maxInstancedCount=bn.meshPerAttribute*bn.count}}else{a3.enableAttribute(be)}aJ.bindBuffer(aJ.ARRAY_BUFFER,bc);aJ.vertexAttribPointer(be,bm,aJ.FLOAT,false,0,bl*bm*4)}}else{if(a9!==undefined){var bj=a9[a8];if(bj!==undefined){switch(bj.length){case 2:aJ.vertexAttrib2fv(be,bj);break;case 3:aJ.vertexAttrib3fv(be,bj);break;case 4:aJ.vertexAttrib4fv(be,bj);break;default:aJ.vertexAttrib1fv(be,bj)}}}}}}a3.disableUnusedAttributes()}function a(a8,a7){return a7[0]-a8[0]}function ay(a8,a7){if(a8.object.renderOrder!==a7.object.renderOrder){return a8.object.renderOrder-a7.object.renderOrder}else{if(a8.material.id!==a7.material.id){return a8.material.id-a7.material.id}else{if(a8.z!==a7.z){return a8.z-a7.z}else{return a8.id-a7.id}}}}function i(a8,a7){if(a8.object.renderOrder!==a7.object.renderOrder){return a8.object.renderOrder-a7.object.renderOrder}if(a8.z!==a7.z){return a7.z-a8.z}else{return a8.id-a7.id}}this.render=function(bd,a9,bc,be){if(a9 instanceof THREE.Camera===false){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}var bb=bd.fog;U="";an=-1;Q=null;a5=true;if(bd.autoUpdate===true){bd.updateMatrixWorld()}if(a9.parent===null){a9.updateMatrixWorld()}a9.matrixWorldInverse.getInverse(a9.matrixWorld);aw.multiplyMatrices(a9.projectionMatrix,a9.matrixWorldInverse);aF.setFromMatrix(aw);l.length=0;aS=-1;at=-1;al.length=0;aW.length=0;q(bd,a9);k.length=aS+1;au.length=at+1;if(P.sortObjects===true){k.sort(ay);au.sort(i)}A.render(bd);aV.calls=0;aV.vertices=0;aV.faces=0;aV.points=0;this.setRenderTarget(bc);if(this.autoClear||be){this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil)}if(bd.overrideMaterial){var a8=bd.overrideMaterial;am(k,a9,l,bb,a8);am(au,a9,l,bb,a8)}else{a3.setBlending(THREE.NoBlending);am(k,a9,l,bb);am(au,a9,l,bb)}aE.render(bd,a9);a4.render(bd,a9,Z,aB);if(bc){var ba=bc.texture;var a7=aa(bc);if(ba.generateMipmaps&&a7&&ba.minFilter!==THREE.NearestFilter&&ba.minFilter!==THREE.LinearFilter){f(bc)}}a3.setDepthTest(true);a3.setDepthWrite(true);a3.setColorWrite(true)};function aQ(a8,bd,a9,bc,bb){var be,a7;if(a9.transparent){be=au;a7=++at}else{be=k;a7=++aS}var ba=be[a7];if(ba!==undefined){ba.id=a8.id;ba.object=a8;ba.geometry=bd;ba.material=a9;ba.z=B.z;ba.group=bb}else{ba={id:a8.id,object:a8,geometry:bd,material:a9,z:B.z,group:bb};be.push(ba)}}function q(bb,bd){if(bb.visible===false){return}if((bb.channels.mask&bd.channels.mask)!==0){if(bb instanceof THREE.Light){l.push(bb)}else{if(bb instanceof THREE.Sprite){al.push(bb)}else{if(bb instanceof THREE.LensFlare){aW.push(bb)}else{if(bb instanceof THREE.ImmediateRenderObject){if(P.sortObjects===true){B.setFromMatrixPosition(bb.matrixWorld);B.applyProjection(aw)}aQ(bb,null,bb.material,B.z,null)}else{if(bb instanceof THREE.Mesh||bb instanceof THREE.Line||bb instanceof THREE.Points){if(bb instanceof THREE.SkinnedMesh){bb.skeleton.update()}if(bb.frustumCulled===false||aF.intersectsObject(bb)===true){var be=bb.material;if(be.visible===true){if(P.sortObjects===true){B.setFromMatrixPosition(bb.matrixWorld);B.applyProjection(aw)}var bf=av.update(bb);if(be instanceof THREE.MeshFaceMaterial){var a8=bf.groups;var bh=be.materials;for(var bc=0,a9=a8.length;bc<a9;bc++){var bg=a8[bc];var ba=bh[bg.materialIndex];if(ba.visible===true){aQ(bb,bf,ba,B.z,bg)}}}else{aQ(bb,bf,be,B.z,null)}}}}}}}}}var a7=bb.children;for(var bc=0,a9=a7.length;bc<a9;bc++){q(a7[bc],bd)}}function am(a7,bg,bc,a8,bh){for(var be=0,a9=a7.length;be<a9;be++){var bb=a7[be];var ba=bb.object;var bi=bb.geometry;var bf=bh===undefined?bb.material:bh;var bj=bb.group;ba.modelViewMatrix.multiplyMatrices(bg.matrixWorldInverse,ba.matrixWorld);ba.normalMatrix.getNormalMatrix(ba.modelViewMatrix);if(ba instanceof THREE.ImmediateRenderObject){L(bf);var bd=aD(bg,bc,a8,bf,ba);U="";ba.render(function(bk){P.renderBufferImmediate(bk,bd,bf)})}else{P.renderBufferDirect(bg,bc,a8,bi,bf,ba,bj)}}}function ag(bh,bd,a7,bb){var a8=ak.get(bh);var bl=o.getParameters(bh,bd,a7,bb);var a9=o.getProgramCode(bh,bl);var bf=a8.program;var bi=true;if(bf===undefined){bh.addEventListener("dispose",a1)}else{if(bf.code!==a9){I(bh)}else{if(bl.shaderID!==undefined){return}else{bi=false}}}if(bi){if(bl.shaderID){var bg=THREE.ShaderLib[bl.shaderID];a8.__webglShader={name:bh.type,uniforms:THREE.UniformsUtils.clone(bg.uniforms),vertexShader:bg.vertexShader,fragmentShader:bg.fragmentShader}}else{a8.__webglShader={name:bh.type,uniforms:bh.uniforms,vertexShader:bh.vertexShader,fragmentShader:bh.fragmentShader}}bh.__webglShader=a8.__webglShader;bf=o.acquireProgram(bh,bl,a9);a8.program=bf;bh.program=bf}var bc=bf.getAttributes();if(bh.morphTargets){bh.numSupportedMorphTargets=0;for(var be=0;be<P.maxMorphTargets;be++){if(bc["morphTarget"+be]>=0){bh.numSupportedMorphTargets++}}}if(bh.morphNormals){bh.numSupportedMorphNormals=0;for(be=0;be<P.maxMorphNormals;be++){if(bc["morphNormal"+be]>=0){bh.numSupportedMorphNormals++}}}a8.uniformsList=[];var ba=a8.program.getUniforms();for(var bk in a8.__webglShader.uniforms){var bj=ba[bk];if(bj){a8.uniformsList.push([a8.__webglShader.uniforms[bk],bj])}}}function L(a7){Y(a7);if(a7.transparent===true){a3.setBlending(a7.blending,a7.blendEquation,a7.blendSrc,a7.blendDst,a7.blendEquationAlpha,a7.blendSrcAlpha,a7.blendDstAlpha)}else{a3.setBlending(THREE.NoBlending)}a3.setDepthFunc(a7.depthFunc);a3.setDepthTest(a7.depthTest);a3.setDepthWrite(a7.depthWrite);a3.setColorWrite(a7.colorWrite);a3.setPolygonOffset(a7.polygonOffset,a7.polygonOffsetFactor,a7.polygonOffsetUnits)}function Y(a7){a7.side!==THREE.DoubleSide?a3.enable(aJ.CULL_FACE):a3.disable(aJ.CULL_FACE);a3.setFlipSided(a7.side===THREE.BackSide)}function aD(bf,bc,a7,bg,bb){aY=0;var a8=ak.get(bg);if(bg.needsUpdate||!a8.program){ag(bg,bc,a7,bb);bg.needsUpdate=false}var ba=false;var be=false;var a9=false;var bd=a8.program,bj=bd.getUniforms(),bh=a8.__webglShader.uniforms;if(bd.id!==K){aJ.useProgram(bd.program);K=bd.id;ba=true;be=true;a9=true}if(bg.id!==an){if(an===-1){a9=true}an=bg.id;be=true}if(ba||bf!==Q){aJ.uniformMatrix4fv(bj.projectionMatrix,false,bf.projectionMatrix.elements);if(af.logarithmicDepthBuffer){aJ.uniform1f(bj.logDepthBufFC,2/(Math.log(bf.far+1)/Math.LN2))}if(bf!==Q){Q=bf}if(bg instanceof THREE.ShaderMaterial||bg instanceof THREE.MeshPhongMaterial||bg.envMap){if(bj.cameraPosition!==undefined){B.setFromMatrixPosition(bf.matrixWorld);aJ.uniform3f(bj.cameraPosition,B.x,B.y,B.z)}}if(bg instanceof THREE.MeshPhongMaterial||bg instanceof THREE.MeshLambertMaterial||bg instanceof THREE.MeshBasicMaterial||bg instanceof THREE.ShaderMaterial||bg.skinning){if(bj.viewMatrix!==undefined){aJ.uniformMatrix4fv(bj.viewMatrix,false,bf.matrixWorldInverse.elements)}}}if(bg.skinning){if(bb.bindMatrix&&bj.bindMatrix!==undefined){aJ.uniformMatrix4fv(bj.bindMatrix,false,bb.bindMatrix.elements)}if(bb.bindMatrixInverse&&bj.bindMatrixInverse!==undefined){aJ.uniformMatrix4fv(bj.bindMatrixInverse,false,bb.bindMatrixInverse.elements)}if(af.floatVertexTextures&&bb.skeleton&&bb.skeleton.useVertexTexture){if(bj.boneTexture!==undefined){var bi=O();aJ.uniform1i(bj.boneTexture,bi);P.setTexture(bb.skeleton.boneTexture,bi)}if(bj.boneTextureWidth!==undefined){aJ.uniform1i(bj.boneTextureWidth,bb.skeleton.boneTextureWidth)}if(bj.boneTextureHeight!==undefined){aJ.uniform1i(bj.boneTextureHeight,bb.skeleton.boneTextureHeight)}}else{if(bb.skeleton&&bb.skeleton.boneMatrices){if(bj.boneGlobalMatrices!==undefined){aJ.uniformMatrix4fv(bj.boneGlobalMatrices,false,bb.skeleton.boneMatrices)}}}}if(be){if(a7&&bg.fog){aK(bh,a7)}if(bg instanceof THREE.MeshPhongMaterial||bg instanceof THREE.MeshLambertMaterial||bg.lights){if(a5){a9=true;aT(bc,bf);a5=false}if(a9){G(bh,C);aU(bh,true)}else{aU(bh,false)}}if(bg instanceof THREE.MeshBasicMaterial||bg instanceof THREE.MeshLambertMaterial||bg instanceof THREE.MeshPhongMaterial){ad(bh,bg)}if(bg instanceof THREE.LineBasicMaterial){aj(bh,bg)}else{if(bg instanceof THREE.LineDashedMaterial){aj(bh,bg);aH(bh,bg)}else{if(bg instanceof THREE.PointsMaterial){ac(bh,bg)}else{if(bg instanceof THREE.MeshPhongMaterial){ai(bh,bg)}else{if(bg instanceof THREE.MeshDepthMaterial){bh.mNear.value=bf.near;bh.mFar.value=bf.far;bh.opacity.value=bg.opacity}else{if(bg instanceof THREE.MeshNormalMaterial){bh.opacity.value=bg.opacity}}}}}}if(bb.receiveShadow&&!bg._shadowPass){N(bh,bc,bf)}aP(a8.uniformsList)}F(bj,bb);if(bj.modelMatrix!==undefined){aJ.uniformMatrix4fv(bj.modelMatrix,false,bb.matrixWorld.elements)}return bd}function ad(a8,a9){a8.opacity.value=a9.opacity;a8.diffuse.value=a9.color;if(a9.emissive){a8.emissive.value=a9.emissive}a8.map.value=a9.map;a8.specularMap.value=a9.specularMap;a8.alphaMap.value=a9.alphaMap;if(a9.aoMap){a8.aoMap.value=a9.aoMap;a8.aoMapIntensity.value=a9.aoMapIntensity}var a7;if(a9.map){a7=a9.map}else{if(a9.specularMap){a7=a9.specularMap}else{if(a9.displacementMap){a7=a9.displacementMap}else{if(a9.normalMap){a7=a9.normalMap}else{if(a9.bumpMap){a7=a9.bumpMap}else{if(a9.alphaMap){a7=a9.alphaMap}else{if(a9.emissiveMap){a7=a9.emissiveMap}}}}}}}if(a7!==undefined){if(a7 instanceof THREE.WebGLRenderTarget){a7=a7.texture}var bb=a7.offset;var ba=a7.repeat;a8.offsetRepeat.value.set(bb.x,bb.y,ba.x,ba.y)}a8.envMap.value=a9.envMap;a8.flipEnvMap.value=(a9.envMap instanceof THREE.WebGLRenderTargetCube)?1:-1;a8.reflectivity.value=a9.reflectivity;a8.refractionRatio.value=a9.refractionRatio}function aj(a7,a8){a7.diffuse.value=a8.color;a7.opacity.value=a8.opacity}function aH(a7,a8){a7.dashSize.value=a8.dashSize;a7.totalSize.value=a8.dashSize+a8.gapSize;a7.scale.value=a8.scale}function ac(a7,a8){a7.psColor.value=a8.color;a7.opacity.value=a8.opacity;a7.size.value=a8.size;a7.scale.value=h.height/2;a7.map.value=a8.map;if(a8.map!==null){var ba=a8.map.offset;var a9=a8.map.repeat;a7.offsetRepeat.value.set(ba.x,ba.y,a9.x,a9.y)}}function aK(a7,a8){a7.fogColor.value=a8.color;if(a8 instanceof THREE.Fog){a7.fogNear.value=a8.near;a7.fogFar.value=a8.far}else{if(a8 instanceof THREE.FogExp2){a7.fogDensity.value=a8.density}}}function ai(a7,a8){a7.specular.value=a8.specular;a7.shininess.value=Math.max(a8.shininess,0.0001);if(a8.lightMap){a7.lightMap.value=a8.lightMap;a7.lightMapIntensity.value=a8.lightMapIntensity}if(a8.emissiveMap){a7.emissiveMap.value=a8.emissiveMap}if(a8.bumpMap){a7.bumpMap.value=a8.bumpMap;a7.bumpScale.value=a8.bumpScale}if(a8.normalMap){a7.normalMap.value=a8.normalMap;a7.normalScale.value.copy(a8.normalScale)}if(a8.displacementMap){a7.displacementMap.value=a8.displacementMap;a7.displacementScale.value=a8.displacementScale;a7.displacementBias.value=a8.displacementBias}}function G(a7,a8){a7.ambientLightColor.value=a8.ambient;a7.directionalLightColor.value=a8.directional.colors;a7.directionalLightDirection.value=a8.directional.positions;a7.pointLightColor.value=a8.point.colors;a7.pointLightPosition.value=a8.point.positions;a7.pointLightDistance.value=a8.point.distances;a7.pointLightDecay.value=a8.point.decays;a7.spotLightColor.value=a8.spot.colors;a7.spotLightPosition.value=a8.spot.positions;a7.spotLightDistance.value=a8.spot.distances;a7.spotLightDirection.value=a8.spot.directions;a7.spotLightAngleCos.value=a8.spot.anglesCos;a7.spotLightExponent.value=a8.spot.exponents;a7.spotLightDecay.value=a8.spot.decays;a7.hemisphereLightSkyColor.value=a8.hemi.skyColors;a7.hemisphereLightGroundColor.value=a8.hemi.groundColors;a7.hemisphereLightDirection.value=a8.hemi.positions}function aU(a7,a8){a7.ambientLightColor.needsUpdate=a8;a7.directionalLightColor.needsUpdate=a8;a7.directionalLightDirection.needsUpdate=a8;a7.pointLightColor.needsUpdate=a8;a7.pointLightPosition.needsUpdate=a8;a7.pointLightDistance.needsUpdate=a8;a7.pointLightDecay.needsUpdate=a8;a7.spotLightColor.needsUpdate=a8;a7.spotLightPosition.needsUpdate=a8;a7.spotLightDistance.needsUpdate=a8;a7.spotLightDirection.needsUpdate=a8;a7.spotLightAngleCos.needsUpdate=a8;a7.spotLightExponent.needsUpdate=a8;a7.spotLightDecay.needsUpdate=a8;a7.hemisphereLightSkyColor.needsUpdate=a8;a7.hemisphereLightGroundColor.needsUpdate=a8;a7.hemisphereLightDirection.needsUpdate=a8}function N(a7,bb,bd){if(a7.shadowMatrix){var ba=0;for(var bc=0,a9=bb.length;bc<a9;bc++){var a8=bb[bc];if(a8.castShadow===true){if(a8 instanceof THREE.PointLight||a8 instanceof THREE.SpotLight||a8 instanceof THREE.DirectionalLight){var be=a8.shadow;if(a8 instanceof THREE.PointLight){B.setFromMatrixPosition(a8.matrixWorld).negate();be.matrix.identity().setPosition(B);a7.shadowDarkness.value[ba]=-be.darkness}else{a7.shadowDarkness.value[ba]=be.darkness}a7.shadowMatrix.value[ba]=be.matrix;a7.shadowMap.value[ba]=be.map;a7.shadowMapSize.value[ba]=be.mapSize;a7.shadowBias.value[ba]=be.bias;ba++}}}}}function F(a7,a8){aJ.uniformMatrix4fv(a7.modelViewMatrix,false,a8.modelViewMatrix.elements);if(a7.normalMatrix){aJ.uniformMatrix3fv(a7.normalMatrix,false,a8.normalMatrix.elements)}}function O(){var a7=aY;if(a7>=af.maxTextures){console.warn("WebGLRenderer: trying to use "+a7+" texture units while this GPU supports only "+af.maxTextures)}aY+=1;return a7}function aP(bj){var be,bk;for(var bb=0,bd=bj.length;bb<bd;bb++){var a7=bj[bb][0];if(a7.needsUpdate===false){continue}var bf=a7.type;var bi=a7.value;var bh=bj[bb][1];switch(bf){case"1i":aJ.uniform1i(bh,bi);break;case"1f":aJ.uniform1f(bh,bi);break;case"2f":aJ.uniform2f(bh,bi[0],bi[1]);break;case"3f":aJ.uniform3f(bh,bi[0],bi[1],bi[2]);break;case"4f":aJ.uniform4f(bh,bi[0],bi[1],bi[2],bi[3]);break;case"1iv":aJ.uniform1iv(bh,bi);break;case"3iv":aJ.uniform3iv(bh,bi);break;case"1fv":aJ.uniform1fv(bh,bi);break;case"2fv":aJ.uniform2fv(bh,bi);break;case"3fv":aJ.uniform3fv(bh,bi);break;case"4fv":aJ.uniform4fv(bh,bi);break;case"Matrix3fv":aJ.uniformMatrix3fv(bh,false,bi);break;case"Matrix4fv":aJ.uniformMatrix4fv(bh,false,bi);break;case"i":aJ.uniform1i(bh,bi);break;case"f":aJ.uniform1f(bh,bi);break;case"v2":aJ.uniform2f(bh,bi.x,bi.y);break;case"v3":aJ.uniform3f(bh,bi.x,bi.y,bi.z);break;case"v4":aJ.uniform4f(bh,bi.x,bi.y,bi.z,bi.w);break;case"c":aJ.uniform3f(bh,bi.r,bi.g,bi.b);break;case"iv1":aJ.uniform1iv(bh,bi);break;case"iv":aJ.uniform3iv(bh,bi);break;case"fv1":aJ.uniform1fv(bh,bi);break;case"fv":aJ.uniform3fv(bh,bi);break;case"v2v":if(a7._array===undefined){a7._array=new Float32Array(2*bi.length)}for(var bc=0,ba=0,bg=bi.length;bc<bg;bc++,ba+=2){a7._array[ba+0]=bi[bc].x;a7._array[ba+1]=bi[bc].y}aJ.uniform2fv(bh,a7._array);break;case"v3v":if(a7._array===undefined){a7._array=new Float32Array(3*bi.length)}for(var bc=0,a9=0,bg=bi.length;bc<bg;bc++,a9+=3){a7._array[a9+0]=bi[bc].x;a7._array[a9+1]=bi[bc].y;a7._array[a9+2]=bi[bc].z}aJ.uniform3fv(bh,a7._array);break;case"v4v":if(a7._array===undefined){a7._array=new Float32Array(4*bi.length)}for(var bc=0,a8=0,bg=bi.length;bc<bg;bc++,a8+=4){a7._array[a8+0]=bi[bc].x;a7._array[a8+1]=bi[bc].y;a7._array[a8+2]=bi[bc].z;a7._array[a8+3]=bi[bc].w}aJ.uniform4fv(bh,a7._array);break;case"m3":aJ.uniformMatrix3fv(bh,false,bi.elements);break;case"m3v":if(a7._array===undefined){a7._array=new Float32Array(9*bi.length)}for(var bc=0,bg=bi.length;bc<bg;bc++){bi[bc].flattenToArrayOffset(a7._array,bc*9)}aJ.uniformMatrix3fv(bh,false,a7._array);break;case"m4":aJ.uniformMatrix4fv(bh,false,bi.elements);break;case"m4v":if(a7._array===undefined){a7._array=new Float32Array(16*bi.length)}for(var bc=0,bg=bi.length;bc<bg;bc++){bi[bc].flattenToArrayOffset(a7._array,bc*16)}aJ.uniformMatrix4fv(bh,false,a7._array);break;case"t":be=bi;bk=O();aJ.uniform1i(bh,bk);if(!be){continue}if(be instanceof THREE.CubeTexture||(Array.isArray(be.image)&&be.image.length===6)){p(be,bk)}else{if(be instanceof THREE.WebGLRenderTargetCube){aZ(be.texture,bk)}else{if(be instanceof THREE.WebGLRenderTarget){P.setTexture(be.texture,bk)}else{P.setTexture(be,bk)}}}break;case"tv":if(a7._array===undefined){a7._array=[]}for(var bc=0,bg=a7.value.length;bc<bg;bc++){a7._array[bc]=O()}aJ.uniform1iv(bh,a7._array);for(var bc=0,bg=a7.value.length;bc<bg;bc++){be=a7.value[bc];bk=a7._array[bc];if(!be){continue}if(be instanceof THREE.CubeTexture||(be.image instanceof Array&&be.image.length===6)){p(be,bk)}else{if(be instanceof THREE.WebGLRenderTarget){P.setTexture(be.texture,bk)}else{if(be instanceof THREE.WebGLRenderTargetCube){aZ(be.texture,bk)}else{P.setTexture(be,bk)}}}}break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+bf)}}}function aO(ba,a9,a8,a7){ba[a9+0]=a8.r*a7;ba[a9+1]=a8.g*a7;ba[a9+2]=a8.b*a7}function aT(bb,bi){var bK,by,bo,bC=0,bL=0,bM=0,bw,a8,be,bx,bm,bs=C,bv=bi.matrixWorldInverse,bk=bs.directional.colors,a9=bs.directional.positions,bH=bs.point.colors,bE=bs.point.positions,bu=bs.point.distances,bA=bs.point.decays,bI=bs.spot.colors,ba=bs.spot.positions,bF=bs.spot.distances,bj=bs.spot.directions,bc=bs.spot.anglesCos,bl=bs.spot.exponents,bB=bs.spot.decays,a7=bs.hemi.skyColors,bJ=bs.hemi.groundColors,bh=bs.hemi.positions,bN=0,br=0,bn=0,bf=0,bt=0,bq=0,bp=0,bd=0,bg=0,bG=0,bD=0,bz=0;for(bK=0,by=bb.length;bK<by;bK++){bo=bb[bK];bw=bo.color;bx=bo.intensity;bm=bo.distance;if(bo instanceof THREE.AmbientLight){if(!bo.visible){continue}bC+=bw.r;bL+=bw.g;bM+=bw.b}else{if(bo instanceof THREE.DirectionalLight){bt+=1;if(!bo.visible){continue}j.setFromMatrixPosition(bo.matrixWorld);B.setFromMatrixPosition(bo.target.matrixWorld);j.sub(B);j.transformDirection(bv);bg=bN*3;a9[bg+0]=j.x;a9[bg+1]=j.y;a9[bg+2]=j.z;aO(bk,bg,bw,bx);bN+=1}else{if(bo instanceof THREE.PointLight){bq+=1;if(!bo.visible){continue}bG=br*3;aO(bH,bG,bw,bx);B.setFromMatrixPosition(bo.matrixWorld);B.applyMatrix4(bv);bE[bG+0]=B.x;bE[bG+1]=B.y;bE[bG+2]=B.z;bu[br]=bm;bA[br]=(bo.distance===0)?0:bo.decay;br+=1}else{if(bo instanceof THREE.SpotLight){bp+=1;if(!bo.visible){continue}bD=bn*3;aO(bI,bD,bw,bx);j.setFromMatrixPosition(bo.matrixWorld);B.copy(j).applyMatrix4(bv);ba[bD+0]=B.x;ba[bD+1]=B.y;ba[bD+2]=B.z;bF[bn]=bm;B.setFromMatrixPosition(bo.target.matrixWorld);j.sub(B);j.transformDirection(bv);bj[bD+0]=j.x;bj[bD+1]=j.y;bj[bD+2]=j.z;bc[bn]=Math.cos(bo.angle);bl[bn]=bo.exponent;bB[bn]=(bo.distance===0)?0:bo.decay;bn+=1}else{if(bo instanceof THREE.HemisphereLight){bd+=1;if(!bo.visible){continue}j.setFromMatrixPosition(bo.matrixWorld);j.transformDirection(bv);bz=bf*3;bh[bz+0]=j.x;bh[bz+1]=j.y;bh[bz+2]=j.z;a8=bo.color;be=bo.groundColor;aO(a7,bz,a8,bx);aO(bJ,bz,be,bx);bf+=1}}}}}}for(bK=bN*3,by=Math.max(bk.length,bt*3);bK<by;bK++){bk[bK]=0}for(bK=br*3,by=Math.max(bH.length,bq*3);bK<by;bK++){bH[bK]=0}for(bK=bn*3,by=Math.max(bI.length,bp*3);bK<by;bK++){bI[bK]=0}for(bK=bf*3,by=Math.max(a7.length,bd*3);bK<by;bK++){a7[bK]=0}for(bK=bf*3,by=Math.max(bJ.length,bd*3);bK<by;bK++){bJ[bK]=0}bs.directional.length=bN;bs.point.length=br;bs.spot.length=bn;bs.hemi.length=bf;bs.ambient[0]=bC;bs.ambient[1]=bL;bs.ambient[2]=bM}this.setFaceCulling=function(a8,a7){if(a8===THREE.CullFaceNone){a3.disable(aJ.CULL_FACE)}else{if(a7===THREE.FrontFaceDirectionCW){aJ.frontFace(aJ.CW)}else{aJ.frontFace(aJ.CCW)}if(a8===THREE.CullFaceBack){aJ.cullFace(aJ.BACK)}else{if(a8===THREE.CullFaceFront){aJ.cullFace(aJ.FRONT)}else{aJ.cullFace(aJ.FRONT_AND_BACK)}}a3.enable(aJ.CULL_FACE)}};function X(a7,a8,a9){var ba;if(a9){aJ.texParameteri(a7,aJ.TEXTURE_WRAP_S,ao(a8.wrapS));aJ.texParameteri(a7,aJ.TEXTURE_WRAP_T,ao(a8.wrapT));aJ.texParameteri(a7,aJ.TEXTURE_MAG_FILTER,ao(a8.magFilter));aJ.texParameteri(a7,aJ.TEXTURE_MIN_FILTER,ao(a8.minFilter))}else{aJ.texParameteri(a7,aJ.TEXTURE_WRAP_S,aJ.CLAMP_TO_EDGE);aJ.texParameteri(a7,aJ.TEXTURE_WRAP_T,aJ.CLAMP_TO_EDGE);if(a8.wrapS!==THREE.ClampToEdgeWrapping||a8.wrapT!==THREE.ClampToEdgeWrapping){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",a8)}aJ.texParameteri(a7,aJ.TEXTURE_MAG_FILTER,ap(a8.magFilter));aJ.texParameteri(a7,aJ.TEXTURE_MIN_FILTER,ap(a8.minFilter));if(a8.minFilter!==THREE.NearestFilter&&a8.minFilter!==THREE.LinearFilter){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",a8)}}ba=d.get("EXT_texture_filter_anisotropic");if(ba){if(a8.type===THREE.FloatType&&d.get("OES_texture_float_linear")===null){return}if(a8.type===THREE.HalfFloatType&&d.get("OES_texture_half_float_linear")===null){return}if(a8.anisotropy>1||ak.get(a8).__currentAnisotropy){aJ.texParameterf(a7,ba.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a8.anisotropy,P.getMaxAnisotropy()));ak.get(a8).__currentAnisotropy=a8.anisotropy}}}function J(a8,bf,bh){if(a8.__webglInit===undefined){a8.__webglInit=true;bf.addEventListener("dispose",ab);a8.__webglTexture=aJ.createTexture();aq.textures++}a3.activeTexture(aJ.TEXTURE0+bh);a3.bindTexture(aJ.TEXTURE_2D,a8.__webglTexture);aJ.pixelStorei(aJ.UNPACK_FLIP_Y_WEBGL,bf.flipY);aJ.pixelStorei(aJ.UNPACK_PREMULTIPLY_ALPHA_WEBGL,bf.premultiplyAlpha);aJ.pixelStorei(aJ.UNPACK_ALIGNMENT,bf.unpackAlignment);bf.image=D(bf.image,af.maxTextureSize);if(b(bf)&&aa(bf.image)===false){bf.image=v(bf.image)}var bc=bf.image,be=aa(bc),a7=ao(bf.format),ba=ao(bf.type);X(aJ.TEXTURE_2D,bf,be);var a9,bb=bf.mipmaps;if(bf instanceof THREE.DataTexture){if(bb.length>0&&be){for(var bd=0,bg=bb.length;bd<bg;bd++){a9=bb[bd];a3.texImage2D(aJ.TEXTURE_2D,bd,a7,a9.width,a9.height,0,a7,ba,a9.data)}bf.generateMipmaps=false}else{a3.texImage2D(aJ.TEXTURE_2D,0,a7,bc.width,bc.height,0,a7,ba,bc.data)}}else{if(bf instanceof THREE.CompressedTexture){for(var bd=0,bg=bb.length;bd<bg;bd++){a9=bb[bd];if(bf.format!==THREE.RGBAFormat&&bf.format!==THREE.RGBFormat){if(a3.getCompressedTextureFormats().indexOf(a7)>-1){a3.compressedTexImage2D(aJ.TEXTURE_2D,bd,a7,a9.width,a9.height,0,a9.data)}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()")}}else{a3.texImage2D(aJ.TEXTURE_2D,bd,a7,a9.width,a9.height,0,a7,ba,a9.data)}}}else{if(bb.length>0&&be){for(var bd=0,bg=bb.length;bd<bg;bd++){a9=bb[bd];a3.texImage2D(aJ.TEXTURE_2D,bd,a7,a7,ba,a9)}bf.generateMipmaps=false}else{a3.texImage2D(aJ.TEXTURE_2D,0,a7,a7,ba,bf.image)}}}if(bf.generateMipmaps&&be){aJ.generateMipmap(aJ.TEXTURE_2D)}a8.__version=bf.version;if(bf.onUpdate){bf.onUpdate(bf)}}this.setTexture=function(a7,ba){var a8=ak.get(a7);if(a7.version>0&&a8.__version!==a7.version){var a9=a7.image;if(a9===undefined){console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",a7);return}if(a9.complete===false){console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",a7);return}J(a8,a7,ba);return}a3.activeTexture(aJ.TEXTURE0+ba);a3.bindTexture(aJ.TEXTURE_2D,a8.__webglTexture)};function D(a9,bb){if(a9.width>bb||a9.height>bb){var ba=bb/Math.max(a9.width,a9.height);var a7=document.createElement("canvas");a7.width=Math.floor(a9.width*ba);a7.height=Math.floor(a9.height*ba);var a8=a7.getContext("2d");a8.drawImage(a9,0,0,a9.width,a9.height,0,0,a7.width,a7.height);console.warn("THREE.WebGLRenderer: image is too big ("+a9.width+"x"+a9.height+"). Resized to "+a7.width+"x"+a7.height,a9);return a7}return a9}function aa(a7){return THREE.Math.isPowerOfTwo(a7.width)&&THREE.Math.isPowerOfTwo(a7.height)}function b(a7){if(a7.wrapS!==THREE.ClampToEdgeWrapping||a7.wrapT!==THREE.ClampToEdgeWrapping){return true}if(a7.minFilter!==THREE.NearestFilter&&a7.minFilter!==THREE.LinearFilter){return true}return false}function v(a9){if(a9 instanceof HTMLImageElement||a9 instanceof HTMLCanvasElement){var a7=document.createElement("canvas");a7.width=THREE.Math.nearestPowerOfTwo(a9.width);a7.height=THREE.Math.nearestPowerOfTwo(a9.height);var a8=a7.getContext("2d");a8.drawImage(a9,0,0,a7.width,a7.height);console.warn("THREE.WebGLRenderer: image is not power of two ("+a9.width+"x"+a9.height+"). Resized to "+a7.width+"x"+a7.height,a9);return a7}return a9}function p(bk,bl){var a9=ak.get(bk);if(bk.image.length===6){if(bk.version>0&&a9.__version!==bk.version){if(!a9.__image__webglTextureCube){bk.addEventListener("dispose",ab);a9.__image__webglTextureCube=aJ.createTexture();aq.textures++}a3.activeTexture(aJ.TEXTURE0+bl);a3.bindTexture(aJ.TEXTURE_CUBE_MAP,a9.__image__webglTextureCube);aJ.pixelStorei(aJ.UNPACK_FLIP_Y_WEBGL,bk.flipY);var bc=bk instanceof THREE.CompressedTexture;var bb=bk.image[0] instanceof THREE.DataTexture;var a7=[];for(var bi=0;bi<6;bi++){if(P.autoScaleCubemaps&&!bc&&!bb){a7[bi]=D(bk.image[bi],af.maxCubemapSize)}else{a7[bi]=bb?bk.image[bi].image:bk.image[bi]}}var bf=a7[0],bj=aa(bf),a8=ao(bk.format),bd=ao(bk.type);X(aJ.TEXTURE_CUBE_MAP,bk,bj);for(var bi=0;bi<6;bi++){if(!bc){if(bb){a3.texImage2D(aJ.TEXTURE_CUBE_MAP_POSITIVE_X+bi,0,a8,a7[bi].width,a7[bi].height,0,a8,bd,a7[bi].data)}else{a3.texImage2D(aJ.TEXTURE_CUBE_MAP_POSITIVE_X+bi,0,a8,a8,bd,a7[bi])}}else{var ba,be=a7[bi].mipmaps;for(var bg=0,bh=be.length;bg<bh;bg++){ba=be[bg];if(bk.format!==THREE.RGBAFormat&&bk.format!==THREE.RGBFormat){if(a3.getCompressedTextureFormats().indexOf(a8)>-1){a3.compressedTexImage2D(aJ.TEXTURE_CUBE_MAP_POSITIVE_X+bi,bg,a8,ba.width,ba.height,0,ba.data)}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()")}}else{a3.texImage2D(aJ.TEXTURE_CUBE_MAP_POSITIVE_X+bi,bg,a8,ba.width,ba.height,0,a8,bd,ba.data)}}}}if(bk.generateMipmaps&&bj){aJ.generateMipmap(aJ.TEXTURE_CUBE_MAP)}a9.__version=bk.version;if(bk.onUpdate){bk.onUpdate(bk)}}else{a3.activeTexture(aJ.TEXTURE0+bl);a3.bindTexture(aJ.TEXTURE_CUBE_MAP,a9.__image__webglTextureCube)}}}function aZ(a7,a8){a3.activeTexture(aJ.TEXTURE0+a8);a3.bindTexture(aJ.TEXTURE_CUBE_MAP,ak.get(a7).__webglTexture)}function n(a9,a8,a7){aJ.bindFramebuffer(aJ.FRAMEBUFFER,a9);aJ.framebufferTexture2D(aJ.FRAMEBUFFER,aJ.COLOR_ATTACHMENT0,a7,ak.get(a8.texture).__webglTexture,0)}function u(a7,a8){aJ.bindRenderbuffer(aJ.RENDERBUFFER,a7);if(a8.depthBuffer&&!a8.stencilBuffer){aJ.renderbufferStorage(aJ.RENDERBUFFER,aJ.DEPTH_COMPONENT16,a8.width,a8.height);aJ.framebufferRenderbuffer(aJ.FRAMEBUFFER,aJ.DEPTH_ATTACHMENT,aJ.RENDERBUFFER,a7)}else{if(a8.depthBuffer&&a8.stencilBuffer){aJ.renderbufferStorage(aJ.RENDERBUFFER,aJ.DEPTH_STENCIL,a8.width,a8.height);aJ.framebufferRenderbuffer(aJ.FRAMEBUFFER,aJ.DEPTH_STENCIL_ATTACHMENT,aJ.RENDERBUFFER,a7)}else{aJ.renderbufferStorage(aJ.RENDERBUFFER,aJ.RGBA4,a8.width,a8.height)}}}this.setRenderTarget=function(bc){var bf=(bc instanceof THREE.WebGLRenderTargetCube);if(bc&&ak.get(bc).__webglFramebuffer===undefined){var bd=ak.get(bc);var a9=ak.get(bc.texture);if(bc.depthBuffer===undefined){bc.depthBuffer=true}if(bc.stencilBuffer===undefined){bc.stencilBuffer=true}bc.addEventListener("dispose",a0);a9.__webglTexture=aJ.createTexture();aq.textures++;var bg=aa(bc),a8=ao(bc.texture.format),ba=ao(bc.texture.type);if(bf){bd.__webglFramebuffer=[];bd.__webglRenderbuffer=[];a3.bindTexture(aJ.TEXTURE_CUBE_MAP,a9.__webglTexture);X(aJ.TEXTURE_CUBE_MAP,bc.texture,bg);for(var bb=0;bb<6;bb++){bd.__webglFramebuffer[bb]=aJ.createFramebuffer();bd.__webglRenderbuffer[bb]=aJ.createRenderbuffer();a3.texImage2D(aJ.TEXTURE_CUBE_MAP_POSITIVE_X+bb,0,a8,bc.width,bc.height,0,a8,ba,null);n(bd.__webglFramebuffer[bb],bc,aJ.TEXTURE_CUBE_MAP_POSITIVE_X+bb);u(bd.__webglRenderbuffer[bb],bc)}if(bc.texture.generateMipmaps&&bg){aJ.generateMipmap(aJ.TEXTURE_CUBE_MAP)}}else{bd.__webglFramebuffer=aJ.createFramebuffer();if(bc.shareDepthFrom){bd.__webglRenderbuffer=bc.shareDepthFrom.__webglRenderbuffer}else{bd.__webglRenderbuffer=aJ.createRenderbuffer()}a3.bindTexture(aJ.TEXTURE_2D,a9.__webglTexture);X(aJ.TEXTURE_2D,bc.texture,bg);a3.texImage2D(aJ.TEXTURE_2D,0,a8,bc.width,bc.height,0,a8,ba,null);n(bd.__webglFramebuffer,bc,aJ.TEXTURE_2D);if(bc.shareDepthFrom){if(bc.depthBuffer&&!bc.stencilBuffer){aJ.framebufferRenderbuffer(aJ.FRAMEBUFFER,aJ.DEPTH_ATTACHMENT,aJ.RENDERBUFFER,bd.__webglRenderbuffer)}else{if(bc.depthBuffer&&bc.stencilBuffer){aJ.framebufferRenderbuffer(aJ.FRAMEBUFFER,aJ.DEPTH_STENCIL_ATTACHMENT,aJ.RENDERBUFFER,bd.__webglRenderbuffer)}}}else{u(bd.__webglRenderbuffer,bc)}if(bc.texture.generateMipmaps&&bg){aJ.generateMipmap(aJ.TEXTURE_2D)}}if(bf){a3.bindTexture(aJ.TEXTURE_CUBE_MAP,null)}else{a3.bindTexture(aJ.TEXTURE_2D,null)}aJ.bindRenderbuffer(aJ.RENDERBUFFER,null);aJ.bindFramebuffer(aJ.FRAMEBUFFER,null)}var bi,a7,bj,bh,be;if(bc){var bd=ak.get(bc);if(bf){bi=bd.__webglFramebuffer[bc.activeCubeFace]}else{bi=bd.__webglFramebuffer}a7=bc.width;bj=bc.height;bh=0;be=0}else{bi=null;a7=aR;bj=R;bh=e;be=c}if(bi!==aX){aJ.bindFramebuffer(aJ.FRAMEBUFFER,bi);aJ.viewport(bh,be,a7,bj);aX=bi}if(bf){var a9=ak.get(bc.texture);aJ.framebufferTexture2D(aJ.FRAMEBUFFER,aJ.COLOR_ATTACHMENT0,aJ.TEXTURE_CUBE_MAP_POSITIVE_X+bc.activeCubeFace,a9.__webglTexture,0)}Z=a7;aB=bj};this.readRenderTargetPixels=function(a9,be,bc,a7,bf,a8){if(a9 instanceof THREE.WebGLRenderTarget===false){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var bd=ak.get(a9).__webglFramebuffer;if(bd){var bb=false;if(bd!==aX){aJ.bindFramebuffer(aJ.FRAMEBUFFER,bd);bb=true}try{var ba=a9.texture;if(ba.format!==THREE.RGBAFormat&&ao(ba.format)!==aJ.getParameter(aJ.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(ba.type!==THREE.UnsignedByteType&&ao(ba.type)!==aJ.getParameter(aJ.IMPLEMENTATION_COLOR_READ_TYPE)&&!(ba.type===THREE.FloatType&&d.get("WEBGL_color_buffer_float"))&&!(ba.type===THREE.HalfFloatType&&d.get("EXT_color_buffer_half_float"))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}if(aJ.checkFramebufferStatus(aJ.FRAMEBUFFER)===aJ.FRAMEBUFFER_COMPLETE){aJ.readPixels(be,bc,a7,bf,ao(ba.format),ao(ba.type),a8)}else{console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}}finally{if(bb){aJ.bindFramebuffer(aJ.FRAMEBUFFER,aX)}}}};function f(a8){var a9=a8 instanceof THREE.WebGLRenderTargetCube?aJ.TEXTURE_CUBE_MAP:aJ.TEXTURE_2D;var a7=ak.get(a8.texture).__webglTexture;a3.bindTexture(a9,a7);aJ.generateMipmap(a9);a3.bindTexture(a9,null)}function ap(a7){if(a7===THREE.NearestFilter||a7===THREE.NearestMipMapNearestFilter||a7===THREE.NearestMipMapLinearFilter){return aJ.NEAREST}return aJ.LINEAR}function ao(a7){var a8;if(a7===THREE.RepeatWrapping){return aJ.REPEAT}if(a7===THREE.ClampToEdgeWrapping){return aJ.CLAMP_TO_EDGE}if(a7===THREE.MirroredRepeatWrapping){return aJ.MIRRORED_REPEAT}if(a7===THREE.NearestFilter){return aJ.NEAREST}if(a7===THREE.NearestMipMapNearestFilter){return aJ.NEAREST_MIPMAP_NEAREST}if(a7===THREE.NearestMipMapLinearFilter){return aJ.NEAREST_MIPMAP_LINEAR}if(a7===THREE.LinearFilter){return aJ.LINEAR}if(a7===THREE.LinearMipMapNearestFilter){return aJ.LINEAR_MIPMAP_NEAREST}if(a7===THREE.LinearMipMapLinearFilter){return aJ.LINEAR_MIPMAP_LINEAR}if(a7===THREE.UnsignedByteType){return aJ.UNSIGNED_BYTE}if(a7===THREE.UnsignedShort4444Type){return aJ.UNSIGNED_SHORT_4_4_4_4}if(a7===THREE.UnsignedShort5551Type){return aJ.UNSIGNED_SHORT_5_5_5_1}if(a7===THREE.UnsignedShort565Type){return aJ.UNSIGNED_SHORT_5_6_5}if(a7===THREE.ByteType){return aJ.BYTE}if(a7===THREE.ShortType){return aJ.SHORT}if(a7===THREE.UnsignedShortType){return aJ.UNSIGNED_SHORT}if(a7===THREE.IntType){return aJ.INT}if(a7===THREE.UnsignedIntType){return aJ.UNSIGNED_INT}if(a7===THREE.FloatType){return aJ.FLOAT}a8=d.get("OES_texture_half_float");if(a8!==null){if(a7===THREE.HalfFloatType){return a8.HALF_FLOAT_OES}}if(a7===THREE.AlphaFormat){return aJ.ALPHA}if(a7===THREE.RGBFormat){return aJ.RGB}if(a7===THREE.RGBAFormat){return aJ.RGBA}if(a7===THREE.LuminanceFormat){return aJ.LUMINANCE}if(a7===THREE.LuminanceAlphaFormat){return aJ.LUMINANCE_ALPHA}if(a7===THREE.AddEquation){return aJ.FUNC_ADD}if(a7===THREE.SubtractEquation){return aJ.FUNC_SUBTRACT}if(a7===THREE.ReverseSubtractEquation){return aJ.FUNC_REVERSE_SUBTRACT}if(a7===THREE.ZeroFactor){return aJ.ZERO}if(a7===THREE.OneFactor){return aJ.ONE}if(a7===THREE.SrcColorFactor){return aJ.SRC_COLOR}if(a7===THREE.OneMinusSrcColorFactor){return aJ.ONE_MINUS_SRC_COLOR}if(a7===THREE.SrcAlphaFactor){return aJ.SRC_ALPHA}if(a7===THREE.OneMinusSrcAlphaFactor){return aJ.ONE_MINUS_SRC_ALPHA}if(a7===THREE.DstAlphaFactor){return aJ.DST_ALPHA}if(a7===THREE.OneMinusDstAlphaFactor){return aJ.ONE_MINUS_DST_ALPHA}if(a7===THREE.DstColorFactor){return aJ.DST_COLOR}if(a7===THREE.OneMinusDstColorFactor){return aJ.ONE_MINUS_DST_COLOR}if(a7===THREE.SrcAlphaSaturateFactor){return aJ.SRC_ALPHA_SATURATE}a8=d.get("WEBGL_compressed_texture_s3tc");if(a8!==null){if(a7===THREE.RGB_S3TC_DXT1_Format){return a8.COMPRESSED_RGB_S3TC_DXT1_EXT}if(a7===THREE.RGBA_S3TC_DXT1_Format){return a8.COMPRESSED_RGBA_S3TC_DXT1_EXT}if(a7===THREE.RGBA_S3TC_DXT3_Format){return a8.COMPRESSED_RGBA_S3TC_DXT3_EXT}if(a7===THREE.RGBA_S3TC_DXT5_Format){return a8.COMPRESSED_RGBA_S3TC_DXT5_EXT}}a8=d.get("WEBGL_compressed_texture_pvrtc");if(a8!==null){if(a7===THREE.RGB_PVRTC_4BPPV1_Format){return a8.COMPRESSED_RGB_PVRTC_4BPPV1_IMG}if(a7===THREE.RGB_PVRTC_2BPPV1_Format){return a8.COMPRESSED_RGB_PVRTC_2BPPV1_IMG}if(a7===THREE.RGBA_PVRTC_4BPPV1_Format){return a8.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG}if(a7===THREE.RGBA_PVRTC_2BPPV1_Format){return a8.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}}a8=d.get("EXT_blend_minmax");if(a8!==null){if(a7===THREE.MinEquation){return a8.MIN_EXT}if(a7===THREE.MaxEquation){return a8.MAX_EXT}}return 0}this.supportsFloatTextures=function(){console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");return d.get("OES_texture_float")};this.supportsHalfFloatTextures=function(){console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");return d.get("OES_texture_half_float")};this.supportsStandardDerivatives=function(){console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");return d.get("OES_standard_derivatives")};this.supportsCompressedTextureS3TC=function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");return d.get("WEBGL_compressed_texture_s3tc")};this.supportsCompressedTexturePVRTC=function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");return d.get("WEBGL_compressed_texture_pvrtc")};this.supportsBlendMinMax=function(){console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");return d.get("EXT_blend_minmax")};this.supportsVertexTextures=function(){return af.vertexTextures};this.supportsInstancedArrays=function(){console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");return d.get("ANGLE_instanced_arrays")};this.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};Object.defineProperties(this,{shadowMapEnabled:{get:function(){return A.enabled},set:function(a7){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");A.enabled=a7}},shadowMapType:{get:function(){return A.type},set:function(a7){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");A.type=a7}},shadowMapCullFace:{get:function(){return A.cullFace},set:function(a7){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.");A.cullFace=a7}},shadowMapDebug:{get:function(){return A.debug},set:function(a7){console.warn("THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.");A.debug=a7}}})};THREE.WebGLRenderTarget=function(c,a,b){this.uuid=THREE.Math.generateUUID();this.width=c;this.height=a;b=b||{};if(b.minFilter===undefined){b.minFilter=THREE.LinearFilter}this.texture=new THREE.Texture(undefined,undefined,b.wrapS,b.wrapT,b.magFilter,b.minFilter,b.format,b.type,b.anisotropy);this.depthBuffer=b.depthBuffer!==undefined?b.depthBuffer:true;this.stencilBuffer=b.stencilBuffer!==undefined?b.stencilBuffer:true;this.shareDepthFrom=b.shareDepthFrom!==undefined?b.shareDepthFrom:null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,get wrapS(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set wrapS(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");this.texture.wrapS=a},get wrapT(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set wrapT(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=a},get magFilter(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set magFilter(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=a},get minFilter(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");return this.texture.minFilter},set minFilter(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");this.texture.minFilter=a},get anisotropy(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");return this.texture.anisotropy},set anisotropy(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=a},get offset(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");return this.texture.offset},set offset(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");this.texture.offset=a},get repeat(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");return this.texture.repeat},set repeat(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");this.texture.repeat=a},get format(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");return this.texture.format},set format(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=a},get type(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},set type(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=a},get generateMipmaps(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},set generateMipmaps(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=a},setSize:function(b,a){if(this.width!==b||this.height!==a){this.width=b;this.height=a;this.dispose()}},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.width=a.width;this.height=a.height;this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.shareDepthFrom=a.shareDepthFrom;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(c,a,b){THREE.WebGLRenderTarget.call(this,c,a,b);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.WebGLBufferRenderer=function(c,e,a){var g;function b(h){g=h}function d(i,h){c.drawArrays(g,i,h);a.calls++;a.vertices+=h;if(g===c.TRIANGLES){a.faces+=h/3}}function f(i){var j=e.get("ANGLE_instanced_arrays");if(j===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}var h=i.attributes.position;if(h instanceof THREE.InterleavedBufferAttribute){j.drawArraysInstancedANGLE(g,0,h.data.count,i.maxInstancedCount)}else{j.drawArraysInstancedANGLE(g,0,h.count,i.maxInstancedCount)}}this.setMode=b;this.render=d;this.renderInstances=f};THREE.WebGLIndexedBufferRenderer=function(d,h,e){var g;function b(k){g=k}var i,j;function a(k){if(k.array instanceof Uint32Array&&h.get("OES_element_index_uint")){i=d.UNSIGNED_INT;j=4}else{i=d.UNSIGNED_SHORT;j=2}}function c(l,k){d.drawElements(g,k,i,l*j);e.calls++;e.vertices+=k;if(g===d.TRIANGLES){e.faces+=k/3}}function f(l){var m=h.get("ANGLE_instanced_arrays");if(m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}var k=l.index;m.drawElementsInstancedANGLE(g,k.array.length,i,0,l.maxInstancedCount)}this.setMode=b;this.setIndex=a;this.render=c;this.renderInstances=f};THREE.WebGLExtensions=function(b){var a={};this.get=function(c){if(a[c]!==undefined){return a[c]}var d;switch(c){case"EXT_texture_filter_anisotropic":d=b.getExtension("EXT_texture_filter_anisotropic")||b.getExtension("MOZ_EXT_texture_filter_anisotropic")||b.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":d=b.getExtension("WEBGL_compressed_texture_s3tc")||b.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||b.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":d=b.getExtension("WEBGL_compressed_texture_pvrtc")||b.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=b.getExtension(c)}if(d===null){console.warn("THREE.WebGLRenderer: "+c+" extension not supported.")}a[c]=d;return d}};THREE.WebGLCapabilities=function(e,c,d){function a(f){if(f==="highp"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0){return"highp"}f="mediump"}if(f==="mediump"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0){return"mediump"}}return"lowp"}this.getMaxPrecision=a;this.precision=d.precision!==undefined?d.precision:"highp",this.logarithmicDepthBuffer=d.logarithmicDepthBuffer!==undefined?d.logarithmicDepthBuffer:false;this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS);this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS);this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE);this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE);this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS);this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS);this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS);this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS);this.vertexTextures=this.maxVertexTextures>0;this.floatFragmentTextures=!!c.get("OES_texture_float");this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;var b=a(this.precision);if(b!==this.precision){console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",b,"instead.");this.precision=b}if(this.logarithmicDepthBuffer){this.logarithmicDepthBuffer=!!c.get("EXT_frag_depth")}};THREE.WebGLGeometries=function(g,h,d){var c={};function e(k){var m=k.geometry;if(c[m.id]!==undefined){return c[m.id]}m.addEventListener("dispose",a);var l;if(m instanceof THREE.BufferGeometry){l=m}else{if(m instanceof THREE.Geometry){if(m._bufferGeometry===undefined){m._bufferGeometry=new THREE.BufferGeometry().setFromObject(k)}l=m._bufferGeometry}}c[m.id]=l;d.memory.geometries++;return l}function a(k){var n=k.target;var m=c[n.id];i(m.attributes);n.removeEventListener("dispose",a);delete c[n.id];var l=h.get(n);if(l.wireframe){b(l.wireframe)}d.memory.geometries--}function f(k){if(k instanceof THREE.InterleavedBufferAttribute){return h.get(k.data).__webglBuffer}return h.get(k).__webglBuffer}function b(l){var k=f(l);if(k!==undefined){g.deleteBuffer(k);j(l)}}function i(k){for(var l in k){b(k[l])}}function j(k){if(k instanceof THREE.InterleavedBufferAttribute){h["delete"](k.data)}else{h["delete"](k)}}this.get=e};THREE.WebGLObjects=function(f,h,c){var b=new THREE.WebGLGeometries(f,h,c);function e(o){var u=b.get(o);if(o.geometry instanceof THREE.Geometry){u.updateFromObject(o)}var s=u.index;var p=u.attributes;if(s!==null){k(s,f.ELEMENT_ARRAY_BUFFER)}for(var m in p){k(p[m],f.ARRAY_BUFFER)}var r=u.morphAttributes;for(var m in r){var t=r[m];for(var q=0,n=t.length;q<n;q++){k(t[q],f.ARRAY_BUFFER)}}return u}function k(n,l){var o=(n instanceof THREE.InterleavedBufferAttribute)?n.data:n;var m=h.get(o);if(m.__webglBuffer===undefined){i(m,o,l)}else{if(m.version!==o.version){j(m,o,l)}}}function i(m,o,l){m.__webglBuffer=f.createBuffer();f.bindBuffer(l,m.__webglBuffer);var n=o.dynamic?f.DYNAMIC_DRAW:f.STATIC_DRAW;f.bufferData(l,o.array,n);m.version=o.version}function j(m,n,l){f.bindBuffer(l,m.__webglBuffer);if(n.dynamic===false||n.updateRange.count===-1){f.bufferSubData(l,0,n.array)}else{if(n.updateRange.count===0){console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.")}else{f.bufferSubData(l,n.updateRange.offset*n.array.BYTES_PER_ELEMENT,n.array.subarray(n.updateRange.offset,n.updateRange.offset+n.updateRange.count));n.updateRange.count=0}}m.version=n.version}function d(l){if(l instanceof THREE.InterleavedBufferAttribute){return h.get(l.data).__webglBuffer}return h.get(l).__webglBuffer}function a(A){var D=h.get(A);if(D.wireframe!==undefined){return D.wireframe}var E=[];var s=A.index;var o=A.attributes;var r=o.position;if(s!==null){var p={};var t=s.array;for(var q=0,n=t.length;q<n;q+=3){var B=t[q+0];var v=t[q+1];var u=t[q+2];if(g(p,B,v)){E.push(B,v)}if(g(p,v,u)){E.push(v,u)}if(g(p,u,B)){E.push(u,B)}}}else{var t=o.position.array;for(var q=0,n=(t.length/3)-1;q<n;q+=3){var B=q+0;var v=q+1;var u=q+2;E.push(B,v,v,u,u,B)}}var C=r.count>65535?Uint32Array:Uint16Array;var m=new THREE.BufferAttribute(new C(E),1);k(m,f.ELEMENT_ARRAY_BUFFER);D.wireframe=m;return m}function g(n,m,l){if(m>l){var o=m;m=l;l=o}var p=n[m];if(p===undefined){n[m]=[l];return true}else{if(p.indexOf(l)===-1){p.push(l);return true}}return false}this.getAttributeBuffer=d;this.getWireframeAttribute=a;this.update=e};THREE.WebGLProgram=(function(){var a=0;function c(h){var j=[];for(var g in h){var i=h[g];if(i===false){continue}j.push("#define "+g+" "+i)}return j.join("\n")}function d(m,l,p){var r={};var h=m.getProgramParameter(l,m.ACTIVE_UNIFORMS);for(var k=0;k<h;k++){var j=m.getActiveUniform(l,k);var g=j.name;var q=m.getUniformLocation(l,g);var o=g.lastIndexOf("[0]");if(o!==-1&&o===g.length-3){r[g.substr(0,o)]=q}r[g]=q}return r}function e(o,j,g){var h={};var p=o.getProgramParameter(j,o.ACTIVE_ATTRIBUTES);for(var l=0;l<p;l++){var m=o.getActiveAttrib(j,l);var k=m.name;h[k]=o.getAttribLocation(j,k)}return h}function f(g){return g!==""}return function b(C,h,A,q){var I=C.context;var H=A.defines;var m=A.__webglShader.vertexShader;var g=A.__webglShader.fragmentShader;var j="SHADOWMAP_TYPE_BASIC";if(q.shadowMapType===THREE.PCFShadowMap){j="SHADOWMAP_TYPE_PCF"}else{if(q.shadowMapType===THREE.PCFSoftShadowMap){j="SHADOWMAP_TYPE_PCF_SOFT"}}var K="ENVMAP_TYPE_CUBE";var E="ENVMAP_MODE_REFLECTION";var i="ENVMAP_BLENDING_MULTIPLY";if(q.envMap){switch(A.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:K="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:K="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:K="ENVMAP_TYPE_SPHERE";break}switch(A.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:E="ENVMAP_MODE_REFRACTION";break}switch(A.combine){case THREE.MultiplyOperation:i="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:i="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:i="ENVMAP_BLENDING_ADD";break}}var o=(C.gammaFactor>0)?C.gammaFactor:1;var l=c(H);var s=I.createProgram();var r,D;if(A instanceof THREE.RawShaderMaterial){r="";D=""}else{r=["precision "+q.precision+" float;","precision "+q.precision+" int;","#define SHADER_NAME "+A.__webglShader.name,l,q.supportsVertexTextures?"#define VERTEX_TEXTURES":"",C.gammaInput?"#define GAMMA_INPUT":"",C.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+o,"#define MAX_DIR_LIGHTS "+q.maxDirLights,"#define MAX_POINT_LIGHTS "+q.maxPointLights,"#define MAX_SPOT_LIGHTS "+q.maxSpotLights,"#define MAX_HEMI_LIGHTS "+q.maxHemiLights,"#define MAX_SHADOWS "+q.maxShadows,"#define MAX_BONES "+q.maxBones,q.map?"#define USE_MAP":"",q.envMap?"#define USE_ENVMAP":"",q.envMap?"#define "+E:"",q.lightMap?"#define USE_LIGHTMAP":"",q.aoMap?"#define USE_AOMAP":"",q.emissiveMap?"#define USE_EMISSIVEMAP":"",q.bumpMap?"#define USE_BUMPMAP":"",q.normalMap?"#define USE_NORMALMAP":"",q.displacementMap&&q.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",q.specularMap?"#define USE_SPECULARMAP":"",q.alphaMap?"#define USE_ALPHAMAP":"",q.vertexColors?"#define USE_COLOR":"",q.flatShading?"#define FLAT_SHADED":"",q.skinning?"#define USE_SKINNING":"",q.useVertexTexture?"#define BONE_TEXTURE":"",q.morphTargets?"#define USE_MORPHTARGETS":"",q.morphNormals&&q.flatShading===false?"#define USE_MORPHNORMALS":"",q.doubleSided?"#define DOUBLE_SIDED":"",q.flipSided?"#define FLIP_SIDED":"",q.shadowMapEnabled?"#define USE_SHADOWMAP":"",q.shadowMapEnabled?"#define "+j:"",q.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",q.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",q.sizeAttenuation?"#define USE_SIZEATTENUATION":"",q.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",q.logarithmicDepthBuffer&&C.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR"," attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS"," attribute vec3 morphTarget0;"," attribute vec3 morphTarget1;"," attribute vec3 morphTarget2;"," attribute vec3 morphTarget3;"," #ifdef USE_MORPHNORMALS","   attribute vec3 morphNormal0;","   attribute vec3 morphNormal1;","   attribute vec3 morphNormal2;","   attribute vec3 morphNormal3;"," #else","   attribute vec3 morphTarget4;","   attribute vec3 morphTarget5;","   attribute vec3 morphTarget6;","   attribute vec3 morphTarget7;"," #endif","#endif","#ifdef USE_SKINNING"," attribute vec4 skinIndex;"," attribute vec4 skinWeight;","#endif","\n"].filter(f).join("\n");D=[q.bumpMap||q.normalMap||q.flatShading||A.derivatives?"#extension GL_OES_standard_derivatives : enable":"",q.logarithmicDepthBuffer&&C.extensions.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"","precision "+q.precision+" float;","precision "+q.precision+" int;","#define SHADER_NAME "+A.__webglShader.name,l,"#define MAX_DIR_LIGHTS "+q.maxDirLights,"#define MAX_POINT_LIGHTS "+q.maxPointLights,"#define MAX_SPOT_LIGHTS "+q.maxSpotLights,"#define MAX_HEMI_LIGHTS "+q.maxHemiLights,"#define MAX_SHADOWS "+q.maxShadows,q.alphaTest?"#define ALPHATEST "+q.alphaTest:"",C.gammaInput?"#define GAMMA_INPUT":"",C.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+o,(q.useFog&&q.fog)?"#define USE_FOG":"",(q.useFog&&q.fogExp)?"#define FOG_EXP2":"",q.map?"#define USE_MAP":"",q.envMap?"#define USE_ENVMAP":"",q.envMap?"#define "+K:"",q.envMap?"#define "+E:"",q.envMap?"#define "+i:"",q.lightMap?"#define USE_LIGHTMAP":"",q.aoMap?"#define USE_AOMAP":"",q.emissiveMap?"#define USE_EMISSIVEMAP":"",q.bumpMap?"#define USE_BUMPMAP":"",q.normalMap?"#define USE_NORMALMAP":"",q.specularMap?"#define USE_SPECULARMAP":"",q.alphaMap?"#define USE_ALPHAMAP":"",q.vertexColors?"#define USE_COLOR":"",q.flatShading?"#define FLAT_SHADED":"",q.metal?"#define METAL":"",q.doubleSided?"#define DOUBLE_SIDED":"",q.flipSided?"#define FLIP_SIDED":"",q.shadowMapEnabled?"#define USE_SHADOWMAP":"",q.shadowMapEnabled?"#define "+j:"",q.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",q.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",q.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",q.logarithmicDepthBuffer&&C.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","\n"].filter(f).join("\n")}var J=r+m;var G=D+g;var n=THREE.WebGLShader(I,I.VERTEX_SHADER,J);var F=THREE.WebGLShader(I,I.FRAGMENT_SHADER,G);I.attachShader(s,n);I.attachShader(s,F);if(A.index0AttributeName!==undefined){I.bindAttribLocation(s,0,A.index0AttributeName)}else{if(q.morphTargets===true){I.bindAttribLocation(s,0,"position")}}I.linkProgram(s);var k=I.getProgramInfoLog(s);var t=I.getShaderInfoLog(n);var L=I.getShaderInfoLog(F);var v=true;var B=true;if(I.getProgramParameter(s,I.LINK_STATUS)===false){v=false;console.error("THREE.WebGLProgram: shader error: ",I.getError(),"gl.VALIDATE_STATUS",I.getProgramParameter(s,I.VALIDATE_STATUS),"gl.getProgramInfoLog",k,t,L)}else{if(k!==""){console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",k)}else{if(t===""||L===""){B=false}}}if(B){this.diagnostics={runnable:v,material:A,programLog:k,vertexShader:{log:t,prefix:r},fragmentShader:{log:L,prefix:D}}}I.deleteShader(n);I.deleteShader(F);var p;this.getUniforms=function(){if(p===undefined){p=d(I,s)}return p};var u;this.getAttributes=function(){if(u===undefined){u=e(I,s)}return u};this.destroy=function(){I.deleteProgram(s);this.program=undefined};Object.defineProperties(this,{uniforms:{get:function(){console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms().");return this.getUniforms()}},attributes:{get:function(){console.warn("THREE.WebGLProgram: .attributes is now .getAttributes().");return this.getAttributes()}}});this.id=a++;this.code=h;this.usedTimes=1;this.program=s;this.vertexShader=n;this.fragmentShader=F;return this}})();THREE.WebGLPrograms=function(h,a){var g=[];var f={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"};var d=["precision","supportsVertexTextures","map","envMap","envMapMode","lightMap","aoMap","emissiveMap","bumpMap","normalMap","displacementMap","specularMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","shadowMapEnabled","pointLightShadows","shadowMapType","shadowMapDebug","alphaTest","metal","doubleSided","flipSided"];function e(l){if(a.floatVertexTextures&&l&&l.skeleton&&l.skeleton.useVertexTexture){return 1024}else{var j=a.maxVertexUniforms;var k=Math.floor((j-20)/4);var i=k;if(l!==undefined&&l instanceof THREE.SkinnedMesh){i=Math.min(l.skeleton.bones.length,i);if(i<l.skeleton.bones.length){console.warn("WebGLRenderer: too many bones - "+l.skeleton.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)")}}return i}}function c(k){var m=0;var q=0;var o=0;var p=0;for(var j=0,n=k.length;j<n;j++){var i=k[j];if(i.visible===false){continue}if(i instanceof THREE.DirectionalLight){m++}if(i instanceof THREE.PointLight){q++}if(i instanceof THREE.SpotLight){o++}if(i instanceof THREE.HemisphereLight){p++}}return{directional:m,point:q,spot:o,hemi:p}}function b(m){var n=0;var k=0;for(var j=0,o=m.length;j<o;j++){var i=m[j];if(!i.castShadow){continue}if(i instanceof THREE.SpotLight||i instanceof THREE.DirectionalLight){n++}if(i instanceof THREE.PointLight){n++;k++}}return{maxShadows:n,pointLightShadows:k}}this.getParameters=function(p,n,k,m){var q=f[p.type];var l=c(n);var j=b(n);var i=e(m);var o=h.getPrecision();if(p.precision!==null){o=a.getMaxPrecision(p.precision);if(o!==p.precision){console.warn("THREE.WebGLRenderer.initMaterial:",p.precision,"not supported, using",o,"instead.")}}var r={shaderID:q,precision:o,supportsVertexTextures:a.vertexTextures,map:!!p.map,envMap:!!p.envMap,envMapMode:p.envMap&&p.envMap.mapping,lightMap:!!p.lightMap,aoMap:!!p.aoMap,emissiveMap:!!p.emissiveMap,bumpMap:!!p.bumpMap,normalMap:!!p.normalMap,displacementMap:!!p.displacementMap,specularMap:!!p.specularMap,alphaMap:!!p.alphaMap,combine:p.combine,vertexColors:p.vertexColors,fog:k,useFog:p.fog,fogExp:k instanceof THREE.FogExp2,flatShading:p.shading===THREE.FlatShading,sizeAttenuation:p.sizeAttenuation,logarithmicDepthBuffer:a.logarithmicDepthBuffer,skinning:p.skinning,maxBones:i,useVertexTexture:a.floatVertexTextures&&m&&m.skeleton&&m.skeleton.useVertexTexture,morphTargets:p.morphTargets,morphNormals:p.morphNormals,maxMorphTargets:h.maxMorphTargets,maxMorphNormals:h.maxMorphNormals,maxDirLights:l.directional,maxPointLights:l.point,maxSpotLights:l.spot,maxHemiLights:l.hemi,maxShadows:j.maxShadows,pointLightShadows:j.pointLightShadows,shadowMapEnabled:h.shadowMap.enabled&&m.receiveShadow&&j.maxShadows>0,shadowMapType:h.shadowMap.type,shadowMapDebug:h.shadowMap.debug,alphaTest:p.alphaTest,metal:p.metal,doubleSided:p.side===THREE.DoubleSide,flipSided:p.side===THREE.BackSide};return r};this.getProgramCode=function(m,n){var o=[];if(n.shaderID){o.push(n.shaderID)}else{o.push(m.fragmentShader);o.push(m.vertexShader)}if(m.defines!==undefined){for(var k in m.defines){o.push(k);o.push(m.defines[k])}}for(var l=0;l<d.length;l++){var j=d[l];o.push(j);o.push(n[j])}return o.join()};this.acquireProgram=function(l,n,m){var i;for(var o=0,k=g.length;o<k;o++){var j=g[o];if(j.code===m){i=j;++i.usedTimes;break}}if(i===undefined){i=new THREE.WebGLProgram(h,m,l,n);g.push(i)}return i};this.releaseProgram=function(j){if(--j.usedTimes===0){var k=g.indexOf(j);g[k]=g[g.length-1];g.pop();j.destroy()}};this.programs=g};THREE.WebGLProperties=function(){var a={};this.get=function(b){var c=b.uuid;var d=a[c];if(d===undefined){d={};a[c]=d}return d};this["delete"]=function(b){delete a[b.uuid]};this.clear=function(){a={}}};THREE.WebGLShader=(function(){function b(d){var c=d.split("\n");for(var e=0;e<c.length;e++){c[e]=(e+1)+": "+c[e]}return c.join("\n")}return function a(f,d,c){var e=f.createShader(d);f.shaderSource(e,c);f.compileShader(e);if(f.getShaderParameter(e,f.COMPILE_STATUS)===false){console.error("THREE.WebGLShader: Shader couldn't compile.")}if(f.getShaderInfoLog(e)!==""){console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",d===f.VERTEX_SHADER?"vertex":"fragment",f.getShaderInfoLog(e),b(c))}return e}})();THREE.WebGLShadowMap=function(I,m,t){var n=I.context,F=I.state,H=new THREE.Frustum(),f=new THREE.Matrix4(),G=new THREE.Vector3(),J=new THREE.Vector3(),q=new THREE.Vector3(),o=new THREE.Vector3(),E=[],j=1,p=2,L=(j|p)+1,r=new Array(L),g=new Array(L);var C=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)];var B=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)];var e=[new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4()];var d=new THREE.Vector4();var A=THREE.ShaderLib.depthRGBA;var K=THREE.UniformsUtils.clone(A.uniforms);var h=THREE.ShaderLib.distanceRGBA;var l=THREE.UniformsUtils.clone(h.uniforms);for(var D=0;D!==L;++D){var k=(D&j)!==0;var v=(D&p)!==0;var c=new THREE.ShaderMaterial({uniforms:K,vertexShader:A.vertexShader,fragmentShader:A.fragmentShader,morphTargets:k,skinning:v});c._shadowPass=true;r[D]=c;var s=new THREE.ShaderMaterial({uniforms:l,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,morphTargets:k,skinning:v});s._shadowPass=true;g[D]=s}var b=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=THREE.PCFShadowMap;this.cullFace=THREE.CullFaceFront;this.render=function(an){var ac,U;if(b.enabled===false){return}if(b.autoUpdate===false&&b.needsUpdate===false){return}n.clearColor(1,1,1,1);F.disable(n.BLEND);F.enable(n.CULL_FACE);n.frontFace(n.CCW);n.cullFace(b.cullFace===THREE.CullFaceFront?n.FRONT:n.BACK);F.setDepthTest(true);I.getViewport(d);for(var aj=0,aa=m.length;aj<aa;aj++){var S=m[aj];if(S.castShadow===true){var W=S.shadow;var ap=W.camera;var M=W.mapSize;if(S instanceof THREE.PointLight){ac=6;U=true;var ad=M.x/4;var T=M.y/2;e[0].set(ad*2,T,ad,T);e[1].set(0,T,ad,T);e[2].set(ad*3,T,ad,T);e[3].set(ad,T,ad,T);e[4].set(ad*3,0,ad,T);e[5].set(ad,0,ad,T)}else{ac=1;U=false}if(W.map===null){var af=THREE.LinearFilter;if(b.type===THREE.PCFSoftShadowMap){af=THREE.NearestFilter}var ag={minFilter:af,magFilter:af,format:THREE.RGBAFormat};W.map=new THREE.WebGLRenderTarget(M.x,M.y,ag);W.matrix=new THREE.Matrix4();if(S instanceof THREE.SpotLight){ap.aspect=M.x/M.y}ap.updateProjectionMatrix()}var Q=W.map;var ao=W.matrix;o.setFromMatrixPosition(S.matrixWorld);ap.position.copy(o);I.setRenderTarget(Q);I.clear();for(var Z=0;Z<ac;Z++){if(U){q.copy(ap.position);q.add(C[Z]);ap.up.copy(B[Z]);ap.lookAt(q);var Y=e[Z];I.setViewport(Y.x,Y.y,Y.z,Y.w)}else{q.setFromMatrixPosition(S.target.matrixWorld);ap.lookAt(q)}ap.updateMatrixWorld();ap.matrixWorldInverse.getInverse(ap.matrixWorld);ao.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);ao.multiply(ap.projectionMatrix);ao.multiply(ap.matrixWorldInverse);f.multiplyMatrices(ap.projectionMatrix,ap.matrixWorldInverse);H.setFromMatrix(f);E.length=0;u(an,ap);for(var ai=0,ak=E.length;ai<ak;ai++){var aq=E[ai];var V=t.update(aq);var ab=aq.material;if(ab instanceof THREE.MeshFaceMaterial){var am=V.groups;var R=ab.materials;for(var ah=0,P=am.length;ah<P;ah++){var X=am[ah];var al=R[X.materialIndex];if(al.visible===true){var O=a(aq,al,U,o);I.renderBufferDirect(ap,m,null,V,O,aq,X)}}}else{var O=a(aq,ab,U,o);I.renderBufferDirect(ap,m,null,V,O,aq,null)}}}I.resetGLState()}}I.setViewport(d.x,d.y,d.z,d.w);var N=I.getClearColor(),ae=I.getClearAlpha();I.setClearColor(N,ae);F.enable(n.BLEND);if(b.cullFace===THREE.CullFaceFront){n.cullFace(n.BACK)}I.resetGLState();b.needsUpdate=false};function a(M,R,i,U){var T=M.geometry;var N=null;var S=r;var Q=M.customDepthMaterial;if(i){S=g;Q=M.customDistanceMaterial}if(!Q){var V=T.morphTargets!==undefined&&T.morphTargets.length>0&&R.morphTargets;var P=M instanceof THREE.SkinnedMesh&&R.skinning;var O=0;if(V){O|=j}if(P){O|=p}N=S[O]}else{N=Q}N.visible=R.visible;N.wireframe=R.wireframe;N.wireframeLinewidth=R.wireframeLinewidth;if(i&&N.uniforms.lightPos!==undefined){N.uniforms.lightPos.value.copy(U)}return N}function u(N,R){if(N.visible===false){return}if(N instanceof THREE.Mesh||N instanceof THREE.Line||N instanceof THREE.Points){if(N.castShadow&&(N.frustumCulled===false||H.intersectsObject(N)===true)){var Q=N.material;if(Q.visible===true){N.modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,N.matrixWorld);E.push(N)}}}var P=N.children;for(var O=0,M=P.length;O<M;O++){u(P[O],R)}}};THREE.WebGLState=function(o,u,t){var m=this;var C=new Uint8Array(16);var s=new Uint8Array(16);var a=new Uint8Array(16);var d={};var h=null;var D=null;var i=null;var f=null;var A=null;var c=null;var r=null;var B=null;var n=null;var g=null;var q=null;var v=null;var k=null;var b=null;var p=null;var j=o.getParameter(o.MAX_TEXTURE_IMAGE_UNITS);var e=undefined;var l={};this.init=function(){o.clearColor(0,0,0,1);o.clearDepth(1);o.clearStencil(0);this.enable(o.DEPTH_TEST);o.depthFunc(o.LEQUAL);o.frontFace(o.CCW);o.cullFace(o.BACK);this.enable(o.CULL_FACE);this.enable(o.BLEND);o.blendEquation(o.FUNC_ADD);o.blendFunc(o.SRC_ALPHA,o.ONE_MINUS_SRC_ALPHA)};this.initAttributes=function(){for(var F=0,E=C.length;F<E;F++){C[F]=0}};this.enableAttribute=function(E){C[E]=1;if(s[E]===0){o.enableVertexAttribArray(E);s[E]=1}if(a[E]!==0){var F=u.get("ANGLE_instanced_arrays");F.vertexAttribDivisorANGLE(E,0);a[E]=0}};this.enableAttributeAndDivisor=function(F,E,G){C[F]=1;if(s[F]===0){o.enableVertexAttribArray(F);s[F]=1}if(a[F]!==E){G.vertexAttribDivisorANGLE(F,E);a[F]=E}};this.disableUnusedAttributes=function(){for(var F=0,E=s.length;F<E;F++){if(s[F]!==C[F]){o.disableVertexAttribArray(F);s[F]=0}}};this.enable=function(E){if(d[E]!==true){o.enable(E);d[E]=true}};this.disable=function(E){if(d[E]!==false){o.disable(E);d[E]=false}};this.getCompressedTextureFormats=function(){if(h===null){h=[];if(u.get("WEBGL_compressed_texture_pvrtc")||u.get("WEBGL_compressed_texture_s3tc")){var E=o.getParameter(o.COMPRESSED_TEXTURE_FORMATS);for(var F=0;F<E.length;F++){h.push(E[F])}}}return h};this.setBlending=function(G,F,H,I,K,J,E){if(G!==D){if(G===THREE.NoBlending){this.disable(o.BLEND)}else{if(G===THREE.AdditiveBlending){this.enable(o.BLEND);o.blendEquation(o.FUNC_ADD);o.blendFunc(o.SRC_ALPHA,o.ONE)}else{if(G===THREE.SubtractiveBlending){this.enable(o.BLEND);o.blendEquation(o.FUNC_ADD);o.blendFunc(o.ZERO,o.ONE_MINUS_SRC_COLOR)}else{if(G===THREE.MultiplyBlending){this.enable(o.BLEND);o.blendEquation(o.FUNC_ADD);o.blendFunc(o.ZERO,o.SRC_COLOR)}else{if(G===THREE.CustomBlending){this.enable(o.BLEND)}else{this.enable(o.BLEND);o.blendEquationSeparate(o.FUNC_ADD,o.FUNC_ADD);o.blendFuncSeparate(o.SRC_ALPHA,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA)}}}}}D=G}if(G===THREE.CustomBlending){K=K||F;J=J||H;E=E||I;if(F!==i||K!==c){o.blendEquationSeparate(t(F),t(K));i=F;c=K}if(H!==f||I!==A||J!==r||E!==B){o.blendFuncSeparate(t(H),t(I),t(J),t(E));f=H;A=I;r=J;B=E}}else{i=null;f=null;A=null;c=null;r=null;B=null}};this.setDepthFunc=function(E){if(n!==E){if(E){switch(E){case THREE.NeverDepth:o.depthFunc(o.NEVER);break;case THREE.AlwaysDepth:o.depthFunc(o.ALWAYS);break;case THREE.LessDepth:o.depthFunc(o.LESS);break;case THREE.LessEqualDepth:o.depthFunc(o.LEQUAL);break;case THREE.EqualDepth:o.depthFunc(o.EQUAL);break;case THREE.GreaterEqualDepth:o.depthFunc(o.GEQUAL);break;case THREE.GreaterDepth:o.depthFunc(o.GREATER);break;case THREE.NotEqualDepth:o.depthFunc(o.NOTEQUAL);break;default:o.depthFunc(o.LEQUAL)}}else{o.depthFunc(o.LEQUAL)}n=E}};this.setDepthTest=function(E){if(E){this.enable(o.DEPTH_TEST)}else{this.disable(o.DEPTH_TEST)}};this.setDepthWrite=function(E){if(g!==E){o.depthMask(E);g=E}};this.setColorWrite=function(E){if(q!==E){o.colorMask(E,E,E,E);q=E}};this.setFlipSided=function(E){if(v!==E){if(E){o.frontFace(o.CW)}else{o.frontFace(o.CCW)}v=E}};this.setLineWidth=function(E){if(E!==k){o.lineWidth(E);k=E}};this.setPolygonOffset=function(G,F,E){if(G){this.enable(o.POLYGON_OFFSET_FILL)}else{this.disable(o.POLYGON_OFFSET_FILL)}if(G&&(b!==F||p!==E)){o.polygonOffset(F,E);b=F;p=E}};this.setScissorTest=function(E){if(E){this.enable(o.SCISSOR_TEST)}else{this.disable(o.SCISSOR_TEST)}};this.activeTexture=function(E){if(E===undefined){E=o.TEXTURE0+j-1}if(e!==E){o.activeTexture(E);e=E}};this.bindTexture=function(E,F){if(e===undefined){m.activeTexture()}var G=l[e];if(G===undefined){G={type:undefined,texture:undefined};l[e]=G}if(G.type!==E||G.texture!==F){o.bindTexture(E,F);G.type=E;G.texture=F}};this.compressedTexImage2D=function(){try{o.compressedTexImage2D.apply(o,arguments)}catch(E){console.error(E)}};this.texImage2D=function(){try{o.texImage2D.apply(o,arguments)}catch(E){console.error(E)}};this.reset=function(){for(var E=0;E<s.length;E++){if(s[E]===1){o.disableVertexAttribArray(E);s[E]=0}}d={};h=null;D=null;g=null;q=null;v=null}};THREE.LensFlarePlugin=function(k,d){var j=k.context;var a=k.state;var l,b;var h,g,m;var i;var e,f;function n(){var p=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]);var o=new Uint16Array([0,1,2,0,2,3]);l=j.createBuffer();b=j.createBuffer();j.bindBuffer(j.ARRAY_BUFFER,l);j.bufferData(j.ARRAY_BUFFER,p,j.STATIC_DRAW);j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,b);j.bufferData(j.ELEMENT_ARRAY_BUFFER,o,j.STATIC_DRAW);e=j.createTexture();f=j.createTexture();a.bindTexture(j.TEXTURE_2D,e);j.texImage2D(j.TEXTURE_2D,0,j.RGB,16,16,0,j.RGB,j.UNSIGNED_BYTE,null);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_S,j.CLAMP_TO_EDGE);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_T,j.CLAMP_TO_EDGE);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MAG_FILTER,j.NEAREST);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MIN_FILTER,j.NEAREST);a.bindTexture(j.TEXTURE_2D,f);j.texImage2D(j.TEXTURE_2D,0,j.RGBA,16,16,0,j.RGBA,j.UNSIGNED_BYTE,null);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_S,j.CLAMP_TO_EDGE);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_T,j.CLAMP_TO_EDGE);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MAG_FILTER,j.NEAREST);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MIN_FILTER,j.NEAREST);i=j.getParameter(j.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;var q;if(i){q={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}}else{q={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}}h=c(q);g={vertex:j.getAttribLocation(h,"position"),uv:j.getAttribLocation(h,"uv")};m={renderType:j.getUniformLocation(h,"renderType"),map:j.getUniformLocation(h,"map"),occlusionMap:j.getUniformLocation(h,"occlusionMap"),opacity:j.getUniformLocation(h,"opacity"),color:j.getUniformLocation(h,"color"),scale:j.getUniformLocation(h,"scale"),rotation:j.getUniformLocation(h,"rotation"),screenPosition:j.getUniformLocation(h,"screenPosition")}}this.render=function(I,E,B,o){if(d.length===0){return}var G=new THREE.Vector3();var q=o/B,H=B*0.5,A=o*0.5;var t=16/o,J=new THREE.Vector2(t*q,t);var s=new THREE.Vector3(1,1,0),r=new THREE.Vector2(1,1);if(h===undefined){n()}j.useProgram(h);a.initAttributes();a.enableAttribute(g.vertex);a.enableAttribute(g.uv);a.disableUnusedAttributes();j.uniform1i(m.occlusionMap,0);j.uniform1i(m.map,1);j.bindBuffer(j.ARRAY_BUFFER,l);j.vertexAttribPointer(g.vertex,2,j.FLOAT,false,2*8,0);j.vertexAttribPointer(g.uv,2,j.FLOAT,false,2*8,8);j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,b);a.disable(j.CULL_FACE);j.depthMask(false);for(var D=0,v=d.length;D<v;D++){t=16/o;J.set(t*q,t);var p=d[D];G.set(p.matrixWorld.elements[12],p.matrixWorld.elements[13],p.matrixWorld.elements[14]);G.applyMatrix4(E.matrixWorldInverse);G.applyProjection(E.projectionMatrix);s.copy(G);r.x=s.x*H+H;r.y=s.y*A+A;if(i||(r.x>0&&r.x<B&&r.y>0&&r.y<o)){a.activeTexture(j.TEXTURE0);a.bindTexture(j.TEXTURE_2D,null);a.activeTexture(j.TEXTURE1);a.bindTexture(j.TEXTURE_2D,e);j.copyTexImage2D(j.TEXTURE_2D,0,j.RGB,r.x-8,r.y-8,16,16,0);j.uniform1i(m.renderType,0);j.uniform2f(m.scale,J.x,J.y);j.uniform3f(m.screenPosition,s.x,s.y,s.z);a.disable(j.BLEND);a.enable(j.DEPTH_TEST);j.drawElements(j.TRIANGLES,6,j.UNSIGNED_SHORT,0);a.activeTexture(j.TEXTURE0);a.bindTexture(j.TEXTURE_2D,f);j.copyTexImage2D(j.TEXTURE_2D,0,j.RGBA,r.x-8,r.y-8,16,16,0);j.uniform1i(m.renderType,1);a.disable(j.DEPTH_TEST);a.activeTexture(j.TEXTURE1);a.bindTexture(j.TEXTURE_2D,e);j.drawElements(j.TRIANGLES,6,j.UNSIGNED_SHORT,0);p.positionScreen.copy(s);if(p.customUpdateCallback){p.customUpdateCallback(p)}else{p.updateLensFlares()}j.uniform1i(m.renderType,2);a.enable(j.BLEND);for(var C=0,F=p.lensFlares.length;C<F;C++){var u=p.lensFlares[C];if(u.opacity>0.001&&u.scale>0.001){s.x=u.x;s.y=u.y;s.z=u.z;t=u.size*u.scale/o;J.x=t*q;J.y=t;j.uniform3f(m.screenPosition,s.x,s.y,s.z);j.uniform2f(m.scale,J.x,J.y);j.uniform1f(m.rotation,u.rotation);j.uniform1f(m.opacity,u.opacity);j.uniform3f(m.color,u.color.r,u.color.g,u.color.b);a.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst);k.setTexture(u.texture,1);j.drawElements(j.TRIANGLES,6,j.UNSIGNED_SHORT,0)}}}}a.enable(j.CULL_FACE);a.enable(j.DEPTH_TEST);j.depthMask(true);k.resetGLState()};function c(q){var p=j.createProgram();var o=j.createShader(j.FRAGMENT_SHADER);var s=j.createShader(j.VERTEX_SHADER);var r="precision "+k.getPrecision()+" float;\n";j.shaderSource(o,r+q.fragmentShader);j.shaderSource(s,r+q.vertexShader);j.compileShader(o);j.compileShader(s);j.attachShader(p,o);j.attachShader(p,s);j.linkProgram(p);return p}};THREE.SpritePlugin=function(l,k){var h=l.context;var a=l.state;var m,b;var f,e,o;var j;var i=new THREE.Vector3();var d=new THREE.Quaternion();var g=new THREE.Vector3();function p(){var s=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]);var q=new Uint16Array([0,1,2,0,2,3]);m=h.createBuffer();b=h.createBuffer();h.bindBuffer(h.ARRAY_BUFFER,m);h.bufferData(h.ARRAY_BUFFER,s,h.STATIC_DRAW);h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,b);h.bufferData(h.ELEMENT_ARRAY_BUFFER,q,h.STATIC_DRAW);f=c();e={position:h.getAttribLocation(f,"position"),uv:h.getAttribLocation(f,"uv")};o={uvOffset:h.getUniformLocation(f,"uvOffset"),uvScale:h.getUniformLocation(f,"uvScale"),rotation:h.getUniformLocation(f,"rotation"),scale:h.getUniformLocation(f,"scale"),color:h.getUniformLocation(f,"color"),map:h.getUniformLocation(f,"map"),opacity:h.getUniformLocation(f,"opacity"),modelViewMatrix:h.getUniformLocation(f,"modelViewMatrix"),projectionMatrix:h.getUniformLocation(f,"projectionMatrix"),fogType:h.getUniformLocation(f,"fogType"),fogDensity:h.getUniformLocation(f,"fogDensity"),fogNear:h.getUniformLocation(f,"fogNear"),fogFar:h.getUniformLocation(f,"fogFar"),fogColor:h.getUniformLocation(f,"fogColor"),alphaTest:h.getUniformLocation(f,"alphaTest")};var r=document.createElement("canvas");r.width=8;r.height=8;var t=r.getContext("2d");t.fillStyle="white";t.fillRect(0,0,8,8);j=new THREE.Texture(r);j.needsUpdate=true}this.render=function(v,C){if(k.length===0){return}if(f===undefined){p()}h.useProgram(f);a.initAttributes();a.enableAttribute(e.position);a.enableAttribute(e.uv);a.disableUnusedAttributes();a.disable(h.CULL_FACE);a.enable(h.BLEND);h.bindBuffer(h.ARRAY_BUFFER,m);h.vertexAttribPointer(e.position,2,h.FLOAT,false,2*8,0);h.vertexAttribPointer(e.uv,2,h.FLOAT,false,2*8,8);h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,b);h.uniformMatrix4fv(o.projectionMatrix,false,C.projectionMatrix.elements);a.activeTexture(h.TEXTURE0);h.uniform1i(o.map,0);var A=0;var E=0;var q=v.fog;if(q){h.uniform3f(o.fogColor,q.color.r,q.color.g,q.color.b);if(q instanceof THREE.Fog){h.uniform1f(o.fogNear,q.near);h.uniform1f(o.fogFar,q.far);h.uniform1i(o.fogType,1);A=1;E=1}else{if(q instanceof THREE.FogExp2){h.uniform1f(o.fogDensity,q.density);h.uniform1i(o.fogType,2);A=2;E=2}}}else{h.uniform1i(o.fogType,0);A=0;E=0}for(var u=0,s=k.length;u<s;u++){var D=k[u];D.modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,D.matrixWorld);D.z=-D.modelViewMatrix.elements[14]}k.sort(n);var r=[];for(var u=0,s=k.length;u<s;u++){var D=k[u];var B=D.material;h.uniform1f(o.alphaTest,B.alphaTest);h.uniformMatrix4fv(o.modelViewMatrix,false,D.modelViewMatrix.elements);D.matrixWorld.decompose(i,d,g);r[0]=g.x;r[1]=g.y;var t=0;if(v.fog&&B.fog){t=E}if(A!==t){h.uniform1i(o.fogType,t);A=t}if(B.map!==null){h.uniform2f(o.uvOffset,B.map.offset.x,B.map.offset.y);h.uniform2f(o.uvScale,B.map.repeat.x,B.map.repeat.y)}else{h.uniform2f(o.uvOffset,0,0);h.uniform2f(o.uvScale,1,1)}h.uniform1f(o.opacity,B.opacity);h.uniform3f(o.color,B.color.r,B.color.g,B.color.b);h.uniform1f(o.rotation,B.rotation);h.uniform2fv(o.scale,r);a.setBlending(B.blending,B.blendEquation,B.blendSrc,B.blendDst);a.setDepthTest(B.depthTest);a.setDepthWrite(B.depthWrite);if(B.map&&B.map.image&&B.map.image.width){l.setTexture(B.map,0)}else{l.setTexture(j,0)}h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0)}a.enable(h.CULL_FACE);l.resetGLState()};function c(){var r=h.createProgram();var s=h.createShader(h.VERTEX_SHADER);var q=h.createShader(h.FRAGMENT_SHADER);h.shaderSource(s,["precision "+l.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n"));h.shaderSource(q,["precision "+l.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n"));h.compileShader(s);h.compileShader(q);h.attachShader(r,s);h.attachShader(r,q);h.linkProgram(r);return r}function n(r,q){if(r.z!==q.z){return q.z-r.z}else{return q.id-r.id}}};THREE.CurveUtils={tangentQuadraticBezier:function(a,d,c,b){return 2*(1-a)*(c-d)+2*a*(b-c)},tangentCubicBezier:function(a,e,d,c,b){return -3*e*(1-a)*(1-a)+3*d*(1-a)*(1-a)-6*a*d*(1-a)+6*a*c*(1-a)-3*a*a*c+3*a*a*b},tangentSpline:function(i,h,g,f,d){var e=6*i*i-6*i;var b=3*i*i-4*i+1;var c=-6*i*i+6*i;var a=3*i*i-2*i;return e+b+c+a},interpolate:function(h,g,e,d,i){var f=(e-h)*0.5;var c=(d-g)*0.5;var b=i*i;var a=i*b;return(2*g-2*e+f+c)*a+(-3*g+3*e-2*f-c)*b+f*i+g}};THREE.GeometryUtils={merge:function(c,b,d){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var a;if(b instanceof THREE.Mesh){b.matrixAutoUpdate&&b.updateMatrix();a=b.matrix;b=b.geometry}c.merge(b,a,d)},center:function(a){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return a.center()}};THREE.ImageUtils={crossOrigin:undefined,loadTexture:function(c,b,d,f){console.warn("THREE.ImageUtils.loadTexture is being deprecated. Use THREE.TextureLoader() instead.");var a=new THREE.TextureLoader();a.setCrossOrigin(this.crossOrigin);var e=a.load(c,d,undefined,f);if(b){e.mapping=b}return e},loadTextureCube:function(f,b,c,e){console.warn("THREE.ImageUtils.loadTextureCube is being deprecated. Use THREE.CubeTextureLoader() instead.");var a=new THREE.CubeTextureLoader();a.setCrossOrigin(this.crossOrigin);var d=a.load(f,c,undefined,e);if(b){d.mapping=b}return d},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};THREE.SceneUtils={createMultiMaterialObject:function(e,b){var d=new THREE.Group();for(var c=0,a=b.length;c<a;c++){d.add(new THREE.Mesh(e,b[c]))}return d},detach:function(c,a,b){c.applyMatrix(a.matrixWorld);a.remove(c);b.add(c)},attach:function(d,c,a){var b=new THREE.Matrix4();b.getInverse(a.matrixWorld);d.applyMatrix(b);c.remove(d);a.add(d)}};THREE.ShapeUtils={area:function(c){var f=c.length;var b=0;for(var e=f-1,d=0;d<f;e=d++){b+=c[e].x*c[d].y-c[d].x*c[e].y}return b*0.5},triangulate:(function(){function a(F,t,s,o,E,M){var D;var q,l,K,I;var e,c,C,B;q=F[M[t]].x;l=F[M[t]].y;K=F[M[s]].x;I=F[M[s]].y;e=F[M[o]].x;c=F[M[o]].y;if(Number.EPSILON>(((K-q)*(c-l))-((I-l)*(e-q)))){return false}var d,b,r,m,L,J;var h,g,H,G,j,i;var f,k,A;d=e-K;b=c-I;r=q-e;m=l-c;L=K-q;J=I-l;for(D=0;D<E;D++){C=F[M[D]].x;B=F[M[D]].y;if(((C===q)&&(B===l))||((C===K)&&(B===I))||((C===e)&&(B===c))){continue}h=C-q;g=B-l;H=C-K;G=B-I;j=C-e;i=B-c;A=d*G-b*H;f=L*g-J*h;k=r*i-m*j;if((A>=-Number.EPSILON)&&(k>=-Number.EPSILON)&&(f>=-Number.EPSILON)){return false}}return true}return function(e,p){var d=e.length;if(d<3){return null}var B=[],m=[],h=[];var q,o,l;if(THREE.ShapeUtils.area(e)>0){for(o=0;o<d;o++){m[o]=o}}else{for(o=0;o<d;o++){m[o]=(d-1)-o}}var g=d;var f=2*g;for(o=g-1;g>2;){if((f--)<=0){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");if(p){return h}return B}q=o;if(g<=q){q=0}o=q+1;if(g<=o){o=0}l=o+1;if(g<=l){l=0}if(a(e,q,o,l,g,m)){var k,j,i,A,r;k=m[q];j=m[o];i=m[l];B.push([e[k],e[j],e[i]]);h.push([m[q],m[o],m[l]]);for(A=o,r=o+1;r<g;A++,r++){m[A]=m[r]}g--;f=2*g}}if(p){return h}return B}})(),triangulateShape:function(p,j){function e(i,h,f){if(i.x!==h.x){if(i.x<h.x){return((i.x<=f.x)&&(f.x<=h.x))}else{return((h.x<=f.x)&&(f.x<=i.x))}}else{if(i.y<h.y){return((i.y<=f.y)&&(f.y<=h.y))}else{return((h.y<=f.y)&&(f.y<=i.y))}}}function m(T,S,v,i,P){var I=S.x-T.x,H=S.y-T.y;var R=i.x-v.x,Q=i.y-v.y;var N=T.x-v.x;var M=T.y-v.y;var O=H*R-I*Q;var F=H*N-I*M;if(Math.abs(O)>Number.EPSILON){var E;if(O>0){if((F<0)||(F>O)){return[]}E=Q*N-R*M;if((E<0)||(E>O)){return[]}}else{if((F>0)||(F<O)){return[]}E=Q*N-R*M;if((E>0)||(E<O)){return[]}}if(E===0){if((P)&&((F===0)||(F===O))){return[]}return[T]}if(E===O){if((P)&&((F===0)||(F===O))){return[]}return[S]}if(F===0){return[v]}if(F===O){return[i]}var h=E/O;return[{x:T.x+h*I,y:T.y+h*H}]}else{if((F!==0)||(Q*N!==R*M)){return[]}var J=((I===0)&&(H===0));var D=((R===0)&&(Q===0));if(J&&D){if((T.x!==v.x)||(T.y!==v.y)){return[]}return[T]}if(J){if(!e(v,i,T)){return[]}return[T]}if(D){if(!e(T,S,v)){return[]}return[v]}var U,f,L,G;var B,C,A,K;if(I!==0){if(T.x<S.x){U=T;L=T.x;f=S;G=S.x}else{U=S;L=S.x;f=T;G=T.x}if(v.x<i.x){B=v;A=v.x;C=i;K=i.x}else{B=i;A=i.x;C=v;K=v.x}}else{if(T.y<S.y){U=T;L=T.y;f=S;G=S.y}else{U=S;L=S.y;f=T;G=T.y}if(v.y<i.y){B=v;A=v.y;C=i;K=i.y}else{B=i;A=i.y;C=v;K=v.y}}if(L<=A){if(G<A){return[]}if(G===A){if(P){return[]}return[B]}if(G<=K){return[B,f]}return[B,C]}else{if(L>K){return[]}if(L===K){if(P){return[]}return[U]}if(G<=K){return[U,f]}return[U,C]}}}function s(v,E,i,G){var F=E.x-v.x,D=E.y-v.y;var I=i.x-v.x,H=i.y-v.y;var C=G.x-v.x,B=G.y-v.y;var h=F*H-D*I;var f=F*B-D*C;if(Math.abs(h)>Number.EPSILON){var A=C*H-B*I;if(h>0){return((f>=0)&&(A>=0))}else{return((f>=0)||(A>=0))}}else{return(f>0)}}function k(L,H){var i=L.concat();var K;function M(Y,ab){var X=i.length-1;var aa=Y-1;if(aa<0){aa=X}var W=Y+1;if(W>X){W=0}var ac=s(i[Y],i[aa],i[W],K[ab]);if(!ac){return false}var Z=K.length-1;var V=ab-1;if(V<0){V=Z}var h=ab+1;if(h>Z){h=0}ac=s(K[ab],K[V],K[h],i[Y]);if(!ac){return false}return true}function f(V,W){var h,X,Y;for(h=0;h<i.length;h++){X=h+1;X%=i.length;Y=m(V,W,i[h],i[X],true);if(Y.length>0){return true}}return false}var C=[];function O(V,W){var X,aa,h,Y,Z;for(X=0;X<C.length;X++){aa=H[C[X]];for(h=0;h<aa.length;h++){Y=h+1;Y%=aa.length;Z=m(V,W,aa[h],aa[Y],true);if(Z.length>0){return true}}}return false}var I,F,U,R,S,P,B=[],T,Q,E,D;for(var N=0,A=H.length;N<A;N++){C.push(N)}var v=0;var J=C.length*2;while(C.length>0){J--;if(J<0){console.log("Infinite Loop! Holes left:"+C.length+", Probably Hole outside Shape!");break}for(F=v;F<i.length;F++){U=i[F];I=-1;for(var N=0;N<C.length;N++){S=C[N];P=U.x+":"+U.y+":"+S;if(B[P]!==undefined){continue}K=H[S];for(var G=0;G<K.length;G++){R=K[G];if(!M(F,G)){continue}if(f(U,R)){continue}if(O(U,R)){continue}I=G;C.splice(N,1);T=i.slice(0,F+1);Q=i.slice(F);E=K.slice(I);D=K.slice(0,I+1);i=T.concat(E).concat(D).concat(Q);v=F;break}if(I>=0){break}B[P]=true}if(I>=0){break}}}return i}var q,n,t,l,u,d,c={};var g=p.concat();for(var r=0,b=j.length;r<b;r++){Array.prototype.push.apply(g,j[r])}for(q=0,n=g.length;q<n;q++){u=g[q].x+":"+g[q].y;if(c[u]!==undefined){console.warn("THREE.Shape: Duplicate point",u)}c[u]=q}var a=k(p,j);var o=THREE.ShapeUtils.triangulate(a,false);for(q=0,n=o.length;q<n;q++){l=o[q];for(t=0;t<3;t++){u=l[t].x+":"+l[t].y;d=c[u];if(d!==undefined){l[t]=d}}}return o.concat()},isClockWise:function(a){return THREE.ShapeUtils.area(a)<0},b2:(function(){function a(e,f){var d=1-e;return d*d*f}function c(d,e){return 2*(1-d)*d*e}function b(d,e){return d*d*e}return function(d,g,f,e){return a(d,g)+c(d,f)+b(d,e)}})(),b3:(function(){function d(f,g){var e=1-f;return e*e*e*g}function c(f,g){var e=1-f;return 3*e*e*f*g}function b(f,g){var e=1-f;return 3*e*f*f*g}function a(e,f){return e*e*e*f}return function(e,i,h,g,f){return d(e,i)+c(e,h)+b(e,g)+a(e,f)}})()};THREE.Audio=function(a){THREE.Object3D.call(this);this.type="Audio";this.context=a.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.panner=this.context.createPanner();this.panner.connect(this.gain);this.autoplay=false;this.startTime=0;this.playbackRate=1;this.isPlaying=false};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);THREE.Audio.prototype.constructor=THREE.Audio;THREE.Audio.prototype.load=function(a){var b=this;var c=new XMLHttpRequest();c.open("GET",a,true);c.responseType="arraybuffer";c.onload=function(d){b.context.decodeAudioData(this.response,function(e){b.source.buffer=e;if(b.autoplay){b.play()}})};c.send();return this};THREE.Audio.prototype.play=function(){if(this.isPlaying===true){console.warn("THREE.Audio: Audio is already playing.");return}var a=this.context.createBufferSource();a.buffer=this.source.buffer;a.loop=this.source.loop;a.onended=this.source.onended;a.start(0,this.startTime);a.playbackRate.value=this.playbackRate;this.isPlaying=true;this.source=a;this.connect()};THREE.Audio.prototype.pause=function(){this.source.stop();this.startTime=this.context.currentTime};THREE.Audio.prototype.stop=function(){this.source.stop();this.startTime=0};THREE.Audio.prototype.connect=function(){if(this.filter!==undefined){this.source.connect(this.filter);this.filter.connect(this.panner)}else{this.source.connect(this.panner)}};THREE.Audio.prototype.disconnect=function(){if(this.filter!==undefined){this.source.disconnect(this.filter);this.filter.disconnect(this.panner)}else{this.source.disconnect(this.panner)}};THREE.Audio.prototype.setFilter=function(a){if(this.isPlaying===true){this.disconnect();this.filter=a;this.connect()}else{this.filter=a}};THREE.Audio.prototype.getFilter=function(){return this.filter};THREE.Audio.prototype.setPlaybackRate=function(a){this.playbackRate=a;if(this.isPlaying===true){this.source.playbackRate.value=this.playbackRate}};THREE.Audio.prototype.getPlaybackRate=function(){return this.playbackRate};THREE.Audio.prototype.onEnded=function(){this.isPlaying=false};THREE.Audio.prototype.setLoop=function(a){this.source.loop=a};THREE.Audio.prototype.getLoop=function(){return this.source.loop};THREE.Audio.prototype.setRefDistance=function(a){this.panner.refDistance=a};THREE.Audio.prototype.getRefDistance=function(){return this.panner.refDistance};THREE.Audio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a};THREE.Audio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor};THREE.Audio.prototype.setVolume=function(a){this.gain.gain.value=a};THREE.Audio.prototype.getVolume=function(){return this.gain.gain.value};THREE.Audio.prototype.updateMatrixWorld=(function(){var a=new THREE.Vector3();return function b(c){THREE.Object3D.prototype.updateMatrixWorld.call(this,c);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}})();THREE.AudioListener=function(){THREE.Object3D.call(this);this.type="AudioListener";this.context=new (window.AudioContext||window.webkitAudioContext)()};THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;THREE.AudioListener.prototype.updateMatrixWorld=(function(){var a=new THREE.Vector3();var d=new THREE.Quaternion();var e=new THREE.Vector3();var b=new THREE.Vector3();return function c(h){THREE.Object3D.prototype.updateMatrixWorld.call(this,h);var g=this.context.listener;var f=this.up;this.matrixWorld.decompose(a,d,e);b.set(0,0,-1).applyQuaternion(d);g.setPosition(a.x,a.y,a.z);g.setOrientation(b.x,b.y,b.z,f.x,f.y,f.z)}})();THREE.Curve=function(){};THREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(a){console.warn("THREE.Curve: Warning, getPoint() not implemented!");return null},getPointAt:function(a){var b=this.getUtoTmapping(a);return this.getPoint(b)},getPoints:function(a){if(!a){a=5}var c,b=[];for(c=0;c<=a;c++){b.push(this.getPoint(c/a))}return b},getSpacedPoints:function(a){if(!a){a=5}var c,b=[];for(c=0;c<=a;c++){b.push(this.getPointAt(c/a))}return b},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(b){if(!b){b=(this.__arcLengthDivisions)?(this.__arcLengthDivisions):200}if(this.cacheArcLengths&&(this.cacheArcLengths.length===b+1)&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=false;var a=[];var f,d=this.getPoint(0);var e,c=0;a.push(0);for(e=1;e<=b;e++){f=this.getPoint(e/b);c+=f.distanceTo(d);a.push(c);d=f}this.cacheArcLengths=a;return a},updateArcLengths:function(){this.needsUpdate=true;this.getLengths()},getUtoTmapping:function(m,a){var b=this.getLengths();var e=0,j=b.length;var k;if(a){k=a}else{k=m*b[j-1]}var h=0,d=j-1,l;while(h<=d){e=Math.floor(h+(d-h)/2);l=b[e]-k;if(l<0){h=e+1}else{if(l>0){d=e-1}else{d=e;break}}}e=d;if(b[e]===k){var o=e/(j-1);return o}var f=b[e];var n=b[e+1];var c=n-f;var g=(k-f)/c;var o=(e+g)/(j-1);return o},getTangent:function(b){var g=0.0001;var d=b-g;var c=b+g;if(d<0){d=0}if(c>1){c=1}var f=this.getPoint(d);var e=this.getPoint(c);var a=e.clone().sub(f);return a.normalize()},getTangentAt:function(a){var b=this.getUtoTmapping(a);return this.getTangent(b)}};THREE.Curve.Utils=THREE.CurveUtils;THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.autoClose=false};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.closePath=function(){var b=this.curves[0].getPoint(0);var a=this.curves[this.curves.length-1].getPoint(1);if(!b.equals(a)){this.curves.push(new THREE.LineCurve(a,b))}};THREE.CurvePath.prototype.getPoint=function(c){var h=c*this.getLength();var g=this.getCurveLengths();var b=0;while(b<g.length){if(g[b]>=h){var e=g[b]-h;var f=this.curves[b];var a=1-e/f.getLength();return f.getPointAt(a)}b++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths}var d=[],c=0;for(var b=0,a=this.curves.length;b<a;b++){c+=this.curves[b].getLength();d.push(c)}this.cacheLengths=d;return d};THREE.CurvePath.prototype.createPointsGeometry=function(a){var b=this.getPoints(a,true);return this.createGeometry(b)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){var b=this.getSpacedPoints(a,true);return this.createGeometry(b)};THREE.CurvePath.prototype.createGeometry=function(d){var e=new THREE.Geometry();for(var c=0,b=d.length;c<b;c++){var a=d[c];e.vertices.push(new THREE.Vector3(a.x,a.y,a.z||0))}return e};THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];if(a){this.fromPoints(a)}};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;THREE.Path.prototype.fromPoints=function(c){this.moveTo(c[0].x,c[0].y);for(var b=1,a=c.length;b<a;b++){this.lineTo(c[b].x,c[b].y)}};THREE.Path.prototype.moveTo=function(a,b){this.actions.push({action:"moveTo",args:[a,b]})};THREE.Path.prototype.lineTo=function(a,f){var d=this.actions[this.actions.length-1].args;var b=d[d.length-2];var c=d[d.length-1];var e=new THREE.LineCurve(new THREE.Vector2(b,c),new THREE.Vector2(a,f));this.curves.push(e);this.actions.push({action:"lineTo",args:[a,f]})};THREE.Path.prototype.quadraticCurveTo=function(g,f,e,b){var d=this.actions[this.actions.length-1].args;var a=d[d.length-2];var c=d[d.length-1];var h=new THREE.QuadraticBezierCurve(new THREE.Vector2(a,c),new THREE.Vector2(g,f),new THREE.Vector2(e,b));this.curves.push(h);this.actions.push({action:"quadraticCurveTo",args:[g,f,e,b]})};THREE.Path.prototype.bezierCurveTo=function(e,b,j,i,g,f){var a=this.actions[this.actions.length-1].args;var c=a[a.length-2];var h=a[a.length-1];var d=new THREE.CubicBezierCurve(new THREE.Vector2(c,h),new THREE.Vector2(e,b),new THREE.Vector2(j,i),new THREE.Vector2(g,f));this.curves.push(d);this.actions.push({action:"bezierCurveTo",args:[e,b,j,i,g,f]})};THREE.Path.prototype.splineThru=function(g){var a=Array.prototype.slice.call(arguments);var d=this.actions[this.actions.length-1].args;var b=d[d.length-2];var c=d[d.length-1];var f=[new THREE.Vector2(b,c)];Array.prototype.push.apply(f,g);var e=new THREE.SplineCurve(f);this.curves.push(e);this.actions.push({action:"splineThru",args:a})};THREE.Path.prototype.arc=function(h,f,g,d,a,b){var c=this.actions[this.actions.length-1].args;var e=c[c.length-2];var i=c[c.length-1];this.absarc(h+e,f+i,g,d,a,b)};THREE.Path.prototype.absarc=function(e,d,f,c,b,a){this.absellipse(e,d,f,f,c,b,a)};THREE.Path.prototype.ellipse=function(g,f,i,h,d,a,b,k){var c=this.actions[this.actions.length-1].args;var e=c[c.length-2];var j=c[c.length-1];this.absellipse(g+e,f+j,i,h,d,a,b,k)};THREE.Path.prototype.absellipse=function(f,e,j,g,c,a,b,k){var h=[f,e,j,g,c,a,b,k||0];var d=new THREE.EllipseCurve(f,e,j,g,c,a,b,k);this.curves.push(d);var i=d.getPoint(1);h.push(i.x);h.push(i.y);this.actions.push({action:"ellipse",args:h})};THREE.Path.prototype.getSpacedPoints=function(b,d){if(!b){b=40}var c=[];for(var a=0;a<b;a++){c.push(this.getPoint(a/b))}return c};THREE.Path.prototype.getPoints=function(Z,X){Z=Z||12;var u=THREE.ShapeUtils.b2;var s=THREE.ShapeUtils.b3;var J=[];var K,G,Y,D,aa,E,a,F,b,S,R;for(var U=0,Q=this.actions.length;U<Q;U++){var B=this.actions[U];var c=B.action;var O=B.args;switch(c){case"moveTo":J.push(new THREE.Vector2(O[0],O[1]));break;case"lineTo":J.push(new THREE.Vector2(O[0],O[1]));break;case"quadraticCurveTo":K=O[2];G=O[3];aa=O[0];E=O[1];if(J.length>0){b=J[J.length-1];a=b.x;F=b.y}else{b=this.actions[U-1].args;a=b[b.length-2];F=b[b.length-1]}for(var T=1;T<=Z;T++){var N=T/Z;S=u(N,a,aa,K);R=u(N,F,E,G);J.push(new THREE.Vector2(S,R))}break;case"bezierCurveTo":K=O[4];G=O[5];aa=O[0];E=O[1];Y=O[2];D=O[3];if(J.length>0){b=J[J.length-1];a=b.x;F=b.y}else{b=this.actions[U-1].args;a=b[b.length-2];F=b[b.length-1]}for(var T=1;T<=Z;T++){var N=T/Z;S=s(N,a,aa,Y,K);R=s(N,F,E,D,G);J.push(new THREE.Vector2(S,R))}break;case"splineThru":b=this.actions[U-1].args;var m=new THREE.Vector2(b[b.length-2],b[b.length-1]);var g=[m];var P=Z*O[0].length;g=g.concat(O[0]);var W=new THREE.SplineCurve(g);for(var T=1;T<=P;T++){J.push(W.getPointAt(T/P))}break;case"arc":var q=O[0],p=O[1],v=O[2],V=O[3],M=O[4],k=!!O[5];var I=M-V;var o;var d=Z*2;for(var T=1;T<=d;T++){var N=T/d;if(!k){N=1-N}o=V+N*I;S=q+v*Math.cos(o);R=p+v*Math.sin(o);J.push(new THREE.Vector2(S,R))}break;case"ellipse":var q=O[0],p=O[1],A=O[2],C=O[3],V=O[4],M=O[5],k=!!O[6],r=O[7];var I=M-V;var o;var d=Z*2;var e,h;if(r!==0){e=Math.cos(r);h=Math.sin(r)}for(var T=1;T<=d;T++){var N=T/d;if(!k){N=1-N}o=V+N*I;S=q+A*Math.cos(o);R=p+C*Math.sin(o);if(r!==0){var L=S,H=R;S=(L-q)*e-(H-p)*h+q;R=(L-q)*h+(H-p)*e+p}J.push(new THREE.Vector2(S,R))}break}}var f=J[J.length-1];if(Math.abs(f.x-J[0].x)<Number.EPSILON&&Math.abs(f.y-J[0].y)<Number.EPSILON){J.splice(J.length-1,1)}if(X){J.push(J[0])}return J};THREE.Path.prototype.toShapes=function(L,t){function h(P){var T=[],S=new THREE.Path();for(var O=0,j=P.length;O<j;O++){var Q=P[O];var N=Q.args;var R=Q.action;if(R==="moveTo"){if(S.actions.length!==0){T.push(S);S=new THREE.Path()}}S[R].apply(S,N)}if(S.actions.length!==0){T.push(S)}return T}function m(O){var N=[];for(var P=0,j=O.length;P<j;P++){var Q=O[P];var R=new THREE.Shape();R.actions=Q.actions;R.curves=Q.curves;N.push(R)}return N}function q(T,N){var P=N.length;var O=false;for(var j=P-1,i=0;i<P;j=i++){var l=N[j];var U=N[i];var S=U.x-l.x;var Q=U.y-l.y;if(Math.abs(Q)>Number.EPSILON){if(Q<0){l=N[i];S=-S;U=N[j];Q=-Q}if((T.y<l.y)||(T.y>U.y)){continue}if(T.y===l.y){if(T.x===l.x){return true}}else{var R=Q*(T.x-l.x)-S*(T.y-l.y);if(R===0){return true}if(R<0){continue}O=!O}}else{if(T.y!==l.y){continue}if(((U.x<=T.x)&&(T.x<=l.x))||((l.x<=T.x)&&(T.x<=U.x))){return true}}}return O}var J=THREE.ShapeUtils.isClockWise;var d=h(this.actions);if(d.length===0){return[]}if(t===true){return m(d)}var I,G,o,r=[];if(d.length===1){G=d[0];o=new THREE.Shape();o.actions=G.actions;o.curves=G.curves;r.push(o);return r}var a=!J(d[0].getPoints());a=L?!a:a;var p=[];var C=[];var H=[];var g=0;var u;C[g]=undefined;H[g]=[];for(var D=0,A=d.length;D<A;D++){G=d[D];u=G.getPoints();I=J(u);I=L?!I:I;if(I){if((!a)&&(C[g])){g++}C[g]={s:new THREE.Shape(),p:u};C[g].s.actions=G.actions;C[g].s.curves=G.curves;if(a){g++}H[g]=[]}else{H[g].push({h:G,p:u[0]})}}if(!C[0]){return m(d)}if(C.length>1){var K=false;var v=[];for(var M=0,c=C.length;M<c;M++){p[M]=[]}for(var M=0,c=C.length;M<c;M++){var s=H[M];for(var k=0;k<s.length;k++){var b=s[k];var f=true;for(var e=0;e<C.length;e++){if(q(b.p,C[e].p)){if(M!==e){v.push({froms:M,tos:e,hole:k})}if(f){f=false;p[e].push(b)}else{K=true}}}if(f){p[M].push(b)}}}if(v.length>0){if(!K){H=p}}}var F;for(var D=0,n=C.length;D<n;D++){o=C[D].s;r.push(o);F=H[D];for(var B=0,E=F.length;B<E;B++){o.holes.push(F[B].h)}}return r};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(c){var d=[];for(var b=0,a=this.holes.length;b<a;b++){d[b]=this.holes[b].getPoints(c)}return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.extractAllPoints(a)};THREE.Shape.Utils=THREE.ShapeUtils;THREE.LineCurve=function(b,a){this.v1=b;this.v2=a};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(b){var a=this.v2.clone().sub(this.v1);a.multiplyScalar(b).add(this.v1);return a};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){var b=this.v2.clone().sub(this.v1);return b.normalize()};THREE.QuadraticBezierCurve=function(a,c,b){this.v0=a;this.v1=c;this.v2=b};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;THREE.QuadraticBezierCurve.prototype.getPoint=function(b){var a=THREE.ShapeUtils.b2;return new THREE.Vector2(a(b,this.v0.x,this.v1.x,this.v2.x),a(b,this.v0.y,this.v1.y,this.v2.y))};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=THREE.CurveUtils.tangentQuadraticBezier;return new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y)).normalize()};THREE.CubicBezierCurve=function(a,d,c,b){this.v0=a;this.v1=d;this.v2=c;this.v3=b};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(b){var a=THREE.ShapeUtils.b3;return new THREE.Vector2(a(b,this.v0.x,this.v1.x,this.v2.x,this.v3.x),a(b,this.v0.y,this.v1.y,this.v2.y,this.v3.y))};THREE.CubicBezierCurve.prototype.getTangent=function(b){var a=THREE.CurveUtils.tangentCubicBezier;return new THREE.Vector2(a(b,this.v0.x,this.v1.x,this.v2.x,this.v3.x),a(b,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()};THREE.SplineCurve=function(a){this.points=(a==undefined)?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;THREE.SplineCurve.prototype.getPoint=function(j){var i=this.points;var h=(i.length-1)*j;var a=Math.floor(h);var b=h-a;var g=i[a===0?a:a-1];var f=i[a];var e=i[a>i.length-2?i.length-1:a+1];var d=i[a>i.length-3?i.length-1:a+2];var c=THREE.CurveUtils.interpolate;return new THREE.Vector2(c(g.x,f.x,e.x,d.x,b),c(g.y,f.y,e.y,d.y,b))};THREE.EllipseCurve=function(g,e,h,a,d,c,b,f){this.aX=g;this.aY=e;this.xRadius=h;this.yRadius=a;this.aStartAngle=d;this.aEndAngle=c;this.aClockwise=b;this.aRotation=f||0};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;THREE.EllipseCurve.prototype.getPoint=function(i){var a=this.aEndAngle-this.aStartAngle;if(a<0){a+=Math.PI*2}if(a>Math.PI*2){a-=Math.PI*2}var b;if(this.aClockwise===true){b=this.aEndAngle+(1-i)*(Math.PI*2-a)}else{b=this.aStartAngle+i*a}var g=this.aX+this.xRadius*Math.cos(b);var f=this.aY+this.yRadius*Math.sin(b);if(this.aRotation!==0){var h=Math.cos(this.aRotation);var e=Math.sin(this.aRotation);var d=g,c=f;g=(d-this.aX)*h-(c-this.aY)*e+this.aX;f=(d-this.aX)*e+(c-this.aY)*h+this.aY}return new THREE.Vector2(g,f)};THREE.ArcCurve=function(e,d,f,c,b,a){THREE.EllipseCurve.call(this,e,d,f,f,c,b,a)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(b,a){this.v1=b;this.v2=a},function(b){var a=new THREE.Vector3();a.subVectors(this.v2,this.v1);a.multiplyScalar(b);a.add(this.v1);return a});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,c,b){this.v0=a;this.v1=c;this.v2=b},function(b){var a=THREE.ShapeUtils.b2;return new THREE.Vector3(a(b,this.v0.x,this.v1.x,this.v2.x),a(b,this.v0.y,this.v1.y,this.v2.y),a(b,this.v0.z,this.v1.z,this.v2.z))});THREE.CubicBezierCurve3=THREE.Curve.create(function(a,d,c,b){this.v0=a;this.v1=d;this.v2=c;this.v3=b},function(b){var a=THREE.ShapeUtils.b3;return new THREE.Vector3(a(b,this.v0.x,this.v1.x,this.v2.x,this.v3.x),a(b,this.v0.y,this.v1.y,this.v2.y,this.v3.y),a(b,this.v0.z,this.v1.z,this.v2.z,this.v3.z))});THREE.SplineCurve3=THREE.Curve.create(function(a){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3");this.points=(a==undefined)?[]:a},function(j){var i=this.points;var h=(i.length-1)*j;var a=Math.floor(h);var b=h-a;var g=i[a==0?a:a-1];var f=i[a];var e=i[a>i.length-2?i.length-1:a+1];var d=i[a>i.length-3?i.length-1:a+2];var c=THREE.CurveUtils.interpolate;return new THREE.Vector3(c(g.x,f.x,e.x,d.x,b),c(g.y,f.y,e.y,d.y,b),c(g.z,f.z,e.z,d.z,b))});THREE.CatmullRomCurve3=(function(){var e=new THREE.Vector3(),d=new a(),c=new a(),b=new a();function a(){}a.prototype.init=function(g,f,i,h){this.c0=g;this.c1=i;this.c2=-3*g+3*f-2*i-h;this.c3=2*g-2*f+i+h};a.prototype.initNonuniformCatmullRom=function(i,h,g,f,l,k,j){var n=(h-i)/l-(g-i)/(l+k)+(g-h)/k;var m=(g-h)/k-(f-h)/(k+j)+(f-g)/j;n*=k;m*=k;this.init(h,g,n,m)};a.prototype.initCatmullRom=function(j,h,g,f,i){this.init(h,g,i*(g-j),i*(f-h))};a.prototype.calc=function(g){var h=g*g;var f=h*g;return this.c0+this.c1*g+this.c2*h+this.c3*f};return THREE.Curve.create(function(f){this.points=f||[]},function(B){var s=this.points,p,f,k,j;j=s.length;if(j<2){console.log("duh, you need at least 2 points")}p=(j-1)*B;f=Math.floor(p);k=p-f;if(k===0&&f===j-1){f=j-2;k=1}var A,u,r,o;if(f===0){e.subVectors(s[0],s[1]).add(s[0]);A=e}else{A=s[f-1]}u=s[f];r=s[f+1];if(f+2<j){o=s[f+2]}else{e.subVectors(s[j-1],s[j-2]).add(s[j-2]);o=e}if(this.type===undefined||this.type==="centripetal"||this.type==="chordal"){var m=this.type==="chordal"?0.5:0.25;var i=Math.pow(A.distanceToSquared(u),m);var h=Math.pow(u.distanceToSquared(r),m);var g=Math.pow(r.distanceToSquared(o),m);if(h<0.0001){h=1}if(i<0.0001){i=h}if(g<0.0001){g=h}d.initNonuniformCatmullRom(A.x,u.x,r.x,o.x,i,h,g);c.initNonuniformCatmullRom(A.y,u.y,r.y,o.y,i,h,g);b.initNonuniformCatmullRom(A.z,u.z,r.z,o.z,i,h,g)}else{if(this.type==="catmullrom"){var n=this.tension!==undefined?this.tension:0.5;d.initCatmullRom(A.x,u.x,r.x,o.x,n);c.initCatmullRom(A.y,u.y,r.y,o.y,n);b.initCatmullRom(A.z,u.z,r.z,o.z,n)}}var q=new THREE.Vector3(d.calc(k),c.calc(k),b.calc(k));return q})})();THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=(a==undefined)?[]:a},function(j){var i=this.points;var h=(i.length-0)*j;var a=Math.floor(h);var b=h-a;a+=a>0?0:(Math.floor(Math.abs(a)/i.length)+1)*i.length;var g=i[(a-1)%i.length];var f=i[(a)%i.length];var e=i[(a+1)%i.length];var d=i[(a+2)%i.length];var c=THREE.CurveUtils.interpolate;return new THREE.Vector3(c(g.x,f.x,e.x,d.x,b),c(g.y,f.y,e.y,d.y,b),c(g.z,f.z,e.z,d.z,b))});THREE.BoxGeometry=function(a,i,e,b,h,d){THREE.Geometry.call(this);this.type="BoxGeometry";this.parameters={width:a,height:i,depth:e,widthSegments:b,heightSegments:h,depthSegments:d};this.widthSegments=b||1;this.heightSegments=h||1;this.depthSegments=d||1;var k=this;var j=a/2;var g=i/2;var c=e/2;f("z","y",-1,-1,e,i,j,0);f("z","y",1,-1,e,i,-j,1);f("x","z",1,1,a,e,g,2);f("x","z",1,-1,a,e,-g,3);f("x","y",1,-1,a,i,c,4);f("x","y",-1,-1,a,i,-c,5);function f(E,D,l,s,G,F,V,A){var C,q,p,K=k.widthSegments,I=k.heightSegments,r=G/2,o=F/2,t=k.vertices.length;if((E==="x"&&D==="y")||(E==="y"&&D==="x")){C="z"}else{if((E==="x"&&D==="z")||(E==="z"&&D==="x")){C="y";I=k.depthSegments}else{if((E==="z"&&D==="y")||(E==="y"&&D==="z")){C="x";K=k.depthSegments}}}var M=K+1,n=I+1,U=G/K,P=F/I,T=new THREE.Vector3();T[C]=V>0?1:-1;for(p=0;p<n;p++){for(q=0;q<M;q++){var m=new THREE.Vector3();m[E]=(q*U-r)*l;m[D]=(p*P-o)*s;m[C]=V;k.vertices.push(m)}}for(p=0;p<I;p++){for(q=0;q<K;q++){var S=q+M*p;var R=q+M*(p+1);var Q=(q+1)+M*(p+1);var O=(q+1)+M*p;var N=new THREE.Vector2(q/K,1-p/I);var L=new THREE.Vector2(q/K,1-(p+1)/I);var J=new THREE.Vector2((q+1)/K,1-(p+1)/I);var H=new THREE.Vector2((q+1)/K,1-p/I);var B=new THREE.Face3(S+t,R+t,O+t);B.normal.copy(T);B.vertexNormals.push(T.clone(),T.clone(),T.clone());B.materialIndex=A;k.faces.push(B);k.faceVertexUvs[0].push([N,L,H]);B=new THREE.Face3(R+t,Q+t,O+t);B.normal.copy(T);B.vertexNormals.push(T.clone(),T.clone(),T.clone());B.materialIndex=A;k.faces.push(B);k.faceVertexUvs[0].push([L.clone(),J,H.clone()])}}}this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;THREE.BoxGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.BoxGeometry(a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments)};THREE.CubeGeometry=THREE.BoxGeometry;THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new THREE.CircleBufferGeometry(a,b,c,d))};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;THREE.CircleGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.CircleGeometry(a.radius,a.segments,a.thetaStart,a.thetaLength)};THREE.CircleBufferGeometry=function(h,f,b,a){THREE.BufferGeometry.call(this);this.type="CircleBufferGeometry";this.parameters={radius:h,segments:f,thetaStart:b,thetaLength:a};h=h||50;f=f!==undefined?Math.max(3,f):8;b=b!==undefined?b:0;a=a!==undefined?a:Math.PI*2;var j=f+2;var e=new Float32Array(j*3);var k=new Float32Array(j*3);var c=new Float32Array(j*2);k[2]=1;c[0]=0.5;c[1]=0.5;for(var n=0,d=3,m=2;n<=f;n++,d+=3,m+=2){var g=b+n/f*a;e[d]=h*Math.cos(g);e[d+1]=h*Math.sin(g);k[d+2]=1;c[m]=(e[d]/h+1)/2;c[m+1]=(e[d+1]/h+1)/2}var l=[];for(var d=1;d<=f;d++){l.push(d,d+1,0)}this.setIndex(new THREE.BufferAttribute(new Uint16Array(l),1));this.addAttribute("position",new THREE.BufferAttribute(e,3));this.addAttribute("normal",new THREE.BufferAttribute(k,3));this.addAttribute("uv",new THREE.BufferAttribute(c,2));this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),h)};THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry;THREE.CircleBufferGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.CircleBufferGeometry(a.radius,a.segments,a.thetaStart,a.thetaLength)};THREE.CylinderGeometry=function(l,N,C,e,A,K,g,D){THREE.Geometry.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:l,radiusBottom:N,height:C,radialSegments:e,heightSegments:A,openEnded:K,thetaStart:g,thetaLength:D};l=l!==undefined?l:20;N=N!==undefined?N:20;C=C!==undefined?C:100;e=e||8;A=A||1;K=K!==undefined?K:false;g=g!==undefined?g:0;D=D!==undefined?D:2*Math.PI;var E=C/2;var q,p,h=[],r=[];for(p=0;p<=A;p++){var B=[];var M=[];var s=p/A;var f=s*(N-l)+l;for(q=0;q<=e;q++){var t=q/e;var I=new THREE.Vector3();I.x=f*Math.sin(t*D+g);I.y=-s*C+E;I.z=f*Math.cos(t*D+g);this.vertices.push(I);B.push(this.vertices.length-1);M.push(new THREE.Vector2(t,1-s))}h.push(B);r.push(M)}var G=(N-l)/C;var n,k;for(q=0;q<e;q++){if(l!==0){n=this.vertices[h[0][q]].clone();k=this.vertices[h[0][q+1]].clone()}else{n=this.vertices[h[1][q]].clone();k=this.vertices[h[1][q+1]].clone()}n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*G).normalize();k.setY(Math.sqrt(k.x*k.x+k.z*k.z)*G).normalize();for(p=0;p<A;p++){var d=h[p][q];var c=h[p+1][q];var b=h[p+1][q+1];var a=h[p][q+1];var o=n.clone();var m=n.clone();var j=k.clone();var i=k.clone();var L=r[p][q].clone();var J=r[p+1][q].clone();var H=r[p+1][q+1].clone();var F=r[p][q+1].clone();this.faces.push(new THREE.Face3(d,c,a,[o,m,i]));this.faceVertexUvs[0].push([L,J,F]);this.faces.push(new THREE.Face3(c,b,a,[m.clone(),j,i.clone()]));this.faceVertexUvs[0].push([J.clone(),H,F.clone()])}}if(K===false&&l>0){this.vertices.push(new THREE.Vector3(0,E,0));for(q=0;q<e;q++){var d=h[0][q];var c=h[0][q+1];var b=this.vertices.length-1;var o=new THREE.Vector3(0,1,0);var m=new THREE.Vector3(0,1,0);var j=new THREE.Vector3(0,1,0);var L=r[0][q].clone();var J=r[0][q+1].clone();var H=new THREE.Vector2(J.x,0);this.faces.push(new THREE.Face3(d,c,b,[o,m,j],undefined,1));this.faceVertexUvs[0].push([L,J,H])}}if(K===false&&N>0){this.vertices.push(new THREE.Vector3(0,-E,0));for(q=0;q<e;q++){var d=h[A][q+1];var c=h[A][q];var b=this.vertices.length-1;var o=new THREE.Vector3(0,-1,0);var m=new THREE.Vector3(0,-1,0);var j=new THREE.Vector3(0,-1,0);var L=r[A][q+1].clone();var J=r[A][q].clone();var H=new THREE.Vector2(J.x,1);this.faces.push(new THREE.Face3(d,c,b,[o,m,j],undefined,2));this.faceVertexUvs[0].push([L,J,H])}}this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.CylinderGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.CylinderGeometry(a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)};THREE.EdgesGeometry=function(c,k){THREE.BufferGeometry.call(this);k=(k!==undefined)?k:1;var u=Math.cos(THREE.Math.degToRad(k));var d=[0,0],a={};function o(i,h){return i-h}var m=["a","b","c"];var g;if(c instanceof THREE.BufferGeometry){g=new THREE.Geometry();g.fromBufferGeometry(c)}else{g=c.clone()}g.mergeVertices();g.computeFaceNormals();var e=g.vertices;var b=g.faces;for(var r=0,n=b.length;r<n;r++){var f=b[r];for(var p=0;p<3;p++){d[0]=f[m[p]];d[1]=f[m[(p+1)%3]];d.sort(o);var v=d.toString();if(a[v]===undefined){a[v]={vert1:d[0],vert2:d[1],face1:r,face2:undefined}}else{a[v].face2=r}}}var q=[];for(var v in a){var s=a[v];if(s.face2===undefined||b[s.face1].normal.dot(b[s.face2].normal)<=u){var t=e[s.vert1];q.push(t.x);q.push(t.y);q.push(t.z);t=e[s.vert2];q.push(t.x);q.push(t.y);q.push(t.z)}}this.addAttribute("position",new THREE.BufferAttribute(new Float32Array(q),3))};THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry;THREE.ExtrudeGeometry=function(a,b){if(typeof(a)==="undefined"){a=[];return}THREE.Geometry.call(this);this.type="ExtrudeGeometry";a=Array.isArray(a)?a:[a];this.addShapeList(a,b);this.computeFaceNormals()};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(b,d){var a=b.length;for(var e=0;e<a;e++){var c=b[e];this.addShape(c,d)}};THREE.ExtrudeGeometry.prototype.addShape=function(D,I){var f=I.amount!==undefined?I.amount:100;var e=I.bevelThickness!==undefined?I.bevelThickness:6;var J=I.bevelSize!==undefined?I.bevelSize:e-2;var A=I.bevelSegments!==undefined?I.bevelSegments:3;var a=I.bevelEnabled!==undefined?I.bevelEnabled:true;var H=I.curveSegments!==undefined?I.curveSegments:12;var P=I.steps!==undefined?I.steps:1;var p=I.extrudePath;var N,q=false;var C=I.UVGenerator!==undefined?I.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;var u,R,V,aj;if(p){N=p.getSpacedPoints(P);q=true;a=false;u=I.frames!==undefined?I.frames:new THREE.TubeGeometry.FrenetFrames(p,P,false);R=new THREE.Vector3();V=new THREE.Vector3();aj=new THREE.Vector3()}if(!a){A=0;e=0;J=0}var am,ah,ai;var Q=this;var O=this.vertices.length;var B=D.extractPoints(H);var c=B.shape;var F=B.holes;var Y=!THREE.ShapeUtils.isClockWise(c);if(Y){c=c.reverse();for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];if(THREE.ShapeUtils.isClockWise(am)){F[ah]=am.reverse()}}Y=false}var o=THREE.ShapeUtils.triangulateShape(c,F);var aa=c;for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];c=c.concat(am)}function K(i,h,b){if(!h){console.error("THREE.ExtrudeGeometry: vec does not exist")}return h.clone().multiplyScalar(b).add(i)}var al,Z,W,S,r,ab=c.length,n,m=o.length;function E(j,aq,ar){var aw,av,ax=1;var ao=j.x-aq.x,an=j.y-aq.y;var az=ar.x-j.x,ay=ar.y-j.y;var v=(ao*ao+an*an);var ap=(ao*ay-an*az);if(Math.abs(ap)>Number.EPSILON){var at=Math.sqrt(v);var b=Math.sqrt(az*az+ay*ay);var t=(aq.x-an/at);var s=(aq.y+ao/at);var i=(ar.x-ay/b);var h=(ar.y+az/b);var aA=((i-t)*ay-(h-s)*az)/(ao*ay-an*az);aw=(t+ao*aA-j.x);av=(s+an*aA-j.y);var au=(aw*aw+av*av);if(au<=2){return new THREE.Vector2(aw,av)}else{ax=Math.sqrt(au/2)}}else{var k=false;if(ao>Number.EPSILON){if(az>Number.EPSILON){k=true}}else{if(ao<-Number.EPSILON){if(az<-Number.EPSILON){k=true}}else{if(Math.sign(an)===Math.sign(ay)){k=true}}}if(k){aw=-an;av=ao;ax=Math.sqrt(v)}else{aw=ao;av=an;ax=Math.sqrt(v/2)}}return new THREE.Vector2(aw/ax,av/ax)}var ae=[];for(var ag=0,M=aa.length,ad=M-1,ac=ag+1;ag<M;ag++,ad++,ac++){if(ad===M){ad=0}if(ac===M){ac=0}ae[ag]=E(aa[ag],aa[ad],aa[ac])}var L=[],U,d=ae.concat();for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];U=[];for(ag=0,M=am.length,ad=M-1,ac=ag+1;ag<M;ag++,ad++,ac++){if(ad===M){ad=0}if(ac===M){ac=0}U[ag]=E(am[ag],am[ad],am[ac])}L.push(U);d=d.concat(U)}for(al=0;al<A;al++){W=al/A;S=e*(1-W);Z=J*(Math.sin(W*Math.PI/2));for(ag=0,M=aa.length;ag<M;ag++){r=K(aa[ag],ae[ag],Z);T(r.x,r.y,-S)}for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];U=L[ah];for(ag=0,M=am.length;ag<M;ag++){r=K(am[ag],U[ag],Z);T(r.x,r.y,-S)}}}Z=J;for(ag=0;ag<ab;ag++){r=a?K(c[ag],d[ag],Z):c[ag];if(!q){T(r.x,r.y,0)}else{V.copy(u.normals[0]).multiplyScalar(r.x);R.copy(u.binormals[0]).multiplyScalar(r.y);aj.copy(N[0]).add(V).add(R);T(aj.x,aj.y,aj.z)}}var X;for(X=1;X<=P;X++){for(ag=0;ag<ab;ag++){r=a?K(c[ag],d[ag],Z):c[ag];if(!q){T(r.x,r.y,f/P*X)}else{V.copy(u.normals[X]).multiplyScalar(r.x);R.copy(u.binormals[X]).multiplyScalar(r.y);aj.copy(N[X]).add(V).add(R);T(aj.x,aj.y,aj.z)}}}for(al=A-1;al>=0;al--){W=al/A;S=e*(1-W);Z=J*Math.sin(W*Math.PI/2);for(ag=0,M=aa.length;ag<M;ag++){r=K(aa[ag],ae[ag],Z);T(r.x,r.y,f+S)}for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];U=L[ah];for(ag=0,M=am.length;ag<M;ag++){r=K(am[ag],U[ag],Z);if(!q){T(r.x,r.y,f+S)}else{T(r.x,r.y+N[P-1].y,N[P-1].x+S)}}}}G();ak();function G(){if(a){var b=0;var h=ab*b;for(ag=0;ag<m;ag++){n=o[ag];l(n[2]+h,n[1]+h,n[0]+h)}b=P+A*2;h=ab*b;for(ag=0;ag<m;ag++){n=o[ag];l(n[0]+h,n[1]+h,n[2]+h)}}else{for(ag=0;ag<m;ag++){n=o[ag];l(n[2],n[1],n[0])}for(ag=0;ag<m;ag++){n=o[ag];l(n[0]+ab*P,n[1]+ab*P,n[2]+ab*P)}}}function ak(){var b=0;af(aa,b);b+=aa.length;for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];af(am,b);b+=am.length}}function af(ap,h){var an,v;ag=ap.length;while(--ag>=0){an=ag;v=ag-1;if(v<0){v=ap.length-1}var av=0,i=P+A*2;for(av=0;av<i;av++){var ao=ab*av;var t=ab*(av+1);var au=h+an+ao,at=h+v+ao,ar=h+v+t,aq=h+an+t;g(au,at,ar,aq,ap,av,i,an,v)}}}function T(b,i,h){Q.vertices.push(new THREE.Vector3(b,i,h))}function l(i,h,k){i+=O;h+=O;k+=O;Q.faces.push(new THREE.Face3(i,h,k,null,null,0));var j=C.generateTopUV(Q,i,h,k);Q.faceVertexUvs[0].push(j)}function g(ao,an,t,s,h,j,ap,v,k){ao+=O;an+=O;t+=O;s+=O;Q.faces.push(new THREE.Face3(ao,an,s,null,null,1));Q.faces.push(new THREE.Face3(an,t,s,null,null,1));var i=C.generateSideWallUV(Q,ao,an,t,s);Q.faceVertexUvs[0].push([i[0],i[1],i[3]]);Q.faceVertexUvs[0].push([i[1],i[2],i[3]])}};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(j,i,h,g){var f=j.vertices;var e=f[i];var d=f[h];var k=f[g];return[new THREE.Vector2(e.x,e.y),new THREE.Vector2(d.x,d.y),new THREE.Vector2(k.x,k.y)]},generateSideWallUV:function(h,n,m,l,k){var e=h.vertices;var j=e[n];var i=e[m];var g=e[l];var f=e[k];if(Math.abs(j.y-i.y)<0.01){return[new THREE.Vector2(j.x,1-j.z),new THREE.Vector2(i.x,1-i.z),new THREE.Vector2(g.x,1-g.z),new THREE.Vector2(f.x,1-f.z)]}else{return[new THREE.Vector2(j.y,1-j.z),new THREE.Vector2(i.y,1-i.z),new THREE.Vector2(g.y,1-g.z),new THREE.Vector2(f.y,1-f.z)]}}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type="ShapeGeometry";if(Array.isArray(a)===false){a=[a]}this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(b,c){for(var d=0,a=b.length;d<a;d++){this.addShape(b[d],c)}return this};THREE.ShapeGeometry.prototype.addShape=function(e,g){if(g===undefined){g={}}var d=g.curveSegments!==undefined?g.curveSegments:12;var p=g.material;var t=g.UVGenerator===undefined?THREE.ExtrudeGeometry.WorldUVGenerator:g.UVGenerator;var s,r,q;var o=this.vertices.length;var v=e.extractPoints(d);var h=v.shape;var k=v.holes;var n=!THREE.ShapeUtils.isClockWise(h);if(n){h=h.reverse();for(s=0,r=k.length;s<r;s++){q=k[s];if(THREE.ShapeUtils.isClockWise(q)){k[s]=q.reverse()}}n=false}var f=THREE.ShapeUtils.triangulateShape(h,k);for(s=0,r=k.length;s<r;s++){q=k[s];h=h.concat(q)}var u,j=h.length;var m,D=f.length;for(s=0;s<j;s++){u=h[s];this.vertices.push(new THREE.Vector3(u.x,u.y,0))}for(s=0;s<D;s++){m=f[s];var C=m[0]+o;var B=m[1]+o;var A=m[2]+o;this.faces.push(new THREE.Face3(C,B,A,null,null,p));this.faceVertexUvs[0].push(t.generateTopUV(this,C,B,A))}};THREE.LatheGeometry=function(t,q,n,p){THREE.Geometry.call(this);this.type="LatheGeometry";this.parameters={points:t,segments:q,phiStart:n,phiLength:p};q=q||12;n=n||0;p=p||2*Math.PI;var E=1/(t.length-1);var D=1/q;for(var u=0,l=q;u<=l;u++){var g=n+u*D*p;var G=Math.cos(g),m=Math.sin(g);for(var r=0,A=t.length;r<A;r++){var o=t[r];var C=new THREE.Vector3();C.x=G*o.x-m*o.y;C.y=m*o.x+G*o.y;C.z=o.z;this.vertices.push(C)}}var e=t.length;for(var u=0,l=q;u<l;u++){for(var r=0,A=t.length-1;r<A;r++){var k=r+e*u;var I=k;var H=k+e;var G=k+1+e;var F=k+1;var B=u*D;var h=r*E;var v=B+D;var f=h+E;this.faces.push(new THREE.Face3(I,H,F));this.faceVertexUvs[0].push([new THREE.Vector2(B,h),new THREE.Vector2(v,h),new THREE.Vector2(B,f)]);this.faces.push(new THREE.Face3(H,G,F));this.faceVertexUvs[0].push([new THREE.Vector2(v,h),new THREE.Vector2(v,f),new THREE.Vector2(B,f)])}}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;THREE.PlaneGeometry=function(b,a,d,c){THREE.Geometry.call(this);this.type="PlaneGeometry";this.parameters={width:b,height:a,widthSegments:d,heightSegments:c};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(b,a,d,c))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;THREE.PlaneGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.PlaneGeometry(a.width,a.height,a.widthSegments,a.heightSegments)};THREE.PlaneBufferGeometry=function(t,r,f,q){THREE.BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:t,height:r,widthSegments:f,heightSegments:q};var j=t/2;var h=r/2;var A=Math.floor(f)||1;var v=Math.floor(q)||1;var B=A+1;var e=v+1;var H=t/A;var D=r/v;var m=new Float32Array(B*e*3);var s=new Float32Array(B*e*3);var p=new Float32Array(B*e*2);var l=0;var u=0;for(var g=0;g<e;g++){var n=g*D-h;for(var i=0;i<B;i++){var o=i*H-j;m[l]=o;m[l+1]=-n;s[l+2]=1;p[u]=i/A;p[u+1]=1-(g/v);l+=3;u+=2}}l=0;var k=new ((m.length/3)>65535?Uint32Array:Uint16Array)(A*v*6);for(var g=0;g<v;g++){for(var i=0;i<A;i++){var G=i+B*g;var F=i+B*(g+1);var E=(i+1)+B*(g+1);var C=(i+1)+B*g;k[l]=G;k[l+1]=F;k[l+2]=C;k[l+3]=F;k[l+4]=E;k[l+5]=C;l+=6}}this.setIndex(new THREE.BufferAttribute(k,1));this.addAttribute("position",new THREE.BufferAttribute(m,3));this.addAttribute("normal",new THREE.BufferAttribute(s,3));this.addAttribute("uv",new THREE.BufferAttribute(p,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;THREE.PlaneBufferGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.PlaneBufferGeometry(a.width,a.height,a.widthSegments,a.heightSegments)};THREE.RingGeometry=function(k,r,g,s,h,p){THREE.Geometry.call(this);this.type="RingGeometry";this.parameters={innerRadius:k,outerRadius:r,thetaSegments:g,phiSegments:s,thetaStart:h,thetaLength:p};k=k||0;r=r||50;h=h!==undefined?h:0;p=p!==undefined?p:Math.PI*2;g=g!==undefined?Math.max(3,g):8;s=s!==undefined?Math.max(1,s):8;var t,m,l=[],f=k,j=((r-k)/s);for(t=0;t<s+1;t++){for(m=0;m<g+1;m++){var u=new THREE.Vector3();var c=h+m/g*p;u.x=f*Math.cos(c);u.y=f*Math.sin(c);this.vertices.push(u);l.push(new THREE.Vector2((u.x/r+1)/2,(u.y/r+1)/2))}f+=j}var q=new THREE.Vector3(0,0,1);for(t=0;t<s;t++){var a=t*(g+1);for(m=0;m<g;m++){var c=m+a;var e=c;var d=c+g+1;var b=c+g+2;this.faces.push(new THREE.Face3(e,d,b,[q.clone(),q.clone(),q.clone()]));this.faceVertexUvs[0].push([l[e].clone(),l[d].clone(),l[b].clone()]);e=c;d=c+g+2;b=c+1;this.faces.push(new THREE.Face3(e,d,b,[q.clone(),q.clone(),q.clone()]));this.faceVertexUvs[0].push([l[e].clone(),l[d].clone(),l[b].clone()])}}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),f)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;THREE.RingGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.RingGeometry(a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength)};THREE.SphereGeometry=function(b,g,d,a,f,c,e){THREE.Geometry.call(this);this.type="SphereGeometry";this.parameters={radius:b,widthSegments:g,heightSegments:d,phiStart:a,phiLength:f,thetaStart:c,thetaLength:e};this.fromBufferGeometry(new THREE.SphereBufferGeometry(b,g,d,a,f,c,e))};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;THREE.SphereGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.SphereGeometry(a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength)};THREE.SphereBufferGeometry=function(f,e,s,B,G,g,F){THREE.BufferGeometry.call(this);this.type="SphereBufferGeometry";this.parameters={radius:f,widthSegments:e,heightSegments:s,phiStart:B,phiLength:G,thetaStart:g,thetaLength:F};f=f||50;e=Math.max(3,Math.floor(e)||8);s=Math.max(2,Math.floor(s)||6);B=B!==undefined?B:0;G=G!==undefined?G:Math.PI*2;g=g!==undefined?g:0;F=F!==undefined?F:Math.PI;var D=g+F;var o=((e+1)*(s+1));var k=new THREE.BufferAttribute(new Float32Array(o*3),3);var E=new THREE.BufferAttribute(new Float32Array(o*3),3);var n=new THREE.BufferAttribute(new Float32Array(o*2),2);var j=0,i=[],H=new THREE.Vector3();for(var l=0;l<=s;l++){var A=[];var p=l/s;for(var m=0;m<=e;m++){var q=m/e;var C=-f*Math.cos(B+q*G)*Math.sin(g+p*F);var t=f*Math.cos(g+p*F);var r=f*Math.sin(B+q*G)*Math.sin(g+p*F);H.set(C,t,r).normalize();k.setXYZ(j,C,t,r);E.setXYZ(j,H.x,H.y,H.z);n.setXY(j,q,1-p);A.push(j);j++}i.push(A)}var h=[];for(var l=0;l<s;l++){for(var m=0;m<e;m++){var d=i[l][m+1];var c=i[l][m];var b=i[l+1][m];var a=i[l+1][m+1];if(l!==0||g>0){h.push(d,c,a)}if(l!==s-1||D<Math.PI){h.push(c,b,a)}}}this.setIndex(new (k.count>65535?THREE.Uint32Attribute:THREE.Uint16Attribute)(h,1));this.addAttribute("position",k);this.addAttribute("normal",E);this.addAttribute("uv",n);this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),f)};THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry;THREE.SphereBufferGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.SphereBufferGeometry(a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength)};THREE.TorusGeometry=function(g,f,e,l,h){THREE.Geometry.call(this);this.type="TorusGeometry";this.parameters={radius:g,tube:f,radialSegments:e,tubularSegments:l,arc:h};g=g||100;f=f||40;e=e||8;l=l||6;h=h||Math.PI*2;var C=new THREE.Vector3(),m=[],p=[];for(var q=0;q<=e;q++){for(var r=0;r<=l;r++){var o=r/l*h;var n=q/e*Math.PI*2;C.x=g*Math.cos(o);C.y=g*Math.sin(o);var s=new THREE.Vector3();s.x=(g+f*Math.cos(n))*Math.cos(o);s.y=(g+f*Math.cos(n))*Math.sin(o);s.z=f*Math.sin(n);this.vertices.push(s);m.push(new THREE.Vector2(r/l,q/e));p.push(s.clone().sub(C).normalize())}}for(var q=1;q<=e;q++){for(var r=1;r<=l;r++){var D=(l+1)*q+r-1;var B=(l+1)*(q-1)+r-1;var A=(l+1)*(q-1)+r;var t=(l+1)*q+r;var k=new THREE.Face3(D,B,t,[p[D].clone(),p[B].clone(),p[t].clone()]);this.faces.push(k);this.faceVertexUvs[0].push([m[D].clone(),m[B].clone(),m[t].clone()]);k=new THREE.Face3(B,A,t,[p[B].clone(),p[A].clone(),p[t].clone()]);this.faces.push(k);this.faceVertexUvs[0].push([m[B].clone(),m[A].clone(),m[t].clone()])}}this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;THREE.TorusGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.TorusGeometry(a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc)};THREE.TorusKnotGeometry=function(s,r,m,B,F,E,f){THREE.Geometry.call(this);this.type="TorusKnotGeometry";this.parameters={radius:s,tube:r,radialSegments:m,tubularSegments:B,p:F,q:E,heightScale:f};s=s||100;r=r||40;m=m||64;B=B||8;F=F||2;E=E||3;f=f||1;var e=new Array(m);var o=new THREE.Vector3();var G=new THREE.Vector3();var T=new THREE.Vector3();for(var K=0;K<m;++K){e[K]=new Array(B);var D=K/m*2*F*Math.PI;var h=L(D,E,F,s,f);var g=L(D+0.01,E,F,s,f);o.subVectors(g,h);G.addVectors(g,h);T.crossVectors(o,G);G.crossVectors(T,o);T.normalize();G.normalize();for(var I=0;I<B;++I){var C=I/B*2*Math.PI;var l=-r*Math.cos(C);var k=r*Math.sin(C);var t=new THREE.Vector3();t.x=h.x+l*G.x+k*T.x;t.y=h.y+l*G.y+k*T.y;t.z=h.z+l*G.z+k*T.z;e[K][I]=this.vertices.push(t)-1}}for(var K=0;K<m;++K){for(var I=0;I<B;++I){var A=(K+1)%m;var H=(I+1)%B;var S=e[K][I];var R=e[A][I];var Q=e[A][H];var P=e[K][H];var O=new THREE.Vector2(K/m,I/B);var N=new THREE.Vector2((K+1)/m,I/B);var M=new THREE.Vector2((K+1)/m,(I+1)/B);var J=new THREE.Vector2(K/m,(I+1)/B);this.faces.push(new THREE.Face3(S,R,P));this.faceVertexUvs[0].push([O,N,J]);this.faces.push(new THREE.Face3(R,Q,P));this.faceVertexUvs[0].push([N.clone(),M,J.clone()])}}this.computeFaceNormals();this.computeVertexNormals();function L(U,p,v,q,a){var j=Math.cos(U);var V=Math.sin(U);var i=p/v*U;var n=Math.cos(i);var d=q*(2+n)*0.5*j;var c=q*(2+n)*V*0.5;var b=a*q*Math.sin(i)*0.5;return new THREE.Vector3(d,c,b)}};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;THREE.TorusKnotGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.TorusKnotGeometry(a.radius,a.tube,a.radialSegments,a.tubularSegments,a.p,a.q,a.heightScale)};THREE.TubeGeometry=function(K,h,J,E,I,S){THREE.Geometry.call(this);this.type="TubeGeometry";this.parameters={path:K,segments:h,radius:J,radialSegments:E,closed:I,taper:S};h=h||64;J=J||1;E=E||8;I=I||false;S=S||THREE.TubeGeometry.NoTaper;var G=[];var A=this,C,H,B,e=h+1,F,D,L,o,n,t,f=new THREE.Vector3(),N,M,s,g,W,V,U,T,R,Q,P,O;var p=new THREE.TubeGeometry.FrenetFrames(K,h,I),q=p.tangents,m=p.normals,l=p.binormals;this.tangents=q;this.normals=m;this.binormals=l;function k(a,c,b){return A.vertices.push(new THREE.Vector3(a,c,b))-1}for(N=0;N<e;N++){G[N]=[];F=N/(e-1);t=K.getPointAt(F);C=q[N];H=m[N];B=l[N];L=J*S(F);for(M=0;M<E;M++){D=M/E*2*Math.PI;o=-L*Math.cos(D);n=L*Math.sin(D);f.copy(t);f.x+=o*H.x+n*B.x;f.y+=o*H.y+n*B.y;f.z+=o*H.z+n*B.z;G[N][M]=k(f.x,f.y,f.z)}}for(N=0;N<h;N++){for(M=0;M<E;M++){s=(I)?(N+1)%h:N+1;g=(M+1)%E;W=G[N][M];V=G[s][M];U=G[s][g];T=G[N][g];R=new THREE.Vector2(N/h,M/E);Q=new THREE.Vector2((N+1)/h,M/E);P=new THREE.Vector2((N+1)/h,(M+1)/E);O=new THREE.Vector2(N/h,(M+1)/E);this.faces.push(new THREE.Face3(W,V,T));this.faceVertexUvs[0].push([R,Q,O]);this.faces.push(new THREE.Face3(V,U,T));this.faceVertexUvs[0].push([Q.clone(),P,O.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.prototype.clone=function(){return new this.constructor(this.parameters.path,this.parameters.segments,this.parameters.radius,this.parameters.radialSegments,this.parameters.closed,this.parameters.taper)};THREE.TubeGeometry.NoTaper=function(a){return 1};THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)};THREE.TubeGeometry.FrenetFrames=function(k,m,c){var s=new THREE.Vector3(),l=[],j=[],d=[],h=new THREE.Vector3(),o=new THREE.Matrix4(),b=m+1,e,a,r,q,p,n,g;this.tangents=l;this.normals=j;this.binormals=d;for(n=0;n<b;n++){g=n/(b-1);l[n]=k.getTangentAt(g);l[n].normalize()}f();function f(){j[0]=new THREE.Vector3();d[0]=new THREE.Vector3();a=Number.MAX_VALUE;r=Math.abs(l[0].x);q=Math.abs(l[0].y);p=Math.abs(l[0].z);if(r<=a){a=r;s.set(1,0,0)}if(q<=a){a=q;s.set(0,1,0)}if(p<=a){s.set(0,0,1)}h.crossVectors(l[0],s).normalize();j[0].crossVectors(l[0],h);d[0].crossVectors(l[0],j[0])}for(n=1;n<b;n++){j[n]=j[n-1].clone();d[n]=d[n-1].clone();h.crossVectors(l[n-1],l[n]);if(h.length()>Number.EPSILON){h.normalize();e=Math.acos(THREE.Math.clamp(l[n-1].dot(l[n]),-1,1));j[n].applyMatrix4(o.makeRotationAxis(h,e))}d[n].crossVectors(l[n],j[n])}if(c){e=Math.acos(THREE.Math.clamp(j[0].dot(j[b-1]),-1,1));e/=(b-1);if(l[0].dot(h.crossVectors(j[0],j[b-1]))>0){e=-e}for(n=1;n<b;n++){j[n].applyMatrix4(o.makeRotationAxis(l[n],e*n));d[n].crossVectors(l[n],j[n])}}};THREE.PolyhedronGeometry=function(n,m,k,H){THREE.Geometry.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:n,indices:m,radius:k,detail:H};k=k||1;H=H||0;var o=this;for(var C=0,v=n.length;C<v;C+=3){e(new THREE.Vector3(n[C],n[C+1],n[C+2]))}var t=this.vertices;var c=[];for(var C=0,A=0,v=m.length;C<v;C+=3,A++){var g=t[m[C]];var f=t[m[C+1]];var b=t[m[C+2]];c[A]=new THREE.Face3(g.index,f.index,b.index,[g.clone(),f.clone(),b.clone()],undefined,A)}var s=new THREE.Vector3();for(var C=0,v=c.length;C<v;C++){q(c[C],H)}for(var C=0,v=this.faceVertexUvs[0].length;C<v;C++){var r=this.faceVertexUvs[0][C];var G=r[0].x;var F=r[1].x;var E=r[2].x;var B=Math.max(G,F,E);var u=Math.min(G,F,E);if(B>0.9&&u<0.1){if(G<0.2){r[0].x+=1}if(F<0.2){r[1].x+=1}if(E<0.2){r[2].x+=1}}}for(var C=0,v=this.vertices.length;C<v;C++){this.vertices[C].multiplyScalar(k)}this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),k);function e(i){var p=i.normalize().clone();p.index=o.vertices.push(p)-1;var l=D(i)/2/Math.PI+0.5;var j=d(i)/Math.PI+0.5;p.uv=new THREE.Vector2(l,1-j);return p}function h(J,I,p,i){var l=new THREE.Face3(J.index,I.index,p.index,[J.clone(),I.clone(),p.clone()],undefined,i);o.faces.push(l);s.copy(J).add(I).add(p).divideScalar(3);var j=D(s);o.faceVertexUvs[0].push([a(J.uv,J,j),a(I.uv,I,j),a(p.uv,p,j)])}function q(M,K){var O=Math.pow(2,K);var Q=e(o.vertices[M.a]);var P=e(o.vertices[M.b]);var N=e(o.vertices[M.c]);var S=[];var R=M.materialIndex;for(var J=0;J<=O;J++){S[J]=[];var L=e(Q.clone().lerp(N,J/O));var l=e(P.clone().lerp(N,J/O));var T=O-J;for(var I=0;I<=T;I++){if(I===0&&J===O){S[J][I]=L}else{S[J][I]=e(L.clone().lerp(l,I/T))}}}for(var J=0;J<O;J++){for(var I=0;I<2*(O-J)-1;I++){var p=Math.floor(I/2);if(I%2===0){h(S[J][p+1],S[J+1][p],S[J][p],R)}else{h(S[J][p+1],S[J+1][p+1],S[J+1][p],R)}}}}function D(i){return Math.atan2(i.z,-i.x)}function d(i){return Math.atan2(-i.y,Math.sqrt((i.x*i.x)+(i.z*i.z)))}function a(j,i,l){if((l<0)&&(j.x===1)){j=new THREE.Vector2(j.x-1,j.y)}if((i.x===0)&&(i.z===0)){j=new THREE.Vector2(l/2/Math.PI+0.5,j.y)}return j.clone()}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;THREE.PolyhedronGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.PolyhedronGeometry(a.vertices,a.indices,a.radius,a.detail)};THREE.DodecahedronGeometry=function(a,d){var c=(1+Math.sqrt(5))/2;var e=1/c;var b=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-e,-c,0,-e,c,0,e,-c,0,e,c,-e,-c,0,-e,c,0,e,-c,0,e,c,0,-c,0,-e,c,0,-e,-c,0,e,c,0,e];var f=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];THREE.PolyhedronGeometry.call(this,b,f,a,d);this.type="DodecahedronGeometry";this.parameters={radius:a,detail:d}};THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;THREE.DodecahedronGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.DodecahedronGeometry(a.radius,a.detail)};THREE.IcosahedronGeometry=function(a,d){var c=(1+Math.sqrt(5))/2;var b=[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1];var e=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];THREE.PolyhedronGeometry.call(this,b,e,a,d);this.type="IcosahedronGeometry";this.parameters={radius:a,detail:d}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.IcosahedronGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.IcosahedronGeometry(a.radius,a.detail)};THREE.OctahedronGeometry=function(a,c){var b=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];var d=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];THREE.PolyhedronGeometry.call(this,b,d,a,c);this.type="OctahedronGeometry";this.parameters={radius:a,detail:c}};THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;THREE.OctahedronGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.OctahedronGeometry(a.radius,a.detail)};THREE.TetrahedronGeometry=function(a,c){var b=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];var d=[2,1,0,0,3,2,1,3,0,2,3,1];THREE.PolyhedronGeometry.call(this,b,d,a,c);this.type="TetrahedronGeometry";this.parameters={radius:a,detail:c}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;THREE.TetrahedronGeometry.prototype.clone=function(){var a=this.parameters;return new THREE.TetrahedronGeometry(a.radius,a.detail)};THREE.ParametricGeometry=function(g,f,C){THREE.Geometry.call(this);this.type="ParametricGeometry";this.parameters={func:g,slices:f,stacks:C};var G=this.vertices;var e=this.faces;var h=this.faceVertexUvs[0];var q,n,m;var l,k;var F=f+1;for(q=0;q<=C;q++){k=q/C;for(n=0;n<=f;n++){l=n/f;m=g(l,k);G.push(m)}}var E,D,B,A;var t,s,r,o;for(q=0;q<C;q++){for(n=0;n<f;n++){E=q*F+n;D=q*F+n+1;B=(q+1)*F+n+1;A=(q+1)*F+n;t=new THREE.Vector2(n/f,q/C);s=new THREE.Vector2((n+1)/f,q/C);r=new THREE.Vector2((n+1)/f,(q+1)/C);o=new THREE.Vector2(n/f,(q+1)/C);e.push(new THREE.Face3(E,D,A));h.push([t,s,o]);e.push(new THREE.Face3(D,B,A));h.push([s.clone(),r,o.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;THREE.WireframeGeometry=function(f){THREE.BufferGeometry.call(this);var k=[0,0],a={};function E(j,i){return j-i}var A=["a","b","c"];if(f instanceof THREE.Geometry){var n=f.vertices;var b=f.faces;var c=0;var d=new Uint32Array(6*b.length);for(var H=0,C=b.length;H<C;H++){var s=b[H];for(var F=0;F<3;F++){k[0]=s[A[F]];k[1]=s[A[(F+1)%3]];k.sort(E);var J=k.toString();if(a[J]===undefined){d[2*c]=k[0];d[2*c+1]=k[1];a[J]=true;c++}}}var G=new Float32Array(c*2*3);for(var H=0,C=c;H<C;H++){for(var F=0;F<2;F++){var I=n[d[2*H+F]];var q=6*H+3*F;G[q+0]=I.x;G[q+1]=I.y;G[q+2]=I.z}}this.addAttribute("position",new THREE.BufferAttribute(G,3))}else{if(f instanceof THREE.BufferGeometry){if(f.index!==null){var h=f.index.array;var n=f.attributes.position;var u=f.drawcalls;var c=0;if(u.length===0){f.addGroup(0,h.length)}var d=new Uint32Array(2*h.length);for(var B=0,v=u.length;B<v;++B){var D=u[B];var e=D.start;var p=D.count;for(var H=e,t=e+p;H<t;H+=3){for(var F=0;F<3;F++){k[0]=h[H+F];k[1]=h[H+(F+1)%3];k.sort(E);var J=k.toString();if(a[J]===undefined){d[2*c]=k[0];d[2*c+1]=k[1];a[J]=true;c++}}}}var G=new Float32Array(c*2*3);for(var H=0,C=c;H<C;H++){for(var F=0;F<2;F++){var q=6*H+3*F;var g=d[2*H+F];G[q+0]=n.getX(g);G[q+1]=n.getY(g);G[q+2]=n.getZ(g)}}this.addAttribute("position",new THREE.BufferAttribute(G,3))}else{var n=f.attributes.position.array;var c=n.length/3;var r=c/3;var G=new Float32Array(c*2*3);for(var H=0,C=r;H<C;H++){for(var F=0;F<3;F++){var q=18*H+6*F;var m=9*H+3*F;G[q+0]=n[m];G[q+1]=n[m+1];G[q+2]=n[m+2];var g=9*H+3*((F+1)%3);G[q+3]=n[g];G[q+4]=n[g+1];G[q+5]=n[g+2]}}this.addAttribute("position",new THREE.BufferAttribute(G,3))}}}};THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry;THREE.AxisHelper=function(c){c=c||1;var b=new Float32Array([0,0,0,c,0,0,0,0,0,0,c,0,0,0,0,0,0,c]);var a=new Float32Array([1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1]);var e=new THREE.BufferGeometry();e.addAttribute("position",new THREE.BufferAttribute(b,3));e.addAttribute("color",new THREE.BufferAttribute(a,3));var d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,e,d)};THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;THREE.ArrowHelper=(function(){var a=new THREE.Geometry();a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var c=new THREE.CylinderGeometry(0,0.5,1,5,1);c.translate(0,-0.5,0);return function b(h,g,i,f,e,d){THREE.Object3D.call(this);if(f===undefined){f=16776960}if(i===undefined){i=1}if(e===undefined){e=0.2*i}if(d===undefined){d=0.2*e}this.position.copy(g);if(e<i){this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:f}));this.line.matrixAutoUpdate=false;this.add(this.line)}this.cone=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:f}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(h);this.setLength(i,e,d)}}());THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;THREE.ArrowHelper.prototype.setDirection=(function(){var b=new THREE.Vector3();var c;return function a(d){if(d.y>0.99999){this.quaternion.set(0,0,0,1)}else{if(d.y<-0.99999){this.quaternion.set(1,0,0,0)}else{b.set(d.z,0,-d.x).normalize();c=Math.acos(d.y);this.quaternion.setFromAxisAngle(b,c)}}}}());THREE.ArrowHelper.prototype.setLength=function(c,b,a){if(b===undefined){b=0.2*c}if(a===undefined){a=0.2*b}if(b<c){this.line.scale.set(1,c-b,1);this.line.updateMatrix()}this.cone.scale.set(a,b,a);this.cone.position.y=c;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(a){if(this.line!==undefined){this.line.material.color.set(a)}this.cone.material.color.set(a)};THREE.BoxHelper=function(b){var d=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var a=new Float32Array(8*3);var c=new THREE.BufferGeometry();c.setIndex(new THREE.BufferAttribute(d,1));c.addAttribute("position",new THREE.BufferAttribute(a,3));THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:16776960}));if(b!==undefined){this.update(b)}};THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;THREE.BoxHelper.prototype.update=(function(){var a=new THREE.Box3();return function(d){a.setFromObject(d);if(a.empty()){return}var e=a.min;var c=a.max;var b=this.geometry.attributes.position;var f=b.array;f[0]=c.x;f[1]=c.y;f[2]=c.z;f[3]=e.x;f[4]=c.y;f[5]=c.z;f[6]=e.x;f[7]=e.y;f[8]=c.z;f[9]=c.x;f[10]=e.y;f[11]=c.z;f[12]=c.x;f[13]=c.y;f[14]=e.z;f[15]=e.x;f[16]=c.y;f[17]=e.z;f[18]=e.x;f[19]=e.y;f[20]=e.z;f[21]=c.x;f[22]=e.y;f[23]=e.z;b.needsUpdate=true;this.geometry.computeBoundingSphere()}})();THREE.BoundingBoxHelper=function(b,c){var a=(c!==undefined)?c:8947848;this.object=b;this.box=new THREE.Box3();THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:a,wireframe:true}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(e){var h=new THREE.Geometry();var f=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});var g={};var d=16755200;var k=16711680;var b=43775;var i=16777215;var c=3355443;j("n1","n2",d);j("n2","n4",d);j("n4","n3",d);j("n3","n1",d);j("f1","f2",d);j("f2","f4",d);j("f4","f3",d);j("f3","f1",d);j("n1","f1",d);j("n2","f2",d);j("n3","f3",d);j("n4","f4",d);j("p","n1",k);j("p","n2",k);j("p","n3",k);j("p","n4",k);j("u1","u2",b);j("u2","u3",b);j("u3","u1",b);j("c","t",i);j("p","c",c);j("cn1","cn2",c);j("cn3","cn4",c);j("cf1","cf2",c);j("cf3","cf4",c);function j(m,l,n){a(m,n);a(l,n)}function a(m,l){h.vertices.push(new THREE.Vector3());h.colors.push(new THREE.Color(l));if(g[m]===undefined){g[m]=[]}g[m].push(h.vertices.length-1)}THREE.LineSegments.call(this,h,f);this.camera=e;this.camera.updateProjectionMatrix();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=g;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;THREE.CameraHelper.prototype.update=function(){var e,b;var a=new THREE.Vector3();var d=new THREE.Camera();function c(g,f,m,l){a.set(f,m,l).unproject(d);var k=b[g];if(k!==undefined){for(var j=0,h=k.length;j<h;j++){e.vertices[k[j]].copy(a)}}}return function(){e=this.geometry;b=this.pointMap;var f=1,g=1;d.projectionMatrix.copy(this.camera.projectionMatrix);c("c",0,0,-1);c("t",0,0,1);c("n1",-f,-g,-1);c("n2",f,-g,-1);c("n3",-f,g,-1);c("n4",f,g,-1);c("f1",-f,-g,1);c("f2",f,-g,1);c("f3",-f,g,1);c("f4",f,g,1);c("u1",f*0.7,g*1.1,-1);c("u2",-f*0.7,g*1.1,-1);c("u3",0,g*2,-1);c("cf1",-f,0,1);c("cf2",f,0,1);c("cf3",0,-g,1);c("cf4",0,g,1);c("cn1",-f,0,-1);c("cn2",f,0,-1);c("cn3",0,-g,-1);c("cn4",0,g,-1);e.verticesNeedUpdate=true}}();THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;b=b||1;var d=new THREE.Geometry();d.vertices.push(new THREE.Vector3(-b,b,0),new THREE.Vector3(b,b,0),new THREE.Vector3(b,-b,0),new THREE.Vector3(-b,-b,0),new THREE.Vector3(-b,b,0));var c=new THREE.LineBasicMaterial({fog:false});c.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(d,c);this.add(this.lightPlane);d=new THREE.Geometry();d.vertices.push(new THREE.Vector3(),new THREE.Vector3());c=new THREE.LineBasicMaterial({fog:false});c.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(d,c);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var c=new THREE.Vector3();var b=new THREE.Vector3();var a=new THREE.Vector3();return function(){c.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);a.subVectors(b,c);this.lightPlane.lookAt(a);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(a);this.targetLine.geometry.verticesNeedUpdate=true;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.EdgesHelper=function(c,d,b){var a=(d!==undefined)?d:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(c.geometry,b),new THREE.LineBasicMaterial({color:a}));this.matrix=c.matrixWorld;this.matrixAutoUpdate=false};THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;THREE.FaceNormalsHelper=function(c,j,b,h){this.object=c;this.size=(j!==undefined)?j:1;var d=(b!==undefined)?b:16776960;var a=(h!==undefined)?h:1;var i=0;var f=this.object.geometry;if(f instanceof THREE.Geometry){i=f.faces.length}else{console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.")}var g=new THREE.BufferGeometry();var e=new THREE.Float32Attribute(i*2*3,3);g.addAttribute("position",e);THREE.LineSegments.call(this,g,new THREE.LineBasicMaterial({color:d,linewidth:a}));this.matrixAutoUpdate=false;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;THREE.FaceNormalsHelper.prototype.update=(function(){var d=new THREE.Vector3();var b=new THREE.Vector3();var a=new THREE.Matrix3();return function c(){this.object.updateMatrixWorld(true);a.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld;var j=this.geometry.attributes.position;var k=this.object.geometry;var n=k.vertices;var f=k.faces;var p=0;for(var h=0,g=f.length;h<g;h++){var o=f[h];var m=o.normal;d.copy(n[o.a]).add(n[o.b]).add(n[o.c]).divideScalar(3).applyMatrix4(e);b.copy(m).applyMatrix3(a).normalize().multiplyScalar(this.size).add(d);j.setXYZ(p,d.x,d.y,d.z);p=p+1;j.setXYZ(p,b.x,b.y,b.z);p=p+1}j.needsUpdate=true;return this}}());THREE.GridHelper=function(c,e){var f=new THREE.Geometry();var d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var b=-c;b<=c;b+=e){f.vertices.push(new THREE.Vector3(-c,0,b),new THREE.Vector3(c,0,b),new THREE.Vector3(b,0,-c),new THREE.Vector3(b,0,c));var a=b===0?this.color1:this.color2;f.colors.push(a,a,a,a)}THREE.LineSegments.call(this,f,d)};THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(b,a){this.color1.set(b);this.color2.set(a);this.geometry.colorsNeedUpdate=true};THREE.HemisphereLightHelper=function(a,f){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.colors=[new THREE.Color(),new THREE.Color()];var e=new THREE.SphereGeometry(f,4,2);e.rotateX(-Math.PI/2);for(var c=0,b=8;c<b;c++){e.faces[c].color=this.colors[c<4?0:1]}var d=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:true});this.lightSphere=new THREE.Mesh(e,d);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3();return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=true}}();THREE.PointLightHelper=function(a,d){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(d,4,2);var b=new THREE.MeshBasicMaterial({wireframe:true,fog:false});b.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,b);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);var e=new THREE.Geometry();for(var b=0;b<this.bones.length;b++){var d=this.bones[b];if(d.parent instanceof THREE.Bone){e.vertices.push(new THREE.Vector3());e.vertices.push(new THREE.Vector3());e.colors.push(new THREE.Color(0,0,1));e.colors.push(new THREE.Color(0,1,0))}}e.dynamic=true;var c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:false,depthWrite:false,transparent:true});THREE.LineSegments.call(this,e,c);this.root=a;this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var c=[];if(a instanceof THREE.Bone){c.push(a)}for(var b=0;b<a.children.length;b++){c.push.apply(c,this.getBoneList(a.children[b]))}return c};THREE.SkeletonHelper.prototype.update=function(){var f=this.geometry;var e=new THREE.Matrix4().getInverse(this.root.matrixWorld);var c=new THREE.Matrix4();var a=0;for(var b=0;b<this.bones.length;b++){var d=this.bones[b];if(d.parent instanceof THREE.Bone){c.multiplyMatrices(e,d.matrixWorld);f.vertices[a].setFromMatrixPosition(c);c.multiplyMatrices(e,d.parent.matrixWorld);f.vertices[a+1].setFromMatrixPosition(c);a+=2}}f.verticesNeedUpdate=true;f.computeBoundingSphere()};THREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;var c=new THREE.CylinderGeometry(0,1,1,8,1,true);c.translate(0,-0.5,0);c.rotateX(-Math.PI/2);var b=new THREE.MeshBasicMaterial({wireframe:true,fog:false});this.cone=new THREE.Mesh(c,b);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3();var b=new THREE.Vector3();return function(){var c=this.light.distance?this.light.distance:10000;var d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(c,j,b,h){this.object=c;this.size=(j!==undefined)?j:1;var d=(b!==undefined)?b:16711680;var a=(h!==undefined)?h:1;var i=0;var f=this.object.geometry;if(f instanceof THREE.Geometry){i=f.faces.length*3}else{if(f instanceof THREE.BufferGeometry){i=f.attributes.normal.count}}var g=new THREE.BufferGeometry();var e=new THREE.Float32Attribute(i*2*3,3);g.addAttribute("position",e);THREE.LineSegments.call(this,g,new THREE.LineBasicMaterial({color:d,linewidth:a}));this.matrixAutoUpdate=false;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;THREE.VertexNormalsHelper.prototype.update=(function(){var d=new THREE.Vector3();var b=new THREE.Vector3();var a=new THREE.Matrix3();return function c(){var A=["a","b","c"];this.object.updateMatrixWorld(true);a.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld;var n=this.geometry.attributes.position;var q=this.object.geometry;if(q instanceof THREE.Geometry){var s=q.vertices;var f=q.faces;var v=0;for(var m=0,g=f.length;m<g;m++){var u=f[m];for(var h=0,k=u.vertexNormals.length;h<k;h++){var p=s[u[A[h]]];var r=u.vertexNormals[h];d.copy(p).applyMatrix4(e);b.copy(r).applyMatrix3(a).normalize().multiplyScalar(this.size).add(d);n.setXYZ(v,d.x,d.y,d.z);v=v+1;n.setXYZ(v,b.x,b.y,b.z);v=v+1}}}else{if(q instanceof THREE.BufferGeometry){var t=q.attributes.position;var o=q.attributes.normal;var v=0;for(var h=0,k=t.count;h<k;h++){d.set(t.getX(h),t.getY(h),t.getZ(h)).applyMatrix4(e);b.set(o.getX(h),o.getY(h),o.getZ(h));b.applyMatrix3(a).normalize().multiplyScalar(this.size).add(d);n.setXYZ(v,d.x,d.y,d.z);v=v+1;n.setXYZ(v,b.x,b.y,b.z);v=v+1}}}n.needsUpdate=true;return this}}());THREE.WireframeHelper=function(b,c){var a=(c!==undefined)?c:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(b.geometry),new THREE.LineBasicMaterial({color:a}));this.matrix=b.matrixWorld;this.matrixAutoUpdate=false};THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(a){THREE.Object3D.call(this);this.material=a;this.render=function(b){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.MorphBlendMesh=function(g,d){THREE.Mesh.call(this,g,d);this.animationsMap={};this.animationsList=[];var f=this.geometry.morphTargets.length;var b="__default";var c=0;var a=f-1;var e=f/1;this.createAnimation(b,c,a,e);this.setAnimationWeight(b,1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;THREE.MorphBlendMesh.prototype.createAnimation=function(b,e,a,d){var c={start:e,end:a,length:a-e+1,fps:d,duration:(a-e)/d,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[b]=c;this.animationsList.push(c)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(c){var h=/([a-z]+)_?(\d+)/;var b,f={};var j=this.geometry;for(var d=0,k=j.morphTargets.length;d<k;d++){var l=j.morphTargets[d];var g=l.name.match(h);if(g&&g.length>1){var a=g[1];if(!f[a]){f[a]={start:Infinity,end:-Infinity}}var e=f[a];if(d<e.start){e.start=d}if(d>e.end){e.end=d}if(!b){b=a}}}for(var a in f){var e=f[a];this.createAnimation(a,e.start,e.end,c)}this.firstAnimation=b};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){var b=this.animationsMap[a];if(b){b.direction=1;b.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){var b=this.animationsMap[a];if(b){b.direction=-1;b.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,c){var b=this.animationsMap[a];if(b){b.fps=c;b.duration=(b.end-b.start)/b.fps}};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,c){var b=this.animationsMap[a];if(b){b.duration=c;b.fps=(b.end-b.start)/b.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,c){var b=this.animationsMap[a];if(b){b.weight=c}};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,c){var b=this.animationsMap[a];if(b){b.time=c}};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var c=0;var b=this.animationsMap[a];if(b){c=b.time}return c};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var c=-1;var b=this.animationsMap[a];if(b){c=b.duration}return c};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];if(b){b.time=0;b.active=true}else{console.warn("THREE.MorphBlendMesh: animation["+a+"] undefined in .playAnimation()")}};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){var b=this.animationsMap[a];if(b){b.active=false}};THREE.MorphBlendMesh.prototype.update=function(h){for(var c=0,a=this.animationsList.length;c<a;c++){var g=this.animationsList[c];if(!g.active){continue}var e=g.duration/g.length;g.time+=g.direction*h;if(g.mirroredLoop){if(g.time>g.duration||g.time<0){g.direction*=-1;if(g.time>g.duration){g.time=g.duration;g.directionBackwards=true}if(g.time<0){g.time=0;g.directionBackwards=false}}}else{g.time=g.time%g.duration;if(g.time<0){g.time+=g.duration}}var b=g.start+THREE.Math.clamp(Math.floor(g.time/e),0,g.length-1);var f=g.weight;if(b!==g.currentFrame){this.morphTargetInfluences[g.lastFrame]=0;this.morphTargetInfluences[g.currentFrame]=1*f;this.morphTargetInfluences[b]=0;g.lastFrame=g.currentFrame;g.currentFrame=b}var d=(g.time%e)/e;if(g.directionBackwards){d=1-d}if(g.currentFrame!==g.lastFrame){this.morphTargetInfluences[g.currentFrame]=d*f;this.morphTargetInfluences[g.lastFrame]=(1-d)*f}else{this.morphTargetInfluences[g.currentFrame]=f}}};